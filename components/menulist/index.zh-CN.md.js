webpackJsonp([115,173],{748:function(n,s){n.exports={content:["section",["p","\u6811\u5f62\u53ef\u6298\u53e0\u5bfc\u822a"],["h2","\u4f7f\u7528\u573a\u666f"],["p","\u591a\u540c\u7ea7\u9875\u9762\u5207\u6362"],["h2","\u56fe\u7247\u5c55\u793a"],["p",["img",{"class":"preview-img good",description:"\u56fe\u7247\u5c55\u793a",src:"https://app-design.github.io/s/menu-list-01.png"}],"\n",["img",{"class":"preview-img good",description:"\u56fe\u7247\u5c55\u793a",src:"https://app-design.github.io/s/menu-list-02.png"}]]],meta:{category:"Components",type:"\u7ec4\u4ef6",title:"MenuList",subtitle:"\u83dc\u5355\u680f",filename:"components/menulist/index.zh-CN.md"},description:["section"],toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#\u4f7f\u7528\u573a\u666f",title:"\u4f7f\u7528\u573a\u666f"},"\u4f7f\u7528\u573a\u666f"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u56fe\u7247\u5c55\u793a",title:"\u56fe\u7247\u5c55\u793a"},"\u56fe\u7247\u5c55\u793a"]],["li",["a",{className:"bisheng-toc-h2",href:"#API",title:"API"},"API"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u4f7f\u7528\u6848\u4f8b",title:"\u4f7f\u7528\u6848\u4f8b"},"\u4f7f\u7528\u6848\u4f8b"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u4f7f\u7528\u6321\u677f\u6570\u636e",title:"\u4f7f\u7528\u6321\u677f\u6570\u636e"},"\u4f7f\u7528\u6321\u677f\u6570\u636e"]]],api:["section",["h2","API"],["p","\u5c5e\u6027\u8bf4\u660e\u5982\u4e0b\uff1a"],["table",["thead",["tr",["th","\u5c5e\u6027"],["th","\u8bf4\u660e"],["th","\u7c7b\u578b"],["th","\u9ed8\u8ba4\u503c"]]],["tbody",["tr",["td","renderHeader"],["td","\u81ea\u5b9a\u4e49\u5206\u7ec4\u7ec4\u5934(\u8bbe\u7f6e\u540esectionHeaderStyle\u3001sectionHeaderTextStyle\u3001selectedBgColor\u65e0\u6548) data\u4e3aloadSectionData\u8fd4\u56de\u6570\u636e\u4e2d\u6bcf\u7ec4\u7684\u6570\u636e"],["td","function(data)"],["td","-"]],["tr",["td","sectionHeaderStyle"],["td","\u8bbe\u7f6e\u5206\u7ec4\u7ec4\u5934\u6837\u5f0f"],["td","style"],["td","-"]],["tr",["td","sectionHeaderTextStyle"],["td","\u8bbe\u7f6e\u5206\u7ec4\u7ec4\u5934\u6587\u5b57\u6837\u5f0f"],["td","style"],["td","-"]],["tr",["td","selectedBgColor"],["td","\u8bbe\u7f6e\u5206\u7ec4\u7ec4\u5934\u6253\u5f00\u65f6\u80cc\u666f\u989c\u8272"],["td","style"],["td","'#f7f7f7'"]],["tr",["td","renderRow"],["td","\u81ea\u5b9a\u4e49\u5217\u8868(\u8bbe\u7f6e\u540erowStyle\u3001rowTextStyle\u3001renderHeightRow\u3001icon\u65e0\u6548) data\u4e3aloadRowData\u8fd4\u56de\u6570\u636e\u4e2d\u6bcf\u7ec4\u7684\u6570\u636e"],["td","function(dataSource)"],["td","-"]],["tr",["td","rowStyle"],["td","\u8bbe\u7f6e\u5217\u8868\u6837\u5f0f"],["td","style"],["td","-"]],["tr",["td","rowTextStyle"],["td","\u8bbe\u7f6e\u5217\u8868\u6587\u5b57\u6837\u5f0f"],["td","style"],["td","-"]],["tr",["td","renderHeightRow"],["td","\u81ea\u5b9a\u4e49\u5217\u8868\u4e2d\u9ad8\u4eae\u5185\u5bb9 dataSource\u4e3a\u9ad8\u4eae\u5185\u5bb9"],["td","function(dataSource)"],["td","-"]],["tr",["td","icon"],["td","\u5217\u8868\u5de6\u90e8\u56fe\u6807"],["td","source"],["td","-"]],["tr",["td","onChangeText"],["td","\u83b7\u53d6\u641c\u7d22\u6846\u8f93\u5165\u7684\u6587\u5b57 text\u4e3a\u6587\u5b57\u5185\u5bb9"],["td","function(text)"],["td","-"]],["tr",["td","dataSource"],["td","\u521d\u59cb\u5316\u5206\u7ec4\u6570\u636e\u6e90"],["td","array"],["td","-"]],["tr",["td","loadRowData"],["td","\u52a0\u8f7d\u67d0\u7ec4\u4e0b\u5217\u8868\u6570\u636e page \u9875\u7801 option {..., firstLoad , allLoaded}   firstLoad\u662f\u5426\u4e3a\u7b2c\u4e00\u6b21\u52a0\u8f7d  allLoaded\u662f\u5426\u5168\u90e8\u52a0\u8f7d\u5b8c selectedItem \u9009\u4e2d\u7684\u7ec4,\u4e0d\u53ef\u4e3a\u7a7a text \u641c\u7d22\u7684\u6587\u5b57,\u53ef\u4e3a\u7a7a"],["td","function(page, option, selectedItem, text)"],["td","-"]],["tr",["td","loadSectionData"],["td","\u52a0\u8f7d\u5206\u7ec4\u6570\u636e text\u4e3a\u641c\u7d22\u6587\u5b57,\u53ef\u4e3a\u7a7a"],["td","function(text)"],["td","-"]],["tr",["td","onRowPress"],["td","\u70b9\u51fb\u67d0\u5217\u8868\u4e8b\u4ef6 data\u4e3aloadRowData\u8fd4\u56de\u6570\u636e\u4e2d\u6bcf\u7ec4\u7684\u6570\u636e"],["td","function(data)"],["td","-"]],["tr",["td","openFirstSection"],["td","\u662f\u5426\u9ed8\u8ba4\u6253\u5f00\u7b2c\u4e00\u7ec4"],["td","bool"],["td","false"]],["tr",["td","viewStyle"],["td","\u7ec4\u4ef6\u6574\u4f53\u6837\u5f0f"],["td","style"],["td","-"]]]],["p","\u5206\u7ec4\u6570\u636e\u6e90:"],["pre",{lang:null,highlighted:'      <span class="token punctuation">[</span>\n                  {\n                      key<span class="token punctuation">:</span><span class="token string">\'\u6218\u7565\u5ba2\u6237\'</span><span class="token punctuation">,</span>\n                      rows<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                      count<span class="token punctuation">:</span><span class="token string">\'100\'</span>\n                  }<span class="token punctuation">,</span>\n                  {\n                      key<span class="token punctuation">:</span><span class="token string">\'\u6f5c\u5728\u5ba2\u6237\'</span><span class="token punctuation">,</span>\n                      rows<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                      count<span class="token punctuation">:</span><span class="token string">\'100\'</span>\n                  }<span class="token punctuation">,</span>\n      <span class="token punctuation">]</span>\n      \n      '},["code","      [\n                  {\n                      key:'\u6218\u7565\u5ba2\u6237',\n                      rows:[],\n                      count:'100'\n                  },\n                  {\n                      key:'\u6f5c\u5728\u5ba2\u6237',\n                      rows:[],\n                      count:'100'\n                  },\n      ]\n      \n      "]],["p","\u5217\u8868\u6570\u636e\u6e90:"],["pre",{lang:null,highlighted:'      <span class="token punctuation">[</span>\n                  {value<span class="token punctuation">:</span><span class="token string">\'\u56fd\u5bb6\u7535\u7f51\u516c\u53f81\'</span>}<span class="token punctuation">,</span>\n                  {value<span class="token punctuation">:</span><span class="token string">\'\u56fd\u5bb6\u7535\u7f51\u516c\u53f82\'</span>}<span class="token punctuation">,</span>\n                  {value<span class="token punctuation">:</span><span class="token string">\'\u56fd\u5bb6\u7535\u7f51\u516c\u53f83\'</span>}<span class="token punctuation">,</span>\n      <span class="token punctuation">]</span>'},["code","      [\n                  {value:'\u56fd\u5bb6\u7535\u7f51\u516c\u53f81'},\n                  {value:'\u56fd\u5bb6\u7535\u7f51\u516c\u53f82'},\n                  {value:'\u56fd\u5bb6\u7535\u7f51\u516c\u53f83'},\n      ]"]],["h2","\u4f7f\u7528\u6848\u4f8b"],["pre",{lang:null,highlighted:'<span class="token string">\'use strict\'</span><span class="token comment" spellcheck="true">;</span>\n\nimport React<span class="token punctuation">,</span> {PropTypes} from <span class="token string">\'react\'</span><span class="token comment" spellcheck="true">;</span>\nimport {View<span class="token punctuation">,</span> StyleSheet<span class="token punctuation">,</span> Text<span class="token punctuation">,</span> TouchableOpacity<span class="token punctuation">,</span> Image} from <span class="token string">\'react-native\'</span><span class="token comment" spellcheck="true">;</span>\nimport TopViewMenuList from <span class="token string">\'../topview-menu-list\'</span>\nimport User from <span class="token string">\'./User\'</span>\nclass index extends React<span class="token punctuation">.</span>Component {\n    <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> context<span class="token punctuation">)</span> {\n        <span class="token function">super</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        this<span class="token punctuation">.</span>state <span class="token operator">=</span> {\n            dataSource<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n        }\n    }\n\n<span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> {\n    let {dataSource} <span class="token operator">=</span> this<span class="token punctuation">.</span>state\n    return <span class="token punctuation">(</span>\n        <span class="token operator">&lt;</span>View style<span class="token operator">=</span>{<span class="token punctuation">[</span>styles<span class="token punctuation">.</span>container<span class="token punctuation">,</span>this<span class="token punctuation">.</span>props<span class="token punctuation">.</span>style<span class="token punctuation">]</span>}<span class="token operator">></span>\n            <span class="token operator">&lt;</span>TopViewMenuList dataSource<span class="token operator">=</span>{dataSource}\n                             loadRowData<span class="token operator">=</span>{this<span class="token punctuation">.</span>_loadRowData}\n                             loadSectionData<span class="token operator">=</span>{this<span class="token punctuation">.</span>_loadSectionData}\n                <span class="token operator">/</span><span class="token operator">/</span>renderRow<span class="token operator">=</span>{this<span class="token punctuation">.</span>_renderRow}\n                <span class="token operator">/</span><span class="token operator">/</span>renderHeader<span class="token operator">=</span>{this<span class="token punctuation">.</span>_renderHeader}\n                             onChangeText<span class="token operator">=</span>{this<span class="token punctuation">.</span>_onChangeText}\n                             onRowPress<span class="token operator">=</span>{this<span class="token punctuation">.</span>_onRowPress}\n                             renderHeightRow<span class="token operator">=</span>{this<span class="token punctuation">.</span>_renderHeightRow}\n                             icon<span class="token operator">=</span>{<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'./img/Results_icon@2x.png\'</span><span class="token punctuation">)</span>}\n                <span class="token operator">/</span><span class="token operator">/</span>selectedBgColor<span class="token operator">=</span><span class="token string">\'red\'</span>\n                             openFirstSection<span class="token operator">=</span>{<span class="token boolean">false</span>}\n                             viewStyle<span class="token operator">=</span>{{width<span class="token punctuation">:</span><span class="token number">320</span>}}\n            <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span><span class="token operator">/</span>View<span class="token operator">></span>\n    <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}\n\n<span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> {\n    let dataSource <span class="token operator">=</span> User<span class="token punctuation">.</span><span class="token function">getSections</span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span>\n    this<span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span>{dataSource}<span class="token punctuation">)</span>\n}\n\n_loadSectionData <span class="token operator">=</span> <span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span> {\n    let dataSource <span class="token operator">=</span> User<span class="token punctuation">.</span><span class="token function">getSections</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span>\n    return dataSource\n}\n_renderRow <span class="token operator">=</span> <span class="token punctuation">(</span>dataSource<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span> {\n    return <span class="token punctuation">(</span>\n        <span class="token operator">&lt;</span>TouchableOpacity style<span class="token operator">=</span>{<span class="token punctuation">[</span>styles<span class="token punctuation">.</span>row<span class="token punctuation">]</span>}<span class="token operator">></span>\n            <span class="token operator">&lt;</span>Text style<span class="token operator">=</span>{<span class="token punctuation">[</span>styles<span class="token punctuation">.</span>rowText<span class="token punctuation">]</span>}<span class="token operator">></span>{dataSource<span class="token punctuation">.</span>value}<span class="token operator">&lt;</span><span class="token operator">/</span>Text<span class="token operator">></span>\n        <span class="token operator">&lt;</span><span class="token operator">/</span>TouchableOpacity<span class="token operator">></span>\n    <span class="token punctuation">)</span>\n}\n_renderHeightRow <span class="token operator">=</span> <span class="token punctuation">(</span>dataSource<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span> {\n    return <span class="token punctuation">(</span>\n        <span class="token operator">&lt;</span>Text style<span class="token operator">=</span>{<span class="token punctuation">[</span>styles<span class="token punctuation">.</span>rowText<span class="token punctuation">]</span>}<span class="token operator">></span>{dataSource}<span class="token operator">&lt;</span><span class="token operator">/</span>Text<span class="token operator">></span>\n    <span class="token punctuation">)</span>\n}\n_onChangeText <span class="token operator">=</span> <span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span> {\n\n}\n_onRowPress <span class="token operator">=</span> <span class="token punctuation">(</span>dataSource<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span> {\n    console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span>dataSource<span class="token punctuation">)</span>\n}\n_renderHeader <span class="token operator">=</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span> {\n    return <span class="token punctuation">(</span>\n        <span class="token operator">&lt;</span>TouchableOpacity style<span class="token operator">=</span>{<span class="token punctuation">[</span>styles<span class="token punctuation">.</span>SectionHeader<span class="token punctuation">]</span>}<span class="token operator">></span>\n            <span class="token operator">&lt;</span>Text style<span class="token operator">=</span>{<span class="token punctuation">[</span>styles<span class="token punctuation">.</span>SectionHeaderText<span class="token punctuation">]</span>}<span class="token operator">></span>{data<span class="token punctuation">.</span>key}<span class="token operator">&lt;</span><span class="token operator">/</span>Text<span class="token operator">></span>\n            <span class="token operator">&lt;</span>Text style<span class="token operator">=</span>{<span class="token punctuation">[</span>styles<span class="token punctuation">.</span>SectionHeaderText<span class="token punctuation">]</span>}<span class="token operator">></span>\u5171{data<span class="token punctuation">.</span>count}\u5bb6<span class="token operator">&lt;</span><span class="token operator">/</span>Text<span class="token operator">></span>\n        <span class="token operator">&lt;</span><span class="token operator">/</span>TouchableOpacity<span class="token operator">></span>\n    <span class="token punctuation">)</span>\n}\n_loadRowData <span class="token operator">=</span> <span class="token punctuation">(</span>page<span class="token punctuation">,</span> option<span class="token punctuation">,</span> selectedItem<span class="token punctuation">,</span> text<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span> {\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'_loadRowData\'</span><span class="token punctuation">)</span>\n    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>\n     <span class="token operator">*</span> page \u9875\u7801\n     <span class="token operator">*</span> option {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> firstLoad <span class="token punctuation">,</span> allLoaded}   firstLoad\u662f\u5426\u4e3a\u7b2c\u4e00\u6b21\u52a0\u8f7d  allLoaded\u662f\u5426\u5168\u90e8\u52a0\u8f7d\u5b8c\n     <span class="token operator">*</span> selectedItem \u9009\u4e2d\u7684\u7ec4<span class="token punctuation">,</span>\u4e0d\u53ef\u4e3a\u7a7a\n     <span class="token operator">*</span> text \u641c\u7d22\u7684\u6587\u5b57<span class="token punctuation">,</span>\u53ef\u4e3a\u7a7a\n     <span class="token operator">*</span> <span class="token operator">*</span><span class="token operator">/</span>\n    let dataSource <span class="token operator">=</span> User<span class="token punctuation">.</span><span class="token function">getRows</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> selectedItem<span class="token punctuation">,</span> text<span class="token punctuation">)</span>\n\n\n    <span class="token operator">/</span><span class="token operator">/</span>\u5224\u65ad\u662f\u5426\u5230\u6700\u540e\u4e00\u9875<span class="token punctuation">,</span>\u53ef\u6839\u636e\u8fd4\u56de\u7684\u6761\u6570\u5224\u65ad\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>page <span class="token operator">==</span><span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">)</span> {\n        option <span class="token operator">=</span> {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>option<span class="token punctuation">,</span> allLoaded<span class="token punctuation">:</span> <span class="token boolean">true</span>}\n    }\n\n    return {dataSource<span class="token punctuation">:</span> dataSource<span class="token punctuation">,</span> option<span class="token punctuation">:</span> option}\n}\n}\n<span class="token keyword">const</span> styles <span class="token operator">=</span> StyleSheet<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>{\n    container<span class="token punctuation">:</span> {\n        flex<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n    row<span class="token punctuation">:</span> {\n        height<span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">,</span>\n        alignItems<span class="token punctuation">:</span> <span class="token string">\'center\'</span><span class="token punctuation">,</span>\n        paddingHorizontal<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n        flexDirection<span class="token punctuation">:</span> <span class="token string">\'row\'</span>\n    }<span class="token punctuation">,</span>\n    rowText<span class="token punctuation">:</span> {\n        fontSize<span class="token punctuation">:</span> <span class="token number">14</span><span class="token punctuation">,</span>\n        color<span class="token punctuation">:</span> <span class="token string">\'red\'</span>\n    }<span class="token punctuation">,</span>\n    SectionHeader<span class="token punctuation">:</span> {\n        height<span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">,</span>\n        alignItems<span class="token punctuation">:</span> <span class="token string">\'center\'</span><span class="token punctuation">,</span>\n        paddingHorizontal<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n        borderBottomWidth<span class="token punctuation">:</span> StyleSheet<span class="token punctuation">.</span>hairlineWidth<span class="token punctuation">,</span>\n        borderTopWidth<span class="token punctuation">:</span> StyleSheet<span class="token punctuation">.</span>hairlineWidth<span class="token punctuation">,</span>\n        borderColor<span class="token punctuation">:</span> <span class="token string">\'#ccc\'</span><span class="token punctuation">,</span>\n        backgroundColor<span class="token punctuation">:</span> <span class="token string">\'white\'</span><span class="token punctuation">,</span>\n        flexDirection<span class="token punctuation">:</span> <span class="token string">\'row\'</span><span class="token punctuation">,</span>\n        justifyContent<span class="token punctuation">:</span> <span class="token string">\'space-between\'</span>\n    }<span class="token punctuation">,</span>\n    SectionHeaderText<span class="token punctuation">:</span> {\n        fontSize<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">,</span>\n    }<span class="token punctuation">,</span>\n}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\nexport <span class="token keyword">default</span> index<span class="token comment" spellcheck="true">;</span>\n    '},["code","'use strict';\n\nimport React, {PropTypes} from 'react';\nimport {View, StyleSheet, Text, TouchableOpacity, Image} from 'react-native';\nimport TopViewMenuList from '../topview-menu-list'\nimport User from './User'\nclass index extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            dataSource: []\n        }\n    }\n\nrender() {\n    let {dataSource} = this.state\n    return (\n        <View style={[styles.container,this.props.style]}>\n            <TopViewMenuList dataSource={dataSource}\n                             loadRowData={this._loadRowData}\n                             loadSectionData={this._loadSectionData}\n                //renderRow={this._renderRow}\n                //renderHeader={this._renderHeader}\n                             onChangeText={this._onChangeText}\n                             onRowPress={this._onRowPress}\n                             renderHeightRow={this._renderHeightRow}\n                             icon={require('./img/Results_icon@2x.png')}\n                //selectedBgColor='red'\n                             openFirstSection={false}\n                             viewStyle={{width:320}}\n            />\n        </View>\n    );\n}\n\ncomponentDidMount() {\n    let dataSource = User.getSections('')\n    this.setState({dataSource})\n}\n\n_loadSectionData = (text)=> {\n    let dataSource = User.getSections(text)\n    return dataSource\n}\n_renderRow = (dataSource)=> {\n    return (\n        <TouchableOpacity style={[styles.row]}>\n            <Text style={[styles.rowText]}>{dataSource.value}</Text>\n        </TouchableOpacity>\n    )\n}\n_renderHeightRow = (dataSource)=> {\n    return (\n        <Text style={[styles.rowText]}>{dataSource}</Text>\n    )\n}\n_onChangeText = (text)=> {\n\n}\n_onRowPress = (dataSource)=> {\n    console.warn(dataSource)\n}\n_renderHeader = (data)=> {\n    return (\n        <TouchableOpacity style={[styles.SectionHeader]}>\n            <Text style={[styles.SectionHeaderText]}>{data.key}</Text>\n            <Text style={[styles.SectionHeaderText]}>\u5171{data.count}\u5bb6</Text>\n        </TouchableOpacity>\n    )\n}\n_loadRowData = (page, option, selectedItem, text)=> {\n    console.log('_loadRowData')\n    /**\n     * page \u9875\u7801\n     * option {..., firstLoad , allLoaded}   firstLoad\u662f\u5426\u4e3a\u7b2c\u4e00\u6b21\u52a0\u8f7d  allLoaded\u662f\u5426\u5168\u90e8\u52a0\u8f7d\u5b8c\n     * selectedItem \u9009\u4e2d\u7684\u7ec4,\u4e0d\u53ef\u4e3a\u7a7a\n     * text \u641c\u7d22\u7684\u6587\u5b57,\u53ef\u4e3a\u7a7a\n     * */\n    let dataSource = User.getRows(page, selectedItem, text)\n\n\n    //\u5224\u65ad\u662f\u5426\u5230\u6700\u540e\u4e00\u9875,\u53ef\u6839\u636e\u8fd4\u56de\u7684\u6761\u6570\u5224\u65ad\n    if (page === 3) {\n        option = {...option, allLoaded: true}\n    }\n\n    return {dataSource: dataSource, option: option}\n}\n}\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    row: {\n        height: 40,\n        alignItems: 'center',\n        paddingHorizontal: 20,\n        flexDirection: 'row'\n    },\n    rowText: {\n        fontSize: 14,\n        color: 'red'\n    },\n    SectionHeader: {\n        height: 40,\n        alignItems: 'center',\n        paddingHorizontal: 20,\n        borderBottomWidth: StyleSheet.hairlineWidth,\n        borderTopWidth: StyleSheet.hairlineWidth,\n        borderColor: '#ccc',\n        backgroundColor: 'white',\n        flexDirection: 'row',\n        justifyContent: 'space-between'\n    },\n    SectionHeaderText: {\n        fontSize: 16,\n    },\n});\n\nexport default index;\n    "]],["h2","\u4f7f\u7528\u6321\u677f\u6570\u636e"],["pre",{lang:null,highlighted:'<span class="token string">\'use strict\'</span><span class="token comment" spellcheck="true">;</span>\n\nimport React<span class="token punctuation">,</span> {PropTypes} from <span class="token string">\'react\'</span><span class="token comment" spellcheck="true">;</span>\nimport {View<span class="token punctuation">,</span> StyleSheet<span class="token punctuation">,</span> Text<span class="token punctuation">,</span> TouchableOpacity<span class="token punctuation">,</span> Image} from <span class="token string">\'react-native\'</span><span class="token comment" spellcheck="true">;</span>\n\nclass User {\n    <span class="token keyword">static</span> <span class="token function">getSections</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span> <span class="token punctuation">:</span>Promise{\n        <span class="token function">if</span><span class="token punctuation">(</span>text <span class="token operator">==</span> <span class="token string">\'1\'</span><span class="token punctuation">)</span>{\n            return <span class="token punctuation">[</span>\n                {\n                    key<span class="token punctuation">:</span><span class="token string">\'\u6218\u7565\u5ba2\u6237\'</span><span class="token punctuation">,</span>\n                    rows<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                    count<span class="token punctuation">:</span><span class="token string">\'100\'</span>\n                }<span class="token punctuation">,</span>\n                {\n                    key<span class="token punctuation">:</span><span class="token string">\'\u6f5c\u5728\u5ba2\u6237\'</span><span class="token punctuation">,</span>\n                    rows<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                    count<span class="token punctuation">:</span><span class="token string">\'100\'</span>\n                }<span class="token punctuation">,</span>\n            <span class="token punctuation">]</span>\n        }\n        return <span class="token punctuation">[</span>\n            {\n                key<span class="token punctuation">:</span><span class="token string">\'\u6218\u7565\u5ba2\u6237\'</span><span class="token punctuation">,</span>\n                rows<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                count<span class="token punctuation">:</span><span class="token string">\'10\'</span>\n            }<span class="token punctuation">,</span>\n            {\n                key<span class="token punctuation">:</span><span class="token string">\'\u6f5c\u5728\u5ba2\u6237\'</span><span class="token punctuation">,</span>\n                rows<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                count<span class="token punctuation">:</span><span class="token string">\'10\'</span>\n            }<span class="token punctuation">,</span>\n        <span class="token punctuation">]</span>\n    }\n    <span class="token keyword">static</span> <span class="token function">getRows</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span>key<span class="token punctuation">,</span>text<span class="token punctuation">)</span> <span class="token punctuation">:</span>Promise{\n        <span class="token function">if</span><span class="token punctuation">(</span>text <span class="token operator">==</span> <span class="token string">\'1\'</span><span class="token punctuation">)</span>{\n            return <span class="token punctuation">[</span>\n                {value<span class="token punctuation">:</span><span class="token string">\'\u56fd\u5bb6\u7535\u7f51\u516c\u53f81\'</span>}<span class="token punctuation">,</span>\n                {value<span class="token punctuation">:</span><span class="token string">\'\u56fd\u5bb6\u7535\u7f51\u516c\u53f810\'</span>}\n            <span class="token punctuation">]</span>\n        }\n        <span class="token function">if</span><span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token string">\'\u6218\u7565\u5ba2\u6237\'</span><span class="token punctuation">)</span>{\n            return <span class="token punctuation">[</span>{value<span class="token punctuation">:</span><span class="token string">\'\u56fd\u5bb6\u7535\u7f51\u516c\u53f8\'</span>}<span class="token punctuation">,</span>{value<span class="token punctuation">:</span><span class="token string">\'row2\'</span>}<span class="token punctuation">,</span>{value<span class="token punctuation">:</span><span class="token string">\'row3\'</span>}<span class="token punctuation">,</span>{value<span class="token punctuation">:</span><span class="token string">\'row4\'</span>}<span class="token punctuation">,</span>{value<span class="token punctuation">:</span><span class="token string">\'row5\'</span>}<span class="token punctuation">,</span>{value<span class="token punctuation">:</span><span class="token string">\'row6\'</span>}<span class="token punctuation">,</span>{value<span class="token punctuation">:</span><span class="token string">\'row7\'</span>}<span class="token punctuation">,</span>{value<span class="token punctuation">:</span><span class="token string">\'row8\'</span>}<span class="token punctuation">,</span>{value<span class="token punctuation">:</span><span class="token string">\'row9\'</span>}<span class="token punctuation">]</span>\n        }\n        <span class="token function">if</span><span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token string">\'\u6f5c\u5728\u5ba2\u6237\'</span><span class="token punctuation">)</span>{\n            return <span class="token punctuation">[</span>{value<span class="token punctuation">:</span><span class="token string">\'\u56fd\u5bb6\u7535\u7f51\u516c\u53f81\'</span>}<span class="token punctuation">,</span>{value<span class="token punctuation">:</span><span class="token string">\'\u56fd\u5bb6\u7535\u7f51\u516c\u53f82\'</span>}<span class="token punctuation">,</span>{value<span class="token punctuation">:</span><span class="token string">\'\u56fd\u5bb6\u7535\u7f51\u516c\u53f83\'</span>}<span class="token punctuation">,</span>{value<span class="token punctuation">:</span><span class="token string">\'\u56fd\u5bb6\u7535\u7f51\u516c\u53f84\'</span>}<span class="token punctuation">,</span>{value<span class="token punctuation">:</span><span class="token string">\'\u56fd\u5bb6\u7535\u7f51\u516c\u53f85\'</span>}<span class="token punctuation">,</span>{value<span class="token punctuation">:</span><span class="token string">\'\u56fd\u5bb6\u7535\u7f51\u516c\u53f86\'</span>}<span class="token punctuation">,</span>{value<span class="token punctuation">:</span><span class="token string">\'\u56fd\u5bb6\u7535\u7f51\u516c\u53f87\'</span>}<span class="token punctuation">,</span>{value<span class="token punctuation">:</span><span class="token string">\'\u56fd\u5bb6\u7535\u7f51\u516c\u53f88\'</span>}<span class="token punctuation">,</span>{value<span class="token punctuation">:</span><span class="token string">\'\u56fd\u5bb6\u7535\u7f51\u516c\u53f89\'</span>}<span class="token punctuation">]</span>\n        }\n        return <span class="token punctuation">[</span>{value<span class="token punctuation">:</span><span class="token string">\'\u56fd\u5bb6\u7535\u7f51\u516c\u53f81\'</span>}<span class="token punctuation">,</span>{value<span class="token punctuation">:</span><span class="token string">\'\u56fd\u5bb6\u7535\u7f51\u516c\u53f82\'</span>}<span class="token punctuation">,</span>{value<span class="token punctuation">:</span><span class="token string">\'\u56fd\u5bb6\u7535\u7f51\u516c\u53f83\'</span>}<span class="token punctuation">,</span>{value<span class="token punctuation">:</span><span class="token string">\'\u56fd\u5bb6\u7535\u7f51\u516c\u53f84\'</span>}<span class="token punctuation">,</span>{value<span class="token punctuation">:</span><span class="token string">\'\u56fd\u5bb6\u7535\u7f51\u516c\u53f85\'</span>}<span class="token punctuation">,</span>{value<span class="token punctuation">:</span><span class="token string">\'\u56fd\u5bb6\u7535\u7f51\u516c\u53f86\'</span>}<span class="token punctuation">,</span>{value<span class="token punctuation">:</span><span class="token string">\'\u56fd\u5bb6\u7535\u7f51\u516c\u53f87\'</span>}<span class="token punctuation">,</span>{value<span class="token punctuation">:</span><span class="token string">\'\u56fd\u5bb6\u7535\u7f51\u516c\u53f88\'</span>}<span class="token punctuation">,</span>{value<span class="token punctuation">:</span><span class="token string">\'\u56fd\u5bb6\u7535\u7f51\u516c\u53f89\'</span>}<span class="token punctuation">]</span>\n    }\n\n}\n\nexport <span class="token keyword">default</span> User<span class="token comment" spellcheck="true">;</span>'
},["code","'use strict';\n\nimport React, {PropTypes} from 'react';\nimport {View, StyleSheet, Text, TouchableOpacity, Image} from 'react-native';\n\nclass User {\n    static getSections(text) :Promise{\n        if(text == '1'){\n            return [\n                {\n                    key:'\u6218\u7565\u5ba2\u6237',\n                    rows:[],\n                    count:'100'\n                },\n                {\n                    key:'\u6f5c\u5728\u5ba2\u6237',\n                    rows:[],\n                    count:'100'\n                },\n            ]\n        }\n        return [\n            {\n                key:'\u6218\u7565\u5ba2\u6237',\n                rows:[],\n                count:'10'\n            },\n            {\n                key:'\u6f5c\u5728\u5ba2\u6237',\n                rows:[],\n                count:'10'\n            },\n        ]\n    }\n    static getRows(page,key,text) :Promise{\n        if(text == '1'){\n            return [\n                {value:'\u56fd\u5bb6\u7535\u7f51\u516c\u53f81'},\n                {value:'\u56fd\u5bb6\u7535\u7f51\u516c\u53f810'}\n            ]\n        }\n        if(key == '\u6218\u7565\u5ba2\u6237'){\n            return [{value:'\u56fd\u5bb6\u7535\u7f51\u516c\u53f8'},{value:'row2'},{value:'row3'},{value:'row4'},{value:'row5'},{value:'row6'},{value:'row7'},{value:'row8'},{value:'row9'}]\n        }\n        if(key == '\u6f5c\u5728\u5ba2\u6237'){\n            return [{value:'\u56fd\u5bb6\u7535\u7f51\u516c\u53f81'},{value:'\u56fd\u5bb6\u7535\u7f51\u516c\u53f82'},{value:'\u56fd\u5bb6\u7535\u7f51\u516c\u53f83'},{value:'\u56fd\u5bb6\u7535\u7f51\u516c\u53f84'},{value:'\u56fd\u5bb6\u7535\u7f51\u516c\u53f85'},{value:'\u56fd\u5bb6\u7535\u7f51\u516c\u53f86'},{value:'\u56fd\u5bb6\u7535\u7f51\u516c\u53f87'},{value:'\u56fd\u5bb6\u7535\u7f51\u516c\u53f88'},{value:'\u56fd\u5bb6\u7535\u7f51\u516c\u53f89'}]\n        }\n        return [{value:'\u56fd\u5bb6\u7535\u7f51\u516c\u53f81'},{value:'\u56fd\u5bb6\u7535\u7f51\u516c\u53f82'},{value:'\u56fd\u5bb6\u7535\u7f51\u516c\u53f83'},{value:'\u56fd\u5bb6\u7535\u7f51\u516c\u53f84'},{value:'\u56fd\u5bb6\u7535\u7f51\u516c\u53f85'},{value:'\u56fd\u5bb6\u7535\u7f51\u516c\u53f86'},{value:'\u56fd\u5bb6\u7535\u7f51\u516c\u53f87'},{value:'\u56fd\u5bb6\u7535\u7f51\u516c\u53f88'},{value:'\u56fd\u5bb6\u7535\u7f51\u516c\u53f89'}]\n    }\n\n}\n\nexport default User;"]],["style",'\n[id^="components-button-demo-"] .ant-btn {\n  margin-right: 8px;\n  margin-bottom: 12px;\n}\n[id^="components-button-demo-"] .ant-btn-group > .ant-btn {\n  margin-right: 0;\n}\n']]}}});