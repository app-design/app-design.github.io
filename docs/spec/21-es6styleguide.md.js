webpackJsonp([5,173],{858:function(n,s){n.exports={content:["article",["h2","\u7c7b\u578b"],["ul",["li",["p",["a",{title:null,href:"#1.1"},"1.1"],"  ",["strong","\u57fa\u672c\u7c7b\u578b"],": \u76f4\u63a5\u5b58\u53d6\u57fa\u672c\u7c7b\u578b\u3002"],["ul",["li",["p",["code","\u5b57\u7b26\u4e32"]]],["li",["p",["code","\u6570\u503c"]]],["li",["p",["code","\u5e03\u5c14\u7c7b\u578b"]]],["li",["p",["code","null"]]],["li",["p",["code","undefined"]]]],["pre",{lang:"javascript",highlighted:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> bar <span class="token operator">=</span> foo<span class="token punctuation">;</span>\n\nbar <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">,</span> bar<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => 1, 9</span>'},["code","const foo = 1;\nlet bar = foo;\n\nbar = 9;\n\nconsole.log(foo, bar); // => 1, 9"]]],["li",["p",["a",{title:null,href:"#1.2"},"1.2"],"  ",["strong","\u590d\u6742\u7c7b\u578b"],": \u901a\u8fc7\u5f15\u7528\u7684\u65b9\u5f0f\u5b58\u53d6\u590d\u6742\u7c7b\u578b\u3002"],["ul",["li",["p",["code","\u5bf9\u8c61"]]],["li",["p",["code","\u6570\u7ec4"]]],["li",["p",["code","\u51fd\u6570"]]]],["pre",{lang:"javascript",highlighted:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> bar <span class="token operator">=</span> foo<span class="token punctuation">;</span>\n\nbar<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> bar<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => 9, 9</span>'},["code","const foo = [1, 2];\nconst bar = foo;\n\nbar[0] = 9;\n\nconsole.log(foo[0], bar[0]); // => 9, 9"]]]],["h2","\u5f15\u7528"],["ul",["li",["p",["a",{title:null,href:"#2.1"},"2.1"],"  \u5bf9\u6240\u6709\u7684\u5f15\u7528\u4f7f\u7528 ",["code","const"]," \uff1b\u4e0d\u8981\u4f7f\u7528 ",["code","var"],"\u3002"],["blockquote",["p","\u4e3a\u4ec0\u4e48\uff1f\u8fd9\u80fd\u786e\u4fdd\u4f60\u65e0\u6cd5\u5bf9\u5f15\u7528\u91cd\u65b0\u8d4b\u503c\uff0c\u4e5f\u4e0d\u4f1a\u5bfc\u81f4\u51fa\u73b0 bug \u6216\u96be\u4ee5\u7406\u89e3\u3002"]],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>'},["code","// bad\nvar a = 1;\nvar b = 2;\n\n// good\nconst a = 1;\nconst b = 2;"]]],["li",["p",["a",{title:null,href:"#2.2"},"2.2"],"  \u5982\u679c\u4f60\u4e00\u5b9a\u9700\u8981\u53ef\u53d8\u52a8\u7684\u5f15\u7528\uff0c\u4f7f\u7528 ",["code","let"]," \u4ee3\u66ff ",["code","var"],"\u3002"],["blockquote",["p","\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a  ",["code","let"]," \u662f\u5757\u7ea7\u4f5c\u7528\u57df\uff0c\u800c ",["code","var"]," \u662f\u51fd\u6570\u4f5c\u7528\u57df\u3002"]],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">var</span> count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  count <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// good, use the let.</span>\n<span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  count <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},["code","// bad\nvar count = 1;\nif (true) {\n  count += 1;\n}\n\n// good, use the let.\nlet count = 1;\nif (true) {\n  count += 1;\n}"]]],["li",["p",["a",{title:null,href:"#2.3"},"2.3"],"  \u6ce8\u610f ",["code","let"]," \u548c ",["code","const"]," \u90fd\u662f\u5757\u7ea7\u4f5c\u7528\u57df\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// const \u548c let \u53ea\u5b58\u5728\u4e8e\u5b83\u4eec\u88ab\u5b9a\u4e49\u7684\u533a\u5757\u5185\u3002</span>\n<span class="token punctuation">{</span>\n  <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// ReferenceError</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// ReferenceError</span>'},["code","// const \u548c let \u53ea\u5b58\u5728\u4e8e\u5b83\u4eec\u88ab\u5b9a\u4e49\u7684\u533a\u5757\u5185\u3002\n{\n  let a = 1;\n  const b = 1;\n}\nconsole.log(a); // ReferenceError\nconsole.log(b); // ReferenceError"]]]],["h2","\u5bf9\u8c61"],["ul",["li",["p",["a",{title:null,href:"#3.1"},"3.1"],"  \u4f7f\u7528\u5b57\u9762\u503c\u521b\u5efa\u5bf9\u8c61\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">const</span> item <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">const</span> item <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>'},["code","// bad\nconst item = new Object();\n\n// good\nconst item = {};"]]],["li",["p",["a",{title:null,href:"#3.2"},"3.2"],"  \u5982\u679c\u4f60\u7684\u4ee3\u7801\u5728\u6d4f\u89c8\u5668\u73af\u5883\u4e0b\u6267\u884c\uff0c\u522b\u4f7f\u7528 ",["a",{title:null,href:"http://es5.github.io/#x7.6.1"},"\u4fdd\u7559\u5b57"]," \u4f5c\u4e3a\u952e\u503c\u3002\u8fd9\u6837\u7684\u8bdd\u5728 IE8 \u4e0d\u4f1a\u8fd0\u884c\u3002 ",["a",{title:null,href:"https://github.com/airbnb/javascript/issues/61"},"\u66f4\u591a\u4fe1\u606f"],"\u3002 \u4f46\u5728 ES6 \u6a21\u5757\u548c\u670d\u52a1\u5668\u7aef\u4e2d\u4f7f\u7528\u6ca1\u6709\u95ee\u9898\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">const</span> superman <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token keyword">default</span><span class="token punctuation">:</span> <span class="token punctuation">{</span> clark<span class="token punctuation">:</span> <span class="token string">\'kent\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token keyword">private</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">const</span> superman <span class="token operator">=</span> <span class="token punctuation">{</span>\n  defaults<span class="token punctuation">:</span> <span class="token punctuation">{</span> clark<span class="token punctuation">:</span> <span class="token string">\'kent\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  hidden<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>'},["code","// bad\nconst superman = {\n  default: { clark: 'kent' },\n  private: true,\n};\n\n// good\nconst superman = {\n  defaults: { clark: 'kent' },\n  hidden: true,\n};"]]],["li",["p",["a",{title:null,href:"#3.3"},"3.3"],"  \u4f7f\u7528\u540c\u4e49\u8bcd\u66ff\u6362\u9700\u8981\u4f7f\u7528\u7684\u4fdd\u7559\u5b57\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">const</span> superman <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token keyword">class</span><span class="token punctuation">:</span> <span class="token string">\'alien\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">const</span> superman <span class="token operator">=</span> <span class="token punctuation">{</span>\n  klass<span class="token punctuation">:</span> <span class="token string">\'alien\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">const</span> superman <span class="token operator">=</span> <span class="token punctuation">{</span>\n  type<span class="token punctuation">:</span> <span class="token string">\'alien\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>'},["code","// bad\nconst superman = {\n  class: 'alien',\n};\n\n// bad\nconst superman = {\n  klass: 'alien',\n};\n\n// good\nconst superman = {\n  type: 'alien',\n};"]]],["li",["p",["a",{title:null,href:"#3.4"},"3.4"],"  \u521b\u5efa\u6709\u52a8\u6001\u5c5e\u6027\u540d\u7684\u5bf9\u8c61\u65f6\uff0c\u4f7f\u7528\u53ef\u88ab\u8ba1\u7b97\u7684\u5c5e\u6027\u540d\u79f0\u3002"],["blockquote",["p","\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u8fd9\u6837\u53ef\u4ee5\u8ba9\u4f60\u5728\u4e00\u4e2a\u5730\u65b9\u5b9a\u4e49\u6240\u6709\u7684\u5bf9\u8c61\u5c5e\u6027\u3002"]],["pre",{lang:"javascript",highlighted:'<span class="token keyword">function</span> <span class="token function">getKey</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token template-string"><span class="token string">`a key named </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>k<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>\n  id<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n  name<span class="token punctuation">:</span> <span class="token string">\'San Francisco\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\nobj<span class="token punctuation">[</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token string">\'enabled\'</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>\n  id<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n  name<span class="token punctuation">:</span> <span class="token string">\'San Francisco\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">[</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token string">\'enabled\'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>'},["code","function getKey(k) {\n  return `a key named ${k}`;\n}\n\n// bad\nconst obj = {\n  id: 5,\n  name: 'San Francisco',\n};\nobj[getKey('enabled')] = true;\n\n// good\nconst obj = {\n  id: 5,\n  name: 'San Francisco',\n  [getKey('enabled')]: true,\n};"]]],["li",["p",["a",{title:null,href:"#3.5"},"3.5"],"  \u4f7f\u7528\u5bf9\u8c61\u65b9\u6cd5\u7684\u7b80\u5199\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">const</span> atom <span class="token operator">=</span> <span class="token punctuation">{</span>\n  value<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n\n  addValue<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> atom<span class="token punctuation">.</span>value <span class="token operator">+</span> value<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">const</span> atom <span class="token operator">=</span> <span class="token punctuation">{</span>\n  value<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n\n  <span class="token function">addValue</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> atom<span class="token punctuation">.</span>value <span class="token operator">+</span> value<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>'},["code","// bad\nconst atom = {\n  value: 1,\n\n  addValue: function (value) {\n    return atom.value + value;\n  },\n};\n\n// good\nconst atom = {\n  value: 1,\n\n  addValue(value) {\n    return atom.value + value;\n  },\n};"]]],["li",["p",["a",{title:null,href:"#3.6"},"3.6"],"  \u4f7f\u7528\u5bf9\u8c61\u5c5e\u6027\u503c\u7684\u7b80\u5199\u3002"],["blockquote",["p","\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u8fd9\u6837\u66f4\u77ed\u66f4\u6709\u63cf\u8ff0\u6027\u3002"]],["pre",{lang:"javascript",highlighted:'<span class="token keyword">const</span> lukeSkywalker <span class="token operator">=</span> <span class="token string">\'Luke Skywalker\'</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>\n  lukeSkywalker<span class="token punctuation">:</span> lukeSkywalker<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>\n  lukeSkywalker<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>'},["code","const lukeSkywalker = 'Luke Skywalker';\n\n// bad\nconst obj = {\n  lukeSkywalker: lukeSkywalker,\n};\n\n// good\nconst obj = {\n  lukeSkywalker,\n};"]]],["li",["p",["a",{title:null,href:"#3.7"},"3.7"],"  \u5728\u5bf9\u8c61\u5c5e\u6027\u58f0\u660e\u524d\u628a\u7b80\u5199\u7684\u5c5e\u6027\u5206\u7ec4\u3002"],["blockquote",["p","\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u8fd9\u6837\u80fd\u6e05\u695a\u5730\u770b\u51fa\u54ea\u4e9b\u5c5e\u6027\u4f7f\u7528\u4e86\u7b80\u5199\u3002"]],["pre",{lang:"javascript",highlighted:'<span class="token keyword">const</span> anakinSkywalker <span class="token operator">=</span> <span class="token string">\'Anakin Skywalker\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> lukeSkywalker <span class="token operator">=</span> <span class="token string">\'Luke Skywalker\'</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>\n  episodeOne<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n  twoJedisWalkIntoACantina<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n  lukeSkywalker<span class="token punctuation">,</span>\n  episodeThree<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n  mayTheFourth<span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span>\n  anakinSkywalker<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>\n  lukeSkywalker<span class="token punctuation">,</span>\n  anakinSkywalker<span class="token punctuation">,</span>\n  episodeOne<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n  twoJedisWalkIntoACantina<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n  episodeThree<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n  mayTheFourth<span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>'},["code","const anakinSkywalker = 'Anakin Skywalker';\nconst lukeSkywalker = 'Luke Skywalker';\n\n// bad\nconst obj = {\n  episodeOne: 1,\n  twoJedisWalkIntoACantina: 2,\n  lukeSkywalker,\n  episodeThree: 3,\n  mayTheFourth: 4,\n  anakinSkywalker,\n};\n\n// good\nconst obj = {\n  lukeSkywalker,\n  anakinSkywalker,\n  episodeOne: 1,\n  twoJedisWalkIntoACantina: 2,\n  episodeThree: 3,\n  mayTheFourth: 4,\n};"]]]],["h2","\u6570\u7ec4"],["ul",["li",["p",["a",{title:null,href:"#4.1"},"4.1"],"  \u4f7f\u7528\u5b57\u9762\u503c\u521b\u5efa\u6570\u7ec4\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>'},["code","// bad\nconst items = new Array();\n\n// good\nconst items = [];"]]],["li",["p",["a",{title:null,href:"#4.2"},"4.2"],"  \u5411\u6570\u7ec4\u6dfb\u52a0\u5143\u7d20\u65f6\u4f7f\u7528 Arrary#push \u66ff\u4ee3\u76f4\u63a5\u8d4b\u503c\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token keyword">const</span> someStack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>'},["code","const someStack = [];"]]]],["pre",{lang:null,highlighted:'<span class="token operator">/</span><span class="token operator">/</span> bad\nsomeStack<span class="token punctuation">[</span>someStack<span class="token punctuation">.</span>length<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">\'abracadabra\'</span><span class="token comment" spellcheck="true">;</span>\n\n<span class="token operator">/</span><span class="token operator">/</span> good\nsomeStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">\'abracadabra\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n```'},["code","// bad\nsomeStack[someStack.length] = 'abracadabra';\n\n// good\nsomeStack.push('abracadabra');\n```"]],["ul",["li",["p",["a",{title:null,href:"#4.3"},"4.3"],"  \u4f7f\u7528\u62d3\u5c55\u8fd0\u7b97\u7b26 ",["code","..."]," \u590d\u5236\u6570\u7ec4\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">const</span> len <span class="token operator">=</span> items<span class="token punctuation">.</span>length<span class="token punctuation">;</span>\n<span class="token keyword">const</span> itemsCopy <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> i<span class="token punctuation">;</span>\n\n<span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  itemsCopy<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">const</span> itemsCopy <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>items<span class="token punctuation">]</span><span class="token punctuation">;</span>'},["code","// bad\nconst len = items.length;\nconst itemsCopy = [];\nlet i;\n\nfor (i = 0; i < len; i++) {\n  itemsCopy[i] = items[i];\n}\n\n// good\nconst itemsCopy = [...items];"]]],["li",["p",["a",{title:null,href:"#4.4"},"4.4"],"  \u4f7f\u7528 Array#from \u628a\u4e00\u4e2a\u7c7b\u6570\u7ec4\u5bf9\u8c61\u8f6c\u6362\u6210\u6570\u7ec4\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token keyword">const</span> foo <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">\'.foo\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> nodes <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token keyword">from</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>'},["code","const foo = document.querySelectorAll('.foo');\nconst nodes = Array.from(foo);"]]]],["h2","\u89e3\u6784"],["ul",["li",["p",["a",{title:null,href:"#5.1"},"5.1"],"  \u4f7f\u7528\u89e3\u6784\u5b58\u53d6\u548c\u4f7f\u7528\u591a\u5c5e\u6027\u5bf9\u8c61\u3002"],["blockquote",["p","\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u89e3\u6784\u80fd\u51cf\u5c11\u4e34\u65f6\u5f15\u7528\u5c5e\u6027\u3002"]],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">function</span> <span class="token function">getFullName</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> firstName <span class="token operator">=</span> user<span class="token punctuation">.</span>firstName<span class="token punctuation">;</span>\n  <span class="token keyword">const</span> lastName <span class="token operator">=</span> user<span class="token punctuation">.</span>lastName<span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>firstName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>lastName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">function</span> <span class="token function">getFullName</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> firstName<span class="token punctuation">,</span> lastName <span class="token punctuation">}</span> <span class="token operator">=</span> obj<span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>firstName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>lastName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// best</span>\n<span class="token keyword">function</span> <span class="token function">getFullName</span><span class="token punctuation">(</span><span class="token punctuation">{</span> firstName<span class="token punctuation">,</span> lastName <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>firstName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>lastName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},["code","// bad\nfunction getFullName(user) {\n  const firstName = user.firstName;\n  const lastName = user.lastName;\n\n  return `${firstName} ${lastName}`;\n}\n\n// good\nfunction getFullName(obj) {\n  const { firstName, lastName } = obj;\n  return `${firstName} ${lastName}`;\n}\n\n// best\nfunction getFullName({ firstName, lastName }) {\n  return `${firstName} ${lastName}`;\n}"]]],["li",["p",["a",{title:null,href:"#5.2"},"5.2"],"  \u5bf9\u6570\u7ec4\u4f7f\u7528\u89e3\u6784\u8d4b\u503c\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">const</span> first <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> second <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">const</span> <span class="token punctuation">[</span>first<span class="token punctuation">,</span> second<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">;</span>'
},["code","const arr = [1, 2, 3, 4];\n\n// bad\nconst first = arr[0];\nconst second = arr[1];\n\n// good\nconst [first, second] = arr;"]]],["li",["p",["a",{title:null,href:"#5.3"},"5.3"],"  \u9700\u8981\u56de\u4f20\u591a\u4e2a\u503c\u65f6\uff0c\u4f7f\u7528\u5bf9\u8c61\u89e3\u6784\uff0c\u800c\u4e0d\u662f\u6570\u7ec4\u89e3\u6784\u3002"],["blockquote",["p","\u4e3a\u4ec0\u4e48\uff1f\u589e\u52a0\u5c5e\u6027\u6216\u8005\u6539\u53d8\u6392\u5e8f\u4e0d\u4f1a\u6539\u53d8\u8c03\u7528\u65f6\u7684\u4f4d\u7f6e\u3002"]],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">function</span> <span class="token function">processInput</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment" spellcheck="true">// then a miracle occurs</span>\n  <span class="token keyword">return</span> <span class="token punctuation">[</span>left<span class="token punctuation">,</span> right<span class="token punctuation">,</span> top<span class="token punctuation">,</span> bottom<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// \u8c03\u7528\u65f6\u9700\u8981\u8003\u8651\u56de\u8c03\u6570\u636e\u7684\u987a\u5e8f\u3002</span>\n<span class="token keyword">const</span> <span class="token punctuation">[</span>left<span class="token punctuation">,</span> __<span class="token punctuation">,</span> top<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">processInput</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">function</span> <span class="token function">processInput</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment" spellcheck="true">// then a miracle occurs</span>\n  <span class="token keyword">return</span> <span class="token punctuation">{</span> left<span class="token punctuation">,</span> right<span class="token punctuation">,</span> top<span class="token punctuation">,</span> bottom <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// \u8c03\u7528\u65f6\u53ea\u9009\u62e9\u9700\u8981\u7684\u6570\u636e</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> left<span class="token punctuation">,</span> right <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">processInput</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span>'},["code","// bad\nfunction processInput(input) {\n  // then a miracle occurs\n  return [left, right, top, bottom];\n}\n\n// \u8c03\u7528\u65f6\u9700\u8981\u8003\u8651\u56de\u8c03\u6570\u636e\u7684\u987a\u5e8f\u3002\nconst [left, __, top] = processInput(input);\n\n// good\nfunction processInput(input) {\n  // then a miracle occurs\n  return { left, right, top, bottom };\n}\n\n// \u8c03\u7528\u65f6\u53ea\u9009\u62e9\u9700\u8981\u7684\u6570\u636e\nconst { left, right } = processInput(input);"]]]],["h2","Strings"],["ul",["li",["p",["a",{title:null,href:"#6.1"},"6.1"]," \u5b57\u7b26\u4e32\u4f7f\u7528\u5355\u5f15\u53f7 ",["code","''"]," \u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token string">"Capt. Janeway"</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token string">\'Capt. Janeway\'</span><span class="token punctuation">;</span>'},["code","// bad\nconst name = \"Capt. Janeway\";\n\n// good\nconst name = 'Capt. Janeway';"]]],["li",["p",["a",{title:null,href:"#6.2"},"6.2"]," \u5b57\u7b26\u4e32\u8d85\u8fc7 80 \u4e2a\u5b57\u8282\u5e94\u8be5\u4f7f\u7528\u5b57\u7b26\u4e32\u8fde\u63a5\u53f7\u6362\u884c\u3002"]],["li",["p",["a",{title:null,href:"#6.3"},"6.3"]," \u6ce8\uff1a\u8fc7\u5ea6\u4f7f\u7528\u5b57\u4e32\u8fde\u63a5\u7b26\u53f7\u53ef\u80fd\u4f1a\u5bf9\u6027\u80fd\u9020\u6210\u5f71\u54cd\u3002",["a",{title:null,href:"http://jsperf.com/ya-string-concat"},"jsPerf"]," \u548c ",["a",{title:null,href:"https://github.com/airbnb/javascript/issues/40"},"\u8ba8\u8bba"],"."],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">const</span> errorMessage <span class="token operator">=</span> <span class="token string">\'This is a super long error that was thrown because of Batman. When you stop to think about how Batman had anything to do with this, you would get nowhere fast.\'</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">const</span> errorMessage <span class="token operator">=</span> <span class="token string">\'This is a super long error that was thrown because \\\nof Batman. When you stop to think about how Batman had anything to do \\\nwith this, you would get nowhere \\\nfast.\'</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">const</span> errorMessage <span class="token operator">=</span> <span class="token string">\'This is a super long error that was thrown because \'</span> <span class="token operator">+</span>\n  <span class="token string">\'of Batman. When you stop to think about how Batman had anything to do \'</span> <span class="token operator">+</span>\n  <span class="token string">\'with this, you would get nowhere fast.\'</span><span class="token punctuation">;</span>'},["code","// bad\nconst errorMessage = 'This is a super long error that was thrown because of Batman. When you stop to think about how Batman had anything to do with this, you would get nowhere fast.';\n\n// bad\nconst errorMessage = 'This is a super long error that was thrown because \\\nof Batman. When you stop to think about how Batman had anything to do \\\nwith this, you would get nowhere \\\nfast.';\n\n// good\nconst errorMessage = 'This is a super long error that was thrown because ' +\n  'of Batman. When you stop to think about how Batman had anything to do ' +\n  'with this, you would get nowhere fast.';"]]]],["ul",["li",["p",["a",{title:null,href:"#6.4"},"6.4"]," \u7a0b\u5e8f\u5316\u751f\u6210\u5b57\u7b26\u4e32\u65f6\uff0c\u4f7f\u7528\u6a21\u677f\u5b57\u7b26\u4e32\u4ee3\u66ff\u5b57\u7b26\u4e32\u8fde\u63a5\u3002"],["blockquote",["p","\u4e3a\u4ec0\u4e48\uff1f\u6a21\u677f\u5b57\u7b26\u4e32\u66f4\u4e3a\u7b80\u6d01\uff0c\u66f4\u5177\u53ef\u8bfb\u6027\u3002"]],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">function</span> <span class="token function">sayHi</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token string">\'How are you, \'</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">\'?\'</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">function</span> <span class="token function">sayHi</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string">\'How are you, \'</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> <span class="token string">\'?\'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">function</span> <span class="token function">sayHi</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token template-string"><span class="token string">`How are you, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">?`</span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},["code","// bad\nfunction sayHi(name) {\n  return 'How are you, ' + name + '?';\n}\n\n// bad\nfunction sayHi(name) {\n  return ['How are you, ', name, '?'].join();\n}\n\n// good\nfunction sayHi(name) {\n  return `How are you, ${name}?`;\n}"]]]],["h2","\u51fd\u6570"],["ul",["li",["p",["a",{title:null,href:"#7.1"},"7.1"]," \u4f7f\u7528\u51fd\u6570\u58f0\u660e\u4ee3\u66ff\u51fd\u6570\u8868\u8fbe\u5f0f\u3002"],["blockquote",["p","\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u51fd\u6570\u58f0\u660e\u662f\u53ef\u547d\u540d\u7684\uff0c\u6240\u4ee5\u4ed6\u4eec\u5728\u8c03\u7528\u6808\u4e2d\u66f4\u5bb9\u6613\u88ab\u8bc6\u522b\u3002\u6b64\u5916\uff0c\u51fd\u6570\u58f0\u660e\u4f1a\u628a\u6574\u4e2a\u51fd\u6570\u63d0\u5347\uff08hoisted\uff09\uff0c\u800c\u51fd\u6570\u8868\u8fbe\u5f0f\u53ea\u4f1a\u628a\u51fd\u6570\u7684\u5f15\u7528\u53d8\u91cf\u540d\u63d0\u5347\u3002\u8fd9\u6761\u89c4\u5219\u4f7f\u5f97",["a",{title:null,href:"#arrow-functions"},"\u7bad\u5934\u51fd\u6570"],"\u53ef\u4ee5\u53d6\u4ee3\u51fd\u6570\u8868\u8fbe\u5f0f\u3002"]],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>'},["code","// bad\nconst foo = function () {\n};\n\n// good\nfunction foo() {\n}"]]],["li",["p",["a",{title:null,href:"#7.2"},"7.2"]," \u51fd\u6570\u8868\u8fbe\u5f0f:"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// \u7acb\u5373\u8c03\u7528\u7684\u51fd\u6570\u8868\u8fbe\u5f0f (IIFE)</span>\n<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Welcome to the Internet. Please follow me.\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},["code","// \u7acb\u5373\u8c03\u7528\u7684\u51fd\u6570\u8868\u8fbe\u5f0f (IIFE)\n(() => {\n  console.log('Welcome to the Internet. Please follow me.');\n})();"]]],["li",["p",["a",{title:null,href:"#7.3"},"7.3"]," \u6c38\u8fdc\u4e0d\u8981\u5728\u4e00\u4e2a\u975e\u51fd\u6570\u4ee3\u7801\u5757\uff08",["code","if"],"\u3001",["code","while"]," \u7b49\uff09\u4e2d\u58f0\u660e\u4e00\u4e2a\u51fd\u6570\uff0c\u628a\u90a3\u4e2a\u51fd\u6570\u8d4b\u7ed9\u4e00\u4e2a\u53d8\u91cf\u3002\u6d4f\u89c8\u5668\u5141\u8bb8\u4f60\u8fd9\u4e48\u505a\uff0c\u4f46\u5b83\u4eec\u7684\u89e3\u6790\u8868\u73b0\u4e0d\u4e00\u81f4\u3002"]],["li",["p",["a",{title:null,href:"#7.4"},"7.4"]," ",["strong","\u6ce8\u610f:"]," ECMA-262 \u628a ",["code","block"]," \u5b9a\u4e49\u4e3a\u4e00\u7ec4\u8bed\u53e5\u3002\u51fd\u6570\u58f0\u660e\u4e0d\u662f\u8bed\u53e5\u3002",["a",{title:null,href:"http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf#page=97"},"\u9605\u8bfb ECMA-262 \u5173\u4e8e\u8fd9\u4e2a\u95ee\u9898\u7684\u8bf4\u660e"],"\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>currentUser<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Nope.\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">let</span> test<span class="token punctuation">;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>currentUser<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  test <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Yup.\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},["code","// bad\nif (currentUser) {\n  function test() {\n    console.log('Nope.');\n  }\n}\n\n// good\nlet test;\nif (currentUser) {\n  test = () => {\n    console.log('Yup.');\n  };\n}"]]],["li",["p",["a",{title:null,href:"#7.5"},"7.5"]," \u6c38\u8fdc\u4e0d\u8981\u628a\u53c2\u6570\u547d\u540d\u4e3a ",["code","arguments"],"\u3002\u8fd9\u5c06\u53d6\u4ee3\u539f\u6765\u51fd\u6570\u4f5c\u7528\u57df\u5185\u7684 ",["code","arguments"]," \u5bf9\u8c61\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">function</span> <span class="token function">nope</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> options<span class="token punctuation">,</span> arguments<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment" spellcheck="true">// ...stuff...</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">function</span> <span class="token function">yup</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> options<span class="token punctuation">,</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment" spellcheck="true">// ...stuff...</span>\n<span class="token punctuation">}</span>'},["code","// bad\nfunction nope(name, options, arguments) {\n  // ...stuff...\n}\n\n// good\nfunction yup(name, options, args) {\n  // ...stuff...\n}"]]]],["ul",["li",["p",["a",{title:null,href:"#7.6"},"7.6"]," \u4e0d\u8981\u4f7f\u7528 ",["code","arguments"],"\u3002\u53ef\u4ee5\u9009\u62e9 rest \u8bed\u6cd5 ",["code","..."]," \u66ff\u4ee3\u3002"],["blockquote",["p","\u4e3a\u4ec0\u4e48\uff1f\u4f7f\u7528 ",["code","..."]," \u80fd\u660e\u786e\u4f60\u8981\u4f20\u5165\u7684\u53c2\u6570\u3002\u53e6\u5916 rest \u53c2\u6570\u662f\u4e00\u4e2a\u771f\u6b63\u7684\u6570\u7ec4\uff0c\u800c ",["code","arguments"]," \u662f\u4e00\u4e2a\u7c7b\u6570\u7ec4\u3002"]],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">function</span> <span class="token function">concatenateAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> args <span class="token operator">=</span> Array<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>slice<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> args<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">function</span> <span class="token function">concatenateAll</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> args<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},["code","// bad\nfunction concatenateAll() {\n  const args = Array.prototype.slice.call(arguments);\n  return args.join('');\n}\n\n// good\nfunction concatenateAll(...args) {\n  return args.join('');\n}"]]],["li",["p",["a",{title:null,href:"#7.7"},"7.7"]," \u76f4\u63a5\u7ed9\u51fd\u6570\u7684\u53c2\u6570\u6307\u5b9a\u9ed8\u8ba4\u503c\uff0c\u4e0d\u8981\u4f7f\u7528\u4e00\u4e2a\u53d8\u5316\u7684\u51fd\u6570\u53c2\u6570\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// really bad</span>\n<span class="token keyword">function</span> <span class="token function">handleThings</span><span class="token punctuation">(</span>opts<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment" spellcheck="true">// \u4e0d\uff01\u6211\u4eec\u4e0d\u5e94\u8be5\u6539\u53d8\u51fd\u6570\u53c2\u6570\u3002</span>\n  <span class="token comment" spellcheck="true">// \u66f4\u52a0\u7cdf\u7cd5: \u5982\u679c\u53c2\u6570 opts \u662f false \u7684\u8bdd\uff0c\u5b83\u5c31\u4f1a\u88ab\u8bbe\u5b9a\u4e3a\u4e00\u4e2a\u5bf9\u8c61\u3002</span>\n  <span class="token comment" spellcheck="true">// \u4f46\u8fd9\u6837\u7684\u5199\u6cd5\u4f1a\u9020\u6210\u4e00\u4e9b Bugs\u3002</span>\n  <span class="token comment" spellcheck="true">//\uff08\u8bd1\u6ce8\uff1a\u4f8b\u5982\u5f53 opts \u88ab\u8d4b\u503c\u4e3a\u7a7a\u5b57\u7b26\u4e32\uff0copts \u4ecd\u7136\u4f1a\u88ab\u4e0b\u4e00\u884c\u4ee3\u7801\u8bbe\u5b9a\u4e3a\u4e00\u4e2a\u7a7a\u5bf9\u8c61\u3002\uff09</span>\n  opts <span class="token operator">=</span> opts <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token comment" spellcheck="true">// ...</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// still bad</span>\n<span class="token keyword">function</span> <span class="token function">handleThings</span><span class="token punctuation">(</span>opts<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>opts <span class="token operator">===</span> <span class="token keyword">void</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    opts <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token comment" spellcheck="true">// ...</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">function</span> <span class="token function">handleThings</span><span class="token punctuation">(</span>opts <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment" spellcheck="true">// ...</span>\n<span class="token punctuation">}</span>'},["code","// really bad\nfunction handleThings(opts) {\n  // \u4e0d\uff01\u6211\u4eec\u4e0d\u5e94\u8be5\u6539\u53d8\u51fd\u6570\u53c2\u6570\u3002\n  // \u66f4\u52a0\u7cdf\u7cd5: \u5982\u679c\u53c2\u6570 opts \u662f false \u7684\u8bdd\uff0c\u5b83\u5c31\u4f1a\u88ab\u8bbe\u5b9a\u4e3a\u4e00\u4e2a\u5bf9\u8c61\u3002\n  // \u4f46\u8fd9\u6837\u7684\u5199\u6cd5\u4f1a\u9020\u6210\u4e00\u4e9b Bugs\u3002\n  //\uff08\u8bd1\u6ce8\uff1a\u4f8b\u5982\u5f53 opts \u88ab\u8d4b\u503c\u4e3a\u7a7a\u5b57\u7b26\u4e32\uff0copts \u4ecd\u7136\u4f1a\u88ab\u4e0b\u4e00\u884c\u4ee3\u7801\u8bbe\u5b9a\u4e3a\u4e00\u4e2a\u7a7a\u5bf9\u8c61\u3002\uff09\n  opts = opts || {};\n  // ...\n}\n\n// still bad\nfunction handleThings(opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  // ...\n}\n\n// good\nfunction handleThings(opts = {}) {\n  // ...\n}"]]],["li",["p",["a",{title:null,href:"#7.8"},"7.8"]," \u76f4\u63a5\u7ed9\u51fd\u6570\u53c2\u6570\u8d4b\u503c\u65f6\u9700\u8981\u907f\u514d\u526f\u4f5c\u7528\u3002"],["blockquote",["p","\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u8fd9\u6837\u7684\u5199\u6cd5\u8ba9\u4eba\u611f\u5230\u5f88\u56f0\u60d1\u3002"]],["pre",{lang:"javascript",highlighted:'<span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">function</span> <span class="token function">count</span><span class="token punctuation">(</span>a <span class="token operator">=</span> b<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 1</span>\n<span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 2</span>\n<span class="token function">count</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 3</span>\n<span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 3</span>'},["code","var b = 1;\n// bad\nfunction count(a = b++) {\n  console.log(a);\n}\ncount();  // 1\ncount();  // 2\ncount(3); // 3\ncount();  // 3"]]]],["h2","\u7bad\u5934\u51fd\u6570"],["ul",["li",["p",["a",{title:null,href:"#8.1"},"8.1"]," \u5f53\u4f60\u5fc5\u987b\u4f7f\u7528\u51fd\u6570\u8868\u8fbe\u5f0f\uff08\u6216\u4f20\u9012\u4e00\u4e2a\u533f\u540d\u51fd\u6570\uff09\u65f6\uff0c\u4f7f\u7528\u7bad\u5934\u51fd\u6570\u7b26\u53f7\u3002"],["blockquote",["p","\u4e3a\u4ec0\u4e48?\u56e0\u4e3a\u7bad\u5934\u51fd\u6570\u521b\u9020\u4e86\u65b0\u7684\u4e00\u4e2a ",["code","this"]," \u6267\u884c\u73af\u5883\uff08\u8bd1\u6ce8\uff1a\u53c2\u8003 ",["a",{title:null,href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions"},"Arrow functions - JavaScript | MDN"]," \u548c ",["a",{title:null,href:"http://toddmotto.com/es6-arrow-functions-syntaxes-and-lexical-scoping/"},"ES6 arrow functions, syntax and lexical scoping"],"\uff09\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\u90fd\u80fd\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\uff0c\u800c\u4e14\u8fd9\u6837\u7684\u5199\u6cd5\u66f4\u4e3a\u7b80\u6d01\u3002"],["p","\u4e3a\u4ec0\u4e48\u4e0d\uff1f\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u76f8\u5f53\u590d\u6742\u7684\u51fd\u6570\uff0c\u4f60\u6216\u8bb8\u53ef\u4ee5\u628a\u903b\u8f91\u90e8\u5206\u8f6c\u79fb\u5230\u4e00\u4e2a\u51fd\u6570\u58f0\u660e\u4e0a\u3002"]],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> x <span class="token operator">*</span> x<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> x <span class="token operator">*</span> x<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},["code","// bad\n[1, 2, 3].map(function (x) {\n  return x * x;\n});\n\n// good\n[1, 2, 3].map((x) => {\n  return x * x;\n});"]]],["li",["p",["a",{title:null,href:"#8.2"},"8.2"]," \u5982\u679c\u4e00\u4e2a\u51fd\u6570\u9002\u5408\u7528\u4e00\u884c\u5199\u51fa\u5e76\u4e14\u53ea\u6709\u4e00\u4e2a\u53c2\u6570\uff0c\u90a3\u5c31\u628a\u82b1\u62ec\u53f7\u3001\u5706\u62ec\u53f7\u548c ",["code","return"]," \u90fd\u7701\u7565\u6389\u3002\u5982\u679c\u4e0d\u662f\uff0c\u90a3\u5c31\u4e0d\u8981\u7701\u7565\u3002"],["blockquote",["p","\u4e3a\u4ec0\u4e48\uff1f\u8bed\u6cd5\u7cd6\u3002\u5728\u94fe\u5f0f\u8c03\u7528\u4e2d\u53ef\u8bfb\u6027\u5f88\u9ad8\u3002"],["p","\u4e3a\u4ec0\u4e48\u4e0d\uff1f\u5f53\u4f60\u6253\u7b97\u56de\u4f20\u4e00\u4e2a\u5bf9\u8c61\u7684\u65f6\u5019\u3002"]],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// good</span>\n<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>x <span class="token operator">=</span><span class="token operator">></span> x <span class="token operator">*</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>total<span class="token punctuation">,</span> n<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> total <span class="token operator">+</span> n<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},["code","// good\n[1, 2, 3].map(x => x * x);\n\n// good\n[1, 2, 3].reduce((total, n) => {\n  return total + n;\n}, 0);"]]]],["h2","\u6784\u9020\u5668"],["ul",["li",["p",["a",{title:null,href:"#9.1"},"9.1"]," \u603b\u662f\u4f7f\u7528 ",["code","class"],"\u3002\u907f\u514d\u76f4\u63a5\u64cd\u4f5c ",["code","prototype"]," \u3002"],["blockquote",["p","\u4e3a\u4ec0\u4e48? \u56e0\u4e3a ",["code","class"]," \u8bed\u6cd5\u66f4\u4e3a\u7b80\u6d01\u66f4\u6613\u8bfb\u3002"]],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">function</span> <span class="token function">Queue</span><span class="token punctuation">(</span>contents <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>_queue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>contents<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\nQueue<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>pop <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_queue<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>_queue<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> value<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'
},["code","// bad\nfunction Queue(contents = []) {\n  this._queue = [...contents];\n}\nQueue.prototype.pop = function() {\n  const value = this._queue[0];\n  this._queue.splice(0, 1);\n  return value;\n}"]]]],["pre",{lang:null,highlighted:'<span class="token operator">/</span><span class="token operator">/</span> good\nclass Queue {\n  <span class="token function">constructor</span><span class="token punctuation">(</span>contents <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> {\n    this<span class="token punctuation">.</span>_queue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>contents<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n  }\n  <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> {\n    <span class="token keyword">const</span> value <span class="token operator">=</span> this<span class="token punctuation">.</span>_queue<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>\n    this<span class="token punctuation">.</span>_queue<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    return value<span class="token comment" spellcheck="true">;</span>\n  }\n}\n```'},["code","// good\nclass Queue {\n  constructor(contents = []) {\n    this._queue = [...contents];\n  }\n  pop() {\n    const value = this._queue[0];\n    this._queue.splice(0, 1);\n    return value;\n  }\n}\n```"]],["ul",["li",["p",["a",{title:null,href:"#9.2"},"9.2"]," \u4f7f\u7528 ",["code","extends"]," \u7ee7\u627f\u3002"],["blockquote",["p","\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a ",["code","extends"]," \u662f\u4e00\u4e2a\u5185\u5efa\u7684\u539f\u578b\u7ee7\u627f\u65b9\u6cd5\u5e76\u4e14\u4e0d\u4f1a\u7834\u574f ",["code","instanceof"],"\u3002"]],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">const</span> inherits <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'inherits\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">function</span> <span class="token function">PeekableQueue</span><span class="token punctuation">(</span>contents<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  Queue<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> contents<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token function">inherits</span><span class="token punctuation">(</span>PeekableQueue<span class="token punctuation">,</span> Queue<span class="token punctuation">)</span><span class="token punctuation">;</span>\nPeekableQueue<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>peek <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_queue<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">class</span> <span class="token class-name">PeekableQueue</span> <span class="token keyword">extends</span> <span class="token class-name">Queue</span> <span class="token punctuation">{</span>\n  <span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_queue<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},["code","// bad\nconst inherits = require('inherits');\nfunction PeekableQueue(contents) {\n  Queue.apply(this, contents);\n}\ninherits(PeekableQueue, Queue);\nPeekableQueue.prototype.peek = function() {\n  return this._queue[0];\n}\n\n// good\nclass PeekableQueue extends Queue {\n  peek() {\n    return this._queue[0];\n  }\n}"]]],["li",["p",["a",{title:null,href:"#9.3"},"9.3"]," \u65b9\u6cd5\u53ef\u4ee5\u8fd4\u56de ",["code","this"]," \u6765\u5e2e\u52a9\u94fe\u5f0f\u8c03\u7528\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\nJedi<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>jump <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>jumping <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nJedi<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>setHeight <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>height<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">=</span> height<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> luke <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Jedi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nluke<span class="token punctuation">.</span><span class="token function">jump</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => true</span>\nluke<span class="token punctuation">.</span><span class="token function">setHeight</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => undefined</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">class</span> <span class="token class-name">Jedi</span> <span class="token punctuation">{</span>\n  <span class="token function">jump</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>jumping <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">setHeight</span><span class="token punctuation">(</span>height<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">=</span> height<span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> luke <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Jedi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nluke<span class="token punctuation">.</span><span class="token function">jump</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">setHeight</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},["code","// bad\nJedi.prototype.jump = function() {\n  this.jumping = true;\n  return true;\n};\n\nJedi.prototype.setHeight = function(height) {\n  this.height = height;\n};\n\nconst luke = new Jedi();\nluke.jump(); // => true\nluke.setHeight(20); // => undefined\n\n// good\nclass Jedi {\n  jump() {\n    this.jumping = true;\n    return this;\n  }\n\n  setHeight(height) {\n    this.height = height;\n    return this;\n  }\n}\n\nconst luke = new Jedi();\n\nluke.jump()\n  .setHeight(20);"]]]],["ul",["li",["p",["a",{title:null,href:"#9.4"},"9.4"]," \u53ef\u4ee5\u5199\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684 ",["code","toString()"]," \u65b9\u6cd5\uff0c\u4f46\u8981\u786e\u4fdd\u5b83\u80fd\u6b63\u5e38\u8fd0\u884c\u5e76\u4e14\u4e0d\u4f1a\u5f15\u8d77\u526f\u4f5c\u7528\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token keyword">class</span> <span class="token class-name">Jedi</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span>options <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> options<span class="token punctuation">.</span>name <span class="token operator">||</span> <span class="token string">\'no name\'</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token template-string"><span class="token string">`Jedi - </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},["code","class Jedi {\n  constructor(options = {}) {\n    this.name = options.name || 'no name';\n  }\n\n  getName() {\n    return this.name;\n  }\n\n  toString() {\n    return `Jedi - ${this.getName()}`;\n  }\n}"]]]],["h2","\u6a21\u5757"],["ul",["li",["p",["a",{title:null,href:"#10.1"},"10.1"]," \u603b\u662f\u4f7f\u7528\u6a21\u7ec4 (",["code","import"],"/",["code","export"],") \u800c\u4e0d\u662f\u5176\u4ed6\u975e\u6807\u51c6\u6a21\u5757\u7cfb\u7edf\u3002\u4f60\u53ef\u4ee5\u7f16\u8bd1\u4e3a\u4f60\u559c\u6b22\u7684\u6a21\u5757\u7cfb\u7edf\u3002"],["blockquote",["p","\u4e3a\u4ec0\u4e48\uff1f\u6a21\u5757\u5c31\u662f\u672a\u6765\uff0c\u8ba9\u6211\u4eec\u5f00\u59cb\u8fc8\u5411\u672a\u6765\u5427\u3002"]],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">const</span> AirbnbStyleGuide <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'./AirbnbStyleGuide\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> AirbnbStyleGuide<span class="token punctuation">.</span>es6<span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// ok</span>\n<span class="token keyword">import</span> AirbnbStyleGuide <span class="token keyword">from</span> <span class="token string">\'./AirbnbStyleGuide\'</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> AirbnbStyleGuide<span class="token punctuation">.</span>es6<span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// best</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> es6 <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'./AirbnbStyleGuide\'</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> es6<span class="token punctuation">;</span>'},["code","// bad\nconst AirbnbStyleGuide = require('./AirbnbStyleGuide');\nmodule.exports = AirbnbStyleGuide.es6;\n\n// ok\nimport AirbnbStyleGuide from './AirbnbStyleGuide';\nexport default AirbnbStyleGuide.es6;\n\n// best\nimport { es6 } from './AirbnbStyleGuide';\nexport default es6;"]]],["li",["p",["a",{title:null,href:"#10.2"},"10.2"]," \u4e0d\u8981\u4f7f\u7528\u901a\u914d\u7b26 import\u3002"],["blockquote",["p","\u4e3a\u4ec0\u4e48\uff1f\u8fd9\u6837\u80fd\u786e\u4fdd\u4f60\u53ea\u6709\u4e00\u4e2a\u9ed8\u8ba4 export\u3002"]],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> AirbnbStyleGuide <span class="token keyword">from</span> <span class="token string">\'./AirbnbStyleGuide\'</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">import</span> AirbnbStyleGuide <span class="token keyword">from</span> <span class="token string">\'./AirbnbStyleGuide\'</span><span class="token punctuation">;</span>'},["code","// bad\nimport * as AirbnbStyleGuide from './AirbnbStyleGuide';\n\n// good\nimport AirbnbStyleGuide from './AirbnbStyleGuide';"]]],["li",["p",["a",{title:null,href:"#10.3"},"10.3"]," \u4e0d\u8981\u4ece import \u4e2d\u76f4\u63a5 export\u3002"],["blockquote",["p","\u4e3a\u4ec0\u4e48\uff1f\u867d\u7136\u4e00\u884c\u4ee3\u7801\u7b80\u6d01\u660e\u4e86\uff0c\u4f46\u8ba9 import \u548c export \u5404\u53f8\u5176\u804c\u8ba9\u4e8b\u60c5\u80fd\u4fdd\u6301\u4e00\u81f4\u3002"]],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token comment" spellcheck="true">// filename es6.js</span>\n<span class="token keyword">export</span> <span class="token punctuation">{</span> es6 <span class="token keyword">as</span> <span class="token keyword">default</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'./airbnbStyleGuide\'</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token comment" spellcheck="true">// filename es6.js</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> es6 <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'./AirbnbStyleGuide\'</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> es6<span class="token punctuation">;</span>'},["code","// bad\n// filename es6.js\nexport { es6 as default } from './airbnbStyleGuide';\n\n// good\n// filename es6.js\nimport { es6 } from './AirbnbStyleGuide';\nexport default es6;"]]]],["h2","Iterators and Generators"],["ul",["li",["p",["a",{title:null,href:"#11.1"},"11.1"]," \u4e0d\u8981\u4f7f\u7528 iterators\u3002\u4f7f\u7528\u9ad8\u9636\u51fd\u6570\u4f8b\u5982 ",["code","map()"]," \u548c ",["code","reduce()"]," \u66ff\u4ee3 ",["code","for-of"],"\u3002"],["blockquote",["p","\u4e3a\u4ec0\u4e48\uff1f\u8fd9\u52a0\u5f3a\u4e86\u6211\u4eec\u4e0d\u53d8\u7684\u89c4\u5219\u3002\u5904\u7406\u7eaf\u51fd\u6570\u7684\u56de\u8c03\u503c\u66f4\u6613\u8bfb\uff0c\u8fd9\u6bd4\u5b83\u5e26\u6765\u7684\u526f\u4f5c\u7528\u66f4\u91cd\u8981\u3002"]],["pre",{lang:"javascript",highlighted:'<span class="token keyword">const</span> numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> num <span class="token keyword">of</span> numbers<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  sum <span class="token operator">+</span><span class="token operator">=</span> num<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nsum <span class="token operator">===</span> <span class="token number">15</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\nnumbers<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> sum <span class="token operator">+</span><span class="token operator">=</span> num<span class="token punctuation">)</span><span class="token punctuation">;</span>\nsum <span class="token operator">===</span> <span class="token number">15</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// best (use the functional force)</span>\n<span class="token keyword">const</span> sum <span class="token operator">=</span> numbers<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>total<span class="token punctuation">,</span> num<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> total <span class="token operator">+</span> num<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nsum <span class="token operator">===</span> <span class="token number">15</span><span class="token punctuation">;</span>'},["code","const numbers = [1, 2, 3, 4, 5];\n\n// bad\nlet sum = 0;\nfor (let num of numbers) {\n  sum += num;\n}\n\nsum === 15;\n\n// good\nlet sum = 0;\nnumbers.forEach((num) => sum += num);\nsum === 15;\n\n// best (use the functional force)\nconst sum = numbers.reduce((total, num) => total + num, 0);\nsum === 15;"]]],["li",["p",["a",{title:null,href:"#11.2"},"11.2"]," \u73b0\u5728\u8fd8\u4e0d\u8981\u4f7f\u7528 generators\u3002"],["blockquote",["p","\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u5b83\u4eec\u73b0\u5728\u8fd8\u6ca1\u6cd5\u5f88\u597d\u5730\u7f16\u8bd1\u5230 ES5\u3002 (\u8bd1\u8005\u6ce8\uff1a\u76ee\u524d(2016/03) Chrome \u548c Node.js \u7684\u7a33\u5b9a\u7248\u672c\u90fd\u5df2\u652f\u6301 generators)"]]]],["h2","\u5c5e\u6027"],["ul",["li",["p",["a",{title:null,href:"#12.1"},"12.1"]," \u4f7f\u7528 ",["code","."]," \u6765\u8bbf\u95ee\u5bf9\u8c61\u7684\u5c5e\u6027\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token keyword">const</span> luke <span class="token operator">=</span> <span class="token punctuation">{</span>\n  jedi<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  age<span class="token punctuation">:</span> <span class="token number">28</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">const</span> isJedi <span class="token operator">=</span> luke<span class="token punctuation">[</span><span class="token string">\'jedi\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">const</span> isJedi <span class="token operator">=</span> luke<span class="token punctuation">.</span>jedi<span class="token punctuation">;</span>'},["code","const luke = {\n  jedi: true,\n  age: 28,\n};\n\n// bad\nconst isJedi = luke['jedi'];\n\n// good\nconst isJedi = luke.jedi;"]]],["li",["p",["a",{title:null,href:"#12.2"},"12.2"]," \u5f53\u901a\u8fc7\u53d8\u91cf\u8bbf\u95ee\u5c5e\u6027\u65f6\u4f7f\u7528\u4e2d\u62ec\u53f7 ",["code","[]"],"\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token keyword">const</span> luke <span class="token operator">=</span> <span class="token punctuation">{</span>\n  jedi<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  age<span class="token punctuation">:</span> <span class="token number">28</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">getProp</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> luke<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> isJedi <span class="token operator">=</span> <span class="token function">getProp</span><span class="token punctuation">(</span><span class="token string">\'jedi\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},["code","const luke = {\n  jedi: true,\n  age: 28,\n};\n\nfunction getProp(prop) {\n  return luke[prop];\n}\n\nconst isJedi = getProp('jedi');"]]]],["h2","\u53d8\u91cf"],["ul",["li",["p",["a",{title:null,href:"#13.1"},"13.1"]," \u4e00\u76f4\u4f7f\u7528 ",["code","const"]," \u6765\u58f0\u660e\u53d8\u91cf\uff0c\u5982\u679c\u4e0d\u8fd9\u6837\u505a\u5c31\u4f1a\u4ea7\u751f\u5168\u5c40\u53d8\u91cf\u3002\u6211\u4eec\u9700\u8981\u907f\u514d\u5168\u5c40\u547d\u540d\u7a7a\u95f4\u7684\u6c61\u67d3\u3002",["a",{title:null,href:"http://www.wikiwand.com/en/Captain_Planet"},"\u5730\u7403\u961f\u957f"],"\u5df2\u7ecf\u8b66\u544a\u8fc7\u6211\u4eec\u4e86\u3002\uff08\u8bd1\u6ce8\uff1a\u5168\u5c40\uff0cglobal \u4ea6\u6709\u5168\u7403\u7684\u610f\u601d\u3002\u5730\u7403\u961f\u957f\u7684\u8d23\u4efb\u662f\u4fdd\u536b\u5730\u7403\u73af\u5883\uff0c\u6240\u4ee5\u4ed6\u8b66\u544a\u6211\u4eec\u4e0d\u8981\u9020\u6210\u300c\u5168\u7403\u300d\u6c61\u67d3\u3002\uff09"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\nsuperPower <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SuperPower</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">const</span> superPower <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SuperPower</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},["code","// bad\nsuperPower = new SuperPower();\n\n// good\nconst superPower = new SuperPower();"]]],["li",["p",["a",{title:null,href:"#13.2"},"13.2"]," \u4f7f\u7528 ",["code","const"]," \u58f0\u660e\u6bcf\u4e00\u4e2a\u53d8\u91cf\u3002"],["blockquote",["p","\u4e3a\u4ec0\u4e48\uff1f\u589e\u52a0\u65b0\u53d8\u91cf\u5c06\u53d8\u7684\u66f4\u52a0\u5bb9\u6613\uff0c\u800c\u4e14\u4f60\u6c38\u8fdc\u4e0d\u7528\u518d\u62c5\u5fc3\u8c03\u6362\u9519 ",["code",";"]," \u8ddf ",["code",","],"\u3002"]],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    goSportsTeam <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    dragonball <span class="token operator">=</span> <span class="token string">\'z\'</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token comment" spellcheck="true">// (compare to above, and try to spot the mistake)</span>\n<span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    goSportsTeam <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    dragonball <span class="token operator">=</span> <span class="token string">\'z\'</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> goSportsTeam <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> dragonball <span class="token operator">=</span> <span class="token string">\'z\'</span><span class="token punctuation">;</span>'},["code","// bad\nconst items = getItems(),\n    goSportsTeam = true,\n    dragonball = 'z';\n\n// bad\n// (compare to above, and try to spot the mistake)\nconst items = getItems(),\n    goSportsTeam = true;\n    dragonball = 'z';\n\n// good\nconst items = getItems();\nconst goSportsTeam = true;\nconst dragonball = 'z';"]]],["li",["p",["a",{title:null,href:"#13.3"},"13.3"]," \u5c06\u6240\u6709\u7684 ",["code","const"]," \u548c ",["code","let"]," \u5206\u7ec4"],["blockquote",["p","\u4e3a\u4ec0\u4e48\uff1f\u5f53\u4f60\u9700\u8981\u628a\u5df2\u8d4b\u503c\u53d8\u91cf\u8d4b\u503c\u7ed9\u672a\u8d4b\u503c\u53d8\u91cf\u65f6\u975e\u5e38\u6709\u7528\u3002"]],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">let</span> i<span class="token punctuation">,</span> len<span class="token punctuation">,</span> dragonball<span class="token punctuation">,</span>\n    items <span class="token operator">=</span> <span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    goSportsTeam <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">let</span> i<span class="token punctuation">;</span>\n<span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> dragonball<span class="token punctuation">;</span>\n<span class="token keyword">const</span> goSportsTeam <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> len<span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">const</span> goSportsTeam <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> dragonball<span class="token punctuation">;</span>\n<span class="token keyword">let</span> i<span class="token punctuation">;</span>\n<span class="token keyword">let</span> length<span class="token punctuation">;</span>'},["code","// bad\nlet i, len, dragonball,\n    items = getItems(),\n    goSportsTeam = true;\n\n// bad\nlet i;\nconst items = getItems();\nlet dragonball;\nconst goSportsTeam = true;\nlet len;\n\n// good\nconst goSportsTeam = true;\nconst items = getItems();\nlet dragonball;\nlet i;\nlet length;"]]],["li",["p",["a",{title:null,
href:"#13.4"},"13.4"]," \u5728\u4f60\u9700\u8981\u7684\u5730\u65b9\u7ed9\u53d8\u91cf\u8d4b\u503c\uff0c\u4f46\u8bf7\u628a\u5b83\u4eec\u653e\u5728\u4e00\u4e2a\u5408\u7406\u7684\u4f4d\u7f6e\u3002"],["blockquote",["p","\u4e3a\u4ec0\u4e48\uff1f",["code","let"]," \u548c ",["code","const"]," \u662f\u5757\u7ea7\u4f5c\u7528\u57df\u800c\u4e0d\u662f\u51fd\u6570\u4f5c\u7528\u57df\u3002"]],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'doing stuff..\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment" spellcheck="true">//..other stuff..</span>\n\n  <span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">===</span> <span class="token string">\'test\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">return</span> name<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// bad - unnecessary function call</span>\n<span class="token keyword">function</span><span class="token punctuation">(</span>hasName<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>hasName<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setFirstName</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">function</span><span class="token punctuation">(</span>hasName<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>hasName<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setFirstName</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},["code","// good\nfunction() {\n  test();\n  console.log('doing stuff..');\n\n  //..other stuff..\n\n  const name = getName();\n\n  if (name === 'test') {\n    return false;\n  }\n\n  return name;\n}\n\n// bad - unnecessary function call\nfunction(hasName) {\n  const name = getName();\n\n  if (!hasName) {\n    return false;\n  }\n\n  this.setFirstName(name);\n\n  return true;\n}\n\n// good\nfunction(hasName) {\n  if (!hasName) {\n    return false;\n  }\n\n  const name = getName();\n  this.setFirstName(name);\n\n  return true;\n}"]]]],["h2","Hoisting"],["ul",["li",["p",["a",{title:null,href:"#14.1"},"14.1"]," ",["code","var"]," \u58f0\u660e\u4f1a\u88ab\u63d0\u5347\u81f3\u8be5\u4f5c\u7528\u57df\u7684\u9876\u90e8\uff0c\u4f46\u5b83\u4eec\u8d4b\u503c\u4e0d\u4f1a\u63d0\u5347\u3002",["code","let"]," \u548c ",["code","const"]," \u88ab\u8d4b\u4e88\u4e86\u4e00\u79cd\u79f0\u4e3a\u300c",["a",{title:null,href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let#Temporal_dead_zone_and_errors_with_let"},"\u6682\u65f6\u6027\u6b7b\u533a\uff08Temporal Dead Zones, TDZ\uff09"],"\u300d\u7684\u6982\u5ff5\u3002\u8fd9\u5bf9\u4e8e\u4e86\u89e3\u4e3a\u4ec0\u4e48 ",["a",{title:null,href:"http://es-discourse.com/t/why-typeof-is-no-longer-safe/15"},"type of \u4e0d\u518d\u5b89\u5168"],"\u76f8\u5f53\u91cd\u8981\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// \u6211\u4eec\u77e5\u9053\u8fd9\u6837\u8fd0\u884c\u4e0d\u4e86</span>\n<span class="token comment" spellcheck="true">// \uff08\u5047\u8bbe notDefined \u4e0d\u662f\u5168\u5c40\u53d8\u91cf\uff09</span>\n<span class="token keyword">function</span> <span class="token function">example</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>notDefined<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => throws a ReferenceError</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// \u7531\u4e8e\u53d8\u91cf\u63d0\u5347\u7684\u539f\u56e0\uff0c</span>\n<span class="token comment" spellcheck="true">// \u5728\u5f15\u7528\u53d8\u91cf\u540e\u518d\u58f0\u660e\u53d8\u91cf\u662f\u53ef\u4ee5\u8fd0\u884c\u7684\u3002</span>\n<span class="token comment" spellcheck="true">// \u6ce8\uff1a\u53d8\u91cf\u7684\u8d4b\u503c `true` \u4e0d\u4f1a\u88ab\u63d0\u5347\u3002</span>\n<span class="token keyword">function</span> <span class="token function">example</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>declaredButNotAssigned<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => undefined</span>\n  <span class="token keyword">var</span> declaredButNotAssigned <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// \u7f16\u8bd1\u5668\u4f1a\u628a\u51fd\u6570\u58f0\u660e\u63d0\u5347\u5230\u4f5c\u7528\u57df\u7684\u9876\u5c42\uff0c</span>\n<span class="token comment" spellcheck="true">// \u8fd9\u610f\u5473\u7740\u6211\u4eec\u7684\u4f8b\u5b50\u53ef\u4ee5\u6539\u5199\u6210\u8fd9\u6837\uff1a</span>\n<span class="token keyword">function</span> <span class="token function">example</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> declaredButNotAssigned<span class="token punctuation">;</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>declaredButNotAssigned<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => undefined</span>\n  declaredButNotAssigned <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// \u4f7f\u7528 const \u548c let</span>\n<span class="token keyword">function</span> <span class="token function">example</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>declaredButNotAssigned<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => throws a ReferenceError</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> declaredButNotAssigned<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => throws a ReferenceError</span>\n  <span class="token keyword">const</span> declaredButNotAssigned <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},["code","// \u6211\u4eec\u77e5\u9053\u8fd9\u6837\u8fd0\u884c\u4e0d\u4e86\n// \uff08\u5047\u8bbe notDefined \u4e0d\u662f\u5168\u5c40\u53d8\u91cf\uff09\nfunction example() {\n  console.log(notDefined); // => throws a ReferenceError\n}\n\n// \u7531\u4e8e\u53d8\u91cf\u63d0\u5347\u7684\u539f\u56e0\uff0c\n// \u5728\u5f15\u7528\u53d8\u91cf\u540e\u518d\u58f0\u660e\u53d8\u91cf\u662f\u53ef\u4ee5\u8fd0\u884c\u7684\u3002\n// \u6ce8\uff1a\u53d8\u91cf\u7684\u8d4b\u503c `true` \u4e0d\u4f1a\u88ab\u63d0\u5347\u3002\nfunction example() {\n  console.log(declaredButNotAssigned); // => undefined\n  var declaredButNotAssigned = true;\n}\n\n// \u7f16\u8bd1\u5668\u4f1a\u628a\u51fd\u6570\u58f0\u660e\u63d0\u5347\u5230\u4f5c\u7528\u57df\u7684\u9876\u5c42\uff0c\n// \u8fd9\u610f\u5473\u7740\u6211\u4eec\u7684\u4f8b\u5b50\u53ef\u4ee5\u6539\u5199\u6210\u8fd9\u6837\uff1a\nfunction example() {\n  let declaredButNotAssigned;\n  console.log(declaredButNotAssigned); // => undefined\n  declaredButNotAssigned = true;\n}\n\n// \u4f7f\u7528 const \u548c let\nfunction example() {\n  console.log(declaredButNotAssigned); // => throws a ReferenceError\n  console.log(typeof declaredButNotAssigned); // => throws a ReferenceError\n  const declaredButNotAssigned = true;\n}"]]],["li",["p",["a",{title:null,href:"#14.2"},"14.2"]," \u533f\u540d\u51fd\u6570\u8868\u8fbe\u5f0f\u7684\u53d8\u91cf\u540d\u4f1a\u88ab\u63d0\u5347\uff0c\u4f46\u51fd\u6570\u5185\u5bb9\u5e76\u4e0d\u4f1a\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token keyword">function</span> <span class="token function">example</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>anonymous<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => undefined</span>\n\n  <span class="token function">anonymous</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => TypeError anonymous is not a function</span>\n\n  <span class="token keyword">var</span> anonymous <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'anonymous function expression\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},["code","function example() {\n  console.log(anonymous); // => undefined\n\n  anonymous(); // => TypeError anonymous is not a function\n\n  var anonymous = function() {\n    console.log('anonymous function expression');\n  };\n}"]]],["li",["p",["a",{title:null,href:"#14.3"},"14.3"]," \u547d\u540d\u7684\u51fd\u6570\u8868\u8fbe\u5f0f\u7684\u53d8\u91cf\u540d\u4f1a\u88ab\u63d0\u5347\uff0c\u4f46\u51fd\u6570\u540d\u548c\u51fd\u6570\u51fd\u6570\u5185\u5bb9\u5e76\u4e0d\u4f1a\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token keyword">function</span> <span class="token function">example</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>named<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => undefined</span>\n\n  <span class="token function">named</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => TypeError named is not a function</span>\n\n  <span class="token function">superPower</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => ReferenceError superPower is not defined</span>\n\n  <span class="token keyword">var</span> named <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">superPower</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Flying\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// the same is true when the function name</span>\n<span class="token comment" spellcheck="true">// is the same as the variable name.</span>\n<span class="token keyword">function</span> <span class="token function">example</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>named<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => undefined</span>\n\n  <span class="token function">named</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => TypeError named is not a function</span>\n\n  <span class="token keyword">var</span> named <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">named</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'named\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},["code","function example() {\n  console.log(named); // => undefined\n\n  named(); // => TypeError named is not a function\n\n  superPower(); // => ReferenceError superPower is not defined\n\n  var named = function superPower() {\n    console.log('Flying');\n  };\n}\n\n// the same is true when the function name\n// is the same as the variable name.\nfunction example() {\n  console.log(named); // => undefined\n\n  named(); // => TypeError named is not a function\n\n  var named = function named() {\n    console.log('named');\n  }\n}"]]],["li",["p",["a",{title:null,href:"#14.4"},"14.4"]," \u51fd\u6570\u58f0\u660e\u7684\u540d\u79f0\u548c\u51fd\u6570\u4f53\u90fd\u4f1a\u88ab\u63d0\u5347\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token keyword">function</span> <span class="token function">example</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">superPower</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => Flying</span>\n\n  <span class="token keyword">function</span> <span class="token function">superPower</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Flying\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},["code","function example() {\n  superPower(); // => Flying\n\n  function superPower() {\n    console.log('Flying');\n  }\n}"]]],["li",["p","\u60f3\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u53c2\u8003 ",["a",{title:null,href:"http://www.adequatelygood.com/"},"Ben Cherry"]," \u7684 ",["a",{title:null,href:"http://www.adequatelygood.com/2010/2/JavaScript-Scoping-and-Hoisting"},"JavaScript Scoping & Hoisting"],"\u3002"]]],["h2","\u6bd4\u8f83\u8fd0\u7b97\u7b26\u548c\u7b49\u53f7"],["ul",["li",["p",["a",{title:null,href:"#15.1"},"15.1"]," \u4f18\u5148\u4f7f\u7528 ",["code","==="]," \u548c ",["code","!=="]," \u800c\u4e0d\u662f ",["code","=="]," \u548c ",["code","!="],"."]],["li",["p",["a",{title:null,href:"#15.2"},"15.2"]," \u6761\u4ef6\u8868\u8fbe\u5f0f\u4f8b\u5982 ",["code","if"]," \u8bed\u53e5\u901a\u8fc7\u62bd\u8c61\u65b9\u6cd5 ",["code","ToBoolean"]," \u5f3a\u5236\u8ba1\u7b97\u5b83\u4eec\u7684\u8868\u8fbe\u5f0f\u5e76\u4e14\u603b\u662f\u9075\u5b88\u4e0b\u9762\u7684\u89c4\u5219\uff1a"],["ul",["li",["p",["strong","\u5bf9\u8c61"]," \u88ab\u8ba1\u7b97\u4e3a ",["strong","true"]]],["li",["p",["strong","Undefined"]," \u88ab\u8ba1\u7b97\u4e3a ",["strong","false"]]],["li",["p",["strong","Null"]," \u88ab\u8ba1\u7b97\u4e3a ",["strong","false"]]],["li",["p",["strong","\u5e03\u5c14\u503c"]," \u88ab\u8ba1\u7b97\u4e3a ",["strong","\u5e03\u5c14\u7684\u503c"]]],["li",["p",["strong","\u6570\u5b57"]," \u5982\u679c\u662f ",["strong","+0\u3001-0\u3001\u6216 NaN"]," \u88ab\u8ba1\u7b97\u4e3a ",["strong","false"],", \u5426\u5219\u4e3a ",["strong","true"]]],["li",["p",["strong","\u5b57\u7b26\u4e32"]," \u5982\u679c\u662f\u7a7a\u5b57\u7b26\u4e32 ",["code","''"]," \u88ab\u8ba1\u7b97\u4e3a ",["strong","false"],"\uff0c\u5426\u5219\u4e3a ",["strong","true"]]]],["pre",{lang:"javascript",highlighted:'<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment" spellcheck="true">// true</span>\n  <span class="token comment" spellcheck="true">// An array is an object, objects evaluate to true</span>\n<span class="token punctuation">}</span>'},["code","if ([0]) {\n  // true\n  // An array is an object, objects evaluate to true\n}"]]],["li",["p",["a",{title:null,href:"#15.3"},"15.3"]," \u4f7f\u7528\u7b80\u5199\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">!==</span> <span class="token string">\'\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment" spellcheck="true">// ...stuff...</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment" spellcheck="true">// ...stuff...</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>collection<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment" spellcheck="true">// ...stuff...</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>collection<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment" spellcheck="true">// ...stuff...</span>\n<span class="token punctuation">}</span>'},["code","// bad\nif (name !== '') {\n  // ...stuff...\n}\n\n// good\nif (name) {\n  // ...stuff...\n}\n\n// bad\nif (collection.length > 0) {\n  // ...stuff...\n}\n\n// good\nif (collection.length) {\n  // ...stuff...\n}"]]],["li",["p",["a",{title:null,href:"#15.4"},"15.4"]," \u60f3\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u53c2\u8003 Angus Croll \u7684 ",["a",{title:null,href:"http://javascriptweblog.wordpress.com/2011/02/07/truth-equality-and-javascript/#more-2108"},"Truth Equality and JavaScript"],"\u3002"]]],["h2","\u4ee3\u7801\u5757"],["ul",["li",["p",["a",{title:null,href:"#16.1"},"16.1"]," \u4f7f\u7528\u5927\u62ec\u53f7\u5305\u88f9\u6240\u6709\u7684\u591a\u884c\u4ee3\u7801\u5757\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>test<span class="token punctuation">)</span>\n  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>test<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>test<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},["code","// bad\nif (test)\n  return false;\n\n// good\nif (test) return false;\n\n// good\nif (test) {\n  return false;\n}\n\n// bad\nfunction() { return false; }\n\n// good\nfunction() {\n  return false;\n}"]]],["li",["p",["a",{title:null,href:"#16.2"},"16.2"]," \u5982\u679c\u901a\u8fc7 ",["code","if"]," \u548c ",["code","else"]," \u4f7f\u7528\u591a\u884c\u4ee3\u7801\u5757\uff0c\u628a ",["code","else"]," \u653e\u5728 ",["code","if"]," \u4ee3\u7801\u5757\u5173\u95ed\u62ec\u53f7\u7684\u540c\u4e00\u884c\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>test<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">thing1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">thing2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">else</span> <span class="token punctuation">{</span>\n  <span class="token function">thing3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>test<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">thing1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">thing2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n  <span class="token function">thing3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},["code","// bad\nif (test) {\n  thing1();\n  thing2();\n}\nelse {\n  thing3();\n}\n\n// good\nif (test) {\n  thing1();\n  thing2();\n} else {\n  thing3();\n}"]]]],["h2","\u6ce8\u91ca"],["ul",["li",["p",["a",{title:null,href:"#17.1"},"17.1"]," \u4f7f\u7528 ",["code","/** ... */"]," \u4f5c\u4e3a\u591a\u884c\u6ce8\u91ca\u3002\u5305\u542b\u63cf\u8ff0\u3001\u6307\u5b9a\u6240\u6709\u53c2\u6570\u548c\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u548c\u503c\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token comment" spellcheck="true">// make() returns a new element</span>\n<span class="token comment" spellcheck="true">// based on the passed in tag name</span>\n<span class="token comment" spellcheck="true">//</span>\n<span class="token comment" spellcheck="true">// @param {String} tag</span>\n<span class="token comment" spellcheck="true">// @return {Element} element</span>\n<span class="token keyword">function</span> <span class="token function">make</span><span class="token punctuation">(</span>tag<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n  <span class="token comment" spellcheck="true">// ...stuff...</span>\n\n  <span class="token keyword">return</span> element<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token comment" spellcheck="true">/**\n * make() returns a new element\n * based on the passed in tag name\n *\n * @param {String} tag\n * @return {Element} element\n */</span>\n<span class="token keyword">function</span> <span class="token function">make</span><span class="token punctuation">(</span>tag<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n  <span class="token comment" spellcheck="true">// ...stuff...</span>\n\n  <span class="token keyword">return</span> element<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},["code","// bad\n// make() returns a new element\n// based on the passed in tag name\n//\n// @param {String} tag\n// @return {Element} element\nfunction make(tag) {\n\n  // ...stuff...\n\n  return element;\n}\n\n// good\n/**\n * make() returns a new element\n * based on the passed in tag name\n *\n * @param {String} tag\n * @return {Element} element\n */\nfunction make(tag) {\n\n  // ...stuff...\n\n  return element;\n}"]]],["li",["p",["a",{title:null,href:"#17.2"},"17.2"]," \u4f7f\u7528 ",["code","//"]," \u4f5c\u4e3a\u5355\u884c\u6ce8\u91ca\u3002\u5728\u8bc4\u8bba\u5bf9\u8c61\u4e0a\u9762\u53e6\u8d77\u4e00\u884c\u4f7f\u7528\u5355\u884c\u6ce8\u91ca\u3002\u5728\u6ce8\u91ca\u524d\u63d2\u5165\u7a7a\u884c\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">const</span> active <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// is current tab</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token comment" spellcheck="true">// is current tab</span>\n<span class="token keyword">const</span> active <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">function</span> <span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'fetching type...\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment" spellcheck="true">// set the default type to \'no type\'</span>\n  <span class="token keyword">const</span> type <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_type <span class="token operator">||</span> <span class="token string">\'no type\'</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> type<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">function</span> <span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'fetching type...\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment" spellcheck="true">// set the default type to \'no type\'</span>\n  <span class="token keyword">const</span> type <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_type <span class="token operator">||</span> <span class="token string">\'no type\'</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> type<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'
},["code","// bad\nconst active = true;  // is current tab\n\n// good\n// is current tab\nconst active = true;\n\n// bad\nfunction getType() {\n  console.log('fetching type...');\n  // set the default type to 'no type'\n  const type = this._type || 'no type';\n\n  return type;\n}\n\n// good\nfunction getType() {\n  console.log('fetching type...');\n\n  // set the default type to 'no type'\n  const type = this._type || 'no type';\n\n  return type;\n}"]]],["li",["p",["a",{title:null,href:"#17.3"},"17.3"]," \u7ed9\u6ce8\u91ca\u589e\u52a0 ",["code","FIXME"]," \u6216 ",["code","TODO"]," \u7684\u524d\u7f00\u53ef\u4ee5\u5e2e\u52a9\u5176\u4ed6\u5f00\u53d1\u8005\u5feb\u901f\u4e86\u89e3\u8fd9\u662f\u4e00\u4e2a\u9700\u8981\u590d\u67e5\u7684\u95ee\u9898\uff0c\u6216\u662f\u7ed9\u9700\u8981\u5b9e\u73b0\u7684\u529f\u80fd\u63d0\u4f9b\u4e00\u4e2a\u89e3\u51b3\u65b9\u5f0f\u3002\u8fd9\u5c06\u6709\u522b\u4e8e\u5e38\u89c1\u7684\u6ce8\u91ca\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u53ef\u64cd\u4f5c\u7684\u3002\u4f7f\u7528 ",["code","FIXME -- need to figure this out"]," \u6216\u8005 ",["code","TODO -- need to implement"],"\u3002"]],["li",["p",["a",{title:null,href:"#17.4"},"17.4"]," \u4f7f\u7528 ",["code","// FIXME"],": \u6807\u6ce8\u95ee\u9898\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token keyword">class</span> <span class="token class-name">Calculator</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment" spellcheck="true">// FIXME: shouldn\'t use a global here</span>\n    total <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},["code","class Calculator {\n  constructor() {\n    // FIXME: shouldn't use a global here\n    total = 0;\n  }\n}"]]],["li",["p",["a",{title:null,href:"#17.5"},"17.5"]," \u4f7f\u7528 ",["code","// TODO"],": \u6807\u6ce8\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u5f0f\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token keyword">class</span> <span class="token class-name">Calculator</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment" spellcheck="true">// TODO: total should be configurable by an options param</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>total <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},["code","class Calculator {\n  constructor() {\n    // TODO: total should be configurable by an options param\n    this.total = 0;\n  }\n}"]]]],["h2","\u7a7a\u767d"],["ul",["li",["p",["a",{title:null,href:"#18.1"},"18.1"]," \u4f7f\u7528 2 \u4e2a\u7a7a\u683c\u4f5c\u4e3a\u7f29\u8fdb\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\u2219\u2219\u2219\u2219<span class="token keyword">const</span> name<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\u2219<span class="token keyword">const</span> name<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\u2219\u2219<span class="token keyword">const</span> name<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},["code","// bad\nfunction() {\n\u2219\u2219\u2219\u2219const name;\n}\n\n// bad\nfunction() {\n\u2219const name;\n}\n\n// good\nfunction() {\n\u2219\u2219const name;\n}"]]],["li",["p",["a",{title:null,href:"#18.2"},"18.2"]," \u5728\u82b1\u62ec\u53f7\u524d\u653e\u4e00\u4e2a\u7a7a\u683c\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'test\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'test\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\ndog<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">\'attr\'</span><span class="token punctuation">,</span><span class="token punctuation">{</span>\n  age<span class="token punctuation">:</span> <span class="token string">\'1 year\'</span><span class="token punctuation">,</span>\n  breed<span class="token punctuation">:</span> <span class="token string">\'Bernese Mountain Dog\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\ndog<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">\'attr\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  age<span class="token punctuation">:</span> <span class="token string">\'1 year\'</span><span class="token punctuation">,</span>\n  breed<span class="token punctuation">:</span> <span class="token string">\'Bernese Mountain Dog\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},["code","// bad\nfunction test(){\n  console.log('test');\n}\n\n// good\nfunction test() {\n  console.log('test');\n}\n\n// bad\ndog.set('attr',{\n  age: '1 year',\n  breed: 'Bernese Mountain Dog',\n});\n\n// good\ndog.set('attr', {\n  age: '1 year',\n  breed: 'Bernese Mountain Dog',\n});"]]],["li",["p",["a",{title:null,href:"#18.3"},"18.3"]," \u5728\u63a7\u5236\u8bed\u53e5\uff08",["code","if"],"\u3001",["code","while"]," \u7b49\uff09\u7684\u5c0f\u62ec\u53f7\u524d\u653e\u4e00\u4e2a\u7a7a\u683c\u3002\u5728\u51fd\u6570\u8c03\u7528\u53ca\u58f0\u660e\u4e2d\uff0c\u4e0d\u5728\u51fd\u6570\u7684\u53c2\u6570\u5217\u8868\u524d\u52a0\u7a7a\u683c\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">if</span><span class="token punctuation">(</span>isJedi<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  fight <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>isJedi<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">fight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">function</span> fight <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span>log <span class="token punctuation">(</span><span class="token string">\'Swooosh!\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">function</span> <span class="token function">fight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Swooosh!\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},["code","// bad\nif(isJedi) {\n  fight ();\n}\n\n// good\nif (isJedi) {\n  fight();\n}\n\n// bad\nfunction fight () {\n  console.log ('Swooosh!');\n}\n\n// good\nfunction fight() {\n  console.log('Swooosh!');\n}"]]],["li",["p",["a",{title:null,href:"#18.4"},"18.4"],"  \u4f7f\u7528\u7a7a\u683c\u628a\u8fd0\u7b97\u7b26\u9694\u5f00\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">const</span> x<span class="token operator">=</span>y<span class="token operator">+</span><span class="token number">5</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">const</span> x <span class="token operator">=</span> y <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">;</span>'},["code","// bad\nconst x=y+5;\n\n// good\nconst x = y + 5;"]]],["li",["p",["a",{title:null,href:"#18.5"},"18.5"],"  \u5728\u6587\u4ef6\u672b\u5c3e\u63d2\u5165\u4e00\u4e2a\u7a7a\u884c\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>global<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment" spellcheck="true">// ...stuff...</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},["code","// bad\n(function(global) {\n  // ...stuff...\n})(this);"]],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>global<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment" spellcheck="true">// ...stuff...</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\u21b5\n\u21b5'},["code","// bad\n(function(global) {\n  // ...stuff...\n})(this);\u21b5\n\u21b5"]],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// good</span>\n<span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>global<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment" spellcheck="true">// ...stuff...</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\u21b5'},["code","// good\n(function(global) {\n  // ...stuff...\n})(this);\u21b5"]]],["li",["p",["a",{title:null,href:"#18.5"},"18.5"],"  \u5728\u4f7f\u7528\u957f\u65b9\u6cd5\u94fe\u65f6\u8fdb\u884c\u7f29\u8fdb\u3002\u4f7f\u7528\u524d\u9762\u7684\u70b9 ",["code","."]," \u5f3a\u8c03\u8fd9\u662f\u65b9\u6cd5\u8c03\u7528\u800c\u4e0d\u662f\u65b0\u8bed\u53e5\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">\'#items\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">\'.selected\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">highlight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">\'.open\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">updateCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">\'#items\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>\n  <span class="token function">find</span><span class="token punctuation">(</span><span class="token string">\'.selected\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>\n    <span class="token function">highlight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>\n    <span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>\n  <span class="token function">find</span><span class="token punctuation">(</span><span class="token string">\'.open\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>\n    <span class="token function">updateCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">\'#items\'</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">\'.selected\'</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">highlight</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">\'.open\'</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">updateCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">const</span> leds <span class="token operator">=</span> stage<span class="token punctuation">.</span><span class="token function">selectAll</span><span class="token punctuation">(</span><span class="token string">\'.led\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">enter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">\'svg:svg\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">(</span><span class="token string">\'led\'</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">\'width\'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>radius <span class="token operator">+</span> margin<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">\'svg:g\'</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">\'transform\'</span><span class="token punctuation">,</span> <span class="token string">\'translate(\'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>radius <span class="token operator">+</span> margin<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">\',\'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>radius <span class="token operator">+</span> margin<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">\')\'</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>tron<span class="token punctuation">.</span>led<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">const</span> leds <span class="token operator">=</span> stage<span class="token punctuation">.</span><span class="token function">selectAll</span><span class="token punctuation">(</span><span class="token string">\'.led\'</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">enter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">\'svg:svg\'</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">classed</span><span class="token punctuation">(</span><span class="token string">\'led\'</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">\'width\'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>radius <span class="token operator">+</span> margin<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">\'svg:g\'</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">\'transform\'</span><span class="token punctuation">,</span> <span class="token string">\'translate(\'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>radius <span class="token operator">+</span> margin<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">\',\'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>radius <span class="token operator">+</span> margin<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">\')\'</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>tron<span class="token punctuation">.</span>led<span class="token punctuation">)</span><span class="token punctuation">;</span>'},["code","// bad\n$('#items').find('.selected').highlight().end().find('.open').updateCount();\n\n// bad\n$('#items').\n  find('.selected').\n    highlight().\n    end().\n  find('.open').\n    updateCount();\n\n// good\n$('#items')\n  .find('.selected')\n    .highlight()\n    .end()\n  .find('.open')\n    .updateCount();\n\n// bad\nconst leds = stage.selectAll('.led').data(data).enter().append('svg:svg').class('led', true)\n    .attr('width', (radius + margin) * 2).append('svg:g')\n    .attr('transform', 'translate(' + (radius + margin) + ',' + (radius + margin) + ')')\n    .call(tron.led);\n\n// good\nconst leds = stage.selectAll('.led')\n    .data(data)\n  .enter().append('svg:svg')\n    .classed('led', true)\n    .attr('width', (radius + margin) * 2)\n  .append('svg:g')\n    .attr('transform', 'translate(' + (radius + margin) + ',' + (radius + margin) + ')')\n    .call(tron.led);"]]],["li",["p",["a",{title:null,href:"#18.6"},"18.6"],"  \u5728\u5757\u672b\u548c\u65b0\u8bed\u53e5\u524d\u63d2\u5165\u7a7a\u884c\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> bar<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">return</span> baz<span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> bar<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">return</span> baz<span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">return</span> obj<span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">return</span> obj<span class="token punctuation">;</span>'},["code","// bad\nif (foo) {\n  return bar;\n}\nreturn baz;\n\n// good\nif (foo) {\n  return bar;\n}\n\nreturn baz;\n\n// bad\nconst obj = {\n  foo() {\n  },\n  bar() {\n  },\n};\nreturn obj;\n\n// good\nconst obj = {\n  foo() {\n  },\n\n  bar() {\n  },\n};\n\nreturn obj;"]]]],["h2","\u9017\u53f7"],["ul",["li",["p",["a",{title:null,href:"#19.1"},"19.1"],"  \u884c\u9996\u9017\u53f7\uff1a",["strong","\u4e0d\u9700\u8981"],"\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">const</span> story <span class="token operator">=</span> <span class="token punctuation">[</span>\n    once\n  <span class="token punctuation">,</span> upon\n  <span class="token punctuation">,</span> aTime\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">const</span> story <span class="token operator">=</span> <span class="token punctuation">[</span>\n  once<span class="token punctuation">,</span>\n  upon<span class="token punctuation">,</span>\n  aTime<span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">const</span> hero <span class="token operator">=</span> <span class="token punctuation">{</span>\n    firstName<span class="token punctuation">:</span> <span class="token string">\'Ada\'</span>\n  <span class="token punctuation">,</span> lastName<span class="token punctuation">:</span> <span class="token string">\'Lovelace\'</span>\n  <span class="token punctuation">,</span> birthYear<span class="token punctuation">:</span> <span class="token number">1815</span>\n  <span class="token punctuation">,</span> superPower<span class="token punctuation">:</span> <span class="token string">\'computers\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">const</span> hero <span class="token operator">=</span> <span class="token punctuation">{</span>\n  firstName<span class="token punctuation">:</span> <span class="token string">\'Ada\'</span><span class="token punctuation">,</span>\n  lastName<span class="token punctuation">:</span> <span class="token string">\'Lovelace\'</span><span class="token punctuation">,</span>\n  birthYear<span class="token punctuation">:</span> <span class="token number">1815</span><span class="token punctuation">,</span>\n  superPower<span class="token punctuation">:</span> <span class="token string">\'computers\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>'},["code","// bad\nconst story = [\n    once\n  , upon\n  , aTime\n];\n\n// good\nconst story = [\n  once,\n  upon,\n  aTime,\n];\n\n// bad\nconst hero = {\n    firstName: 'Ada'\n  , lastName: 'Lovelace'\n  , birthYear: 1815\n  , superPower: 'computers'\n};\n\n// good\nconst hero = {\n  firstName: 'Ada',\n  lastName: 'Lovelace',\n  birthYear: 1815,\n  superPower: 'computers',\n};"]]],["li",["p",["a",{title:null,href:"#19.2"},"19.2"],"  \u589e\u52a0\u7ed3\u5c3e\u7684\u9017\u53f7: ",["strong","\u9700\u8981"],"\u3002"],["blockquote",["p","\u4e3a\u4ec0\u4e48? \u8fd9\u4f1a\u8ba9 git diffs \u66f4\u5e72\u51c0\u3002\u53e6\u5916\uff0c\u50cf babel \u8fd9\u6837\u7684\u8f6c\u8bd1\u5668\u4f1a\u79fb\u9664\u7ed3\u5c3e\u591a\u4f59\u7684\u9017\u53f7\uff0c\u4e5f\u5c31\u662f\u8bf4\u4f60\u4e0d\u5fc5\u62c5\u5fc3\u8001\u65e7\u6d4f\u89c8\u5668\u7684",["a",{title:null,href:"es5/README.md#commas"},"\u5c3e\u9017\u53f7\u95ee\u9898"],"\u3002"]],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad - git diff without trailing comma</span>\n<span class="token keyword">const</span> hero <span class="token operator">=</span> <span class="token punctuation">{</span>\n     firstName<span class="token punctuation">:</span> <span class="token string">\'Florence\'</span><span class="token punctuation">,</span>\n<span class="token operator">-</span>    lastName<span class="token punctuation">:</span> <span class="token string">\'Nightingale\'</span>\n<span class="token operator">+</span>    lastName<span class="token punctuation">:</span> <span class="token string">\'Nightingale\'</span><span class="token punctuation">,</span>\n<span class="token operator">+</span>    inventorOf<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'coxcomb graph\'</span><span class="token punctuation">,</span> <span class="token string">\'modern nursing\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// good - git diff with trailing comma</span>\n<span class="token keyword">const</span> hero <span class="token operator">=</span> <span class="token punctuation">{</span>\n     firstName<span class="token punctuation">:</span> <span class="token string">\'Florence\'</span><span class="token punctuation">,</span>\n     lastName<span class="token punctuation">:</span> <span class="token string">\'Nightingale\'</span><span class="token punctuation">,</span>\n<span class="token operator">+</span>    inventorOf<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'coxcomb chart\'</span><span class="token punctuation">,</span> <span class="token string">\'modern nursing\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">const</span> hero <span class="token operator">=</span> <span class="token punctuation">{</span>\n  firstName<span class="token punctuation">:</span> <span class="token string">\'Dana\'</span><span class="token punctuation">,</span>\n  lastName<span class="token punctuation">:</span> <span class="token string">\'Scully\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> heroes <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token string">\'Batman\'</span><span class="token punctuation">,</span>\n  <span class="token string">\'Superman\'</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">const</span> hero <span class="token operator">=</span> <span class="token punctuation">{</span>\n  firstName<span class="token punctuation">:</span> <span class="token string">\'Dana\'</span><span class="token punctuation">,</span>\n  lastName<span class="token punctuation">:</span> <span class="token string">\'Scully\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> heroes <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token string">\'Batman\'</span><span class="token punctuation">,</span>\n  <span class="token string">\'Superman\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>'
},["code","// bad - git diff without trailing comma\nconst hero = {\n     firstName: 'Florence',\n-    lastName: 'Nightingale'\n+    lastName: 'Nightingale',\n+    inventorOf: ['coxcomb graph', 'modern nursing']\n}\n\n// good - git diff with trailing comma\nconst hero = {\n     firstName: 'Florence',\n     lastName: 'Nightingale',\n+    inventorOf: ['coxcomb chart', 'modern nursing'],\n}\n\n// bad\nconst hero = {\n  firstName: 'Dana',\n  lastName: 'Scully'\n};\n\nconst heroes = [\n  'Batman',\n  'Superman'\n];\n\n// good\nconst hero = {\n  firstName: 'Dana',\n  lastName: 'Scully',\n};\n\nconst heroes = [\n  'Batman',\n  'Superman',\n];"]]]],["h2","\u5206\u53f7"],["ul",["li",["p",["a",{title:null,href:"#20.1"},"20.1"],"  ",["strong","\u4f7f\u7528\u5206\u53f7"]],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token string">\'Skywalker\'</span>\n  <span class="token keyword">return</span> name\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token string">\'Skywalker\'</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> name<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good (\u9632\u6b62\u51fd\u6570\u5728\u4e24\u4e2a IIFE \u5408\u5e76\u65f6\u88ab\u5f53\u6210\u4e00\u4e2a\u53c2\u6570)</span>\n<span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token string">\'Skywalker\'</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> name<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},["code","// bad\n(function() {\n  const name = 'Skywalker'\n  return name\n})()\n\n// good\n(() => {\n  const name = 'Skywalker';\n  return name;\n})();\n\n// good (\u9632\u6b62\u51fd\u6570\u5728\u4e24\u4e2a IIFE \u5408\u5e76\u65f6\u88ab\u5f53\u6210\u4e00\u4e2a\u53c2\u6570)\n;(() => {\n  const name = 'Skywalker';\n  return name;\n})();"]],["p",["a",{title:null,href:"http://stackoverflow.com/a/7365214/1712802"},"Read more"],"."]]],["h2","\u7c7b\u578b\u8f6c\u6362"],["ul",["li",["p",["a",{title:null,href:"#21.1"},"21.1"],"  \u5728\u8bed\u53e5\u5f00\u59cb\u65f6\u6267\u884c\u7c7b\u578b\u8f6c\u6362\u3002"]],["li",["p",["a",{title:null,href:"#21.2"},"21.2"],"  \u5b57\u7b26\u4e32\uff1a"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">//  => this.reviewScore = 9;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">const</span> totalScore <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>reviewScore <span class="token operator">+</span> <span class="token string">\'\'</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">const</span> totalScore <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reviewScore<span class="token punctuation">)</span><span class="token punctuation">;</span>'},["code","//  => this.reviewScore = 9;\n\n// bad\nconst totalScore = this.reviewScore + '';\n\n// good\nconst totalScore = String(this.reviewScore);"]]],["li",["p",["a",{title:null,href:"#21.3"},"21.3"],"  \u5bf9\u6570\u5b57\u4f7f\u7528 ",["code","parseInt"]," \u8f6c\u6362\uff0c\u5e76\u5e26\u4e0a\u7c7b\u578b\u8f6c\u6362\u7684\u57fa\u6570\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token keyword">const</span> inputValue <span class="token operator">=</span> <span class="token string">\'4\'</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">const</span> val <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Number</span><span class="token punctuation">(</span>inputValue<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">const</span> val <span class="token operator">=</span> <span class="token operator">+</span>inputValue<span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">const</span> val <span class="token operator">=</span> inputValue <span class="token operator">></span><span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">const</span> val <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>inputValue<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">const</span> val <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>inputValue<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">const</span> val <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>inputValue<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},["code","const inputValue = '4';\n\n// bad\nconst val = new Number(inputValue);\n\n// bad\nconst val = +inputValue;\n\n// bad\nconst val = inputValue >> 0;\n\n// bad\nconst val = parseInt(inputValue);\n\n// good\nconst val = Number(inputValue);\n\n// good\nconst val = parseInt(inputValue, 10);"]]],["li",["p",["a",{title:null,href:"#21.4"},"21.4"],"  \u5982\u679c\u56e0\u4e3a\u67d0\u4e9b\u539f\u56e0 parseInt \u6210\u4e3a\u4f60\u6240\u505a\u7684\u4e8b\u7684\u74f6\u9888\u800c\u9700\u8981\u4f7f\u7528\u4f4d\u64cd\u4f5c\u89e3\u51b3",["a",{title:null,href:"http://jsperf.com/coercion-vs-casting/3"},"\u6027\u80fd\u95ee\u9898"],"\u65f6\uff0c\u7559\u4e2a\u6ce8\u91ca\u8bf4\u6e05\u695a\u539f\u56e0\u548c\u4f60\u7684\u76ee\u7684\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// good</span>\n<span class="token comment" spellcheck="true">/**\n * \u4f7f\u7528 parseInt \u5bfc\u81f4\u6211\u7684\u7a0b\u5e8f\u53d8\u6162\uff0c\n * \u6539\u6210\u4f7f\u7528\u4f4d\u64cd\u4f5c\u8f6c\u6362\u6570\u5b57\u5feb\u591a\u4e86\u3002\n */</span>\n<span class="token keyword">const</span> val <span class="token operator">=</span> inputValue <span class="token operator">></span><span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">;</span>'},["code","// good\n/**\n * \u4f7f\u7528 parseInt \u5bfc\u81f4\u6211\u7684\u7a0b\u5e8f\u53d8\u6162\uff0c\n * \u6539\u6210\u4f7f\u7528\u4f4d\u64cd\u4f5c\u8f6c\u6362\u6570\u5b57\u5feb\u591a\u4e86\u3002\n */\nconst val = inputValue >> 0;"]]],["li",["p",["a",{title:null,href:"#21.5"},"21.5"],"  ",["strong","\u6ce8:"]," \u5c0f\u5fc3\u4f7f\u7528\u4f4d\u64cd\u4f5c\u8fd0\u7b97\u7b26\u3002\u6570\u5b57\u4f1a\u88ab\u5f53\u6210 ",["a",{title:null,href:"http://es5.github.io/#x4.3.19"},"64 \u4f4d\u503c"],"\uff0c\u4f46\u662f\u4f4d\u64cd\u4f5c\u8fd0\u7b97\u7b26\u603b\u662f\u8fd4\u56de 32 \u4f4d\u7684\u6574\u6570\uff08",["a",{title:null,href:"http://es5.github.io/#x11.7"},"\u53c2\u8003"],"\uff09\u3002\u4f4d\u64cd\u4f5c\u5904\u7406\u5927\u4e8e 32 \u4f4d\u7684\u6574\u6570\u503c\u65f6\u8fd8\u4f1a\u5bfc\u81f4\u610f\u6599\u4e4b\u5916\u7684\u884c\u4e3a\u3002",["a",{title:null,href:"https://github.com/airbnb/javascript/issues/109"},"\u5173\u4e8e\u8fd9\u4e2a\u95ee\u9898\u7684\u8ba8\u8bba"],"\u3002\u6700\u5927\u7684 32 \u4f4d\u6574\u6570\u662f 2,147,483,647\uff1a"],["pre",{lang:"javascript",highlighted:'<span class="token number">2147483647</span> <span class="token operator">></span><span class="token operator">></span> <span class="token number">0</span> <span class="token comment" spellcheck="true">//=> 2147483647</span>\n<span class="token number">2147483648</span> <span class="token operator">></span><span class="token operator">></span> <span class="token number">0</span> <span class="token comment" spellcheck="true">//=> -2147483648</span>\n<span class="token number">2147483649</span> <span class="token operator">></span><span class="token operator">></span> <span class="token number">0</span> <span class="token comment" spellcheck="true">//=> -2147483647</span>'},["code","2147483647 >> 0 //=> 2147483647\n2147483648 >> 0 //=> -2147483648\n2147483649 >> 0 //=> -2147483647"]]],["li",["p",["a",{title:null,href:"#21.6"},"21.6"],"  \u5e03\u5c14:"],["pre",{lang:"javascript",highlighted:'<span class="token keyword">const</span> age <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">const</span> hasAge <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Boolean</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">const</span> hasAge <span class="token operator">=</span> <span class="token function">Boolean</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">const</span> hasAge <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>age<span class="token punctuation">;</span>'},["code","const age = 0;\n\n// bad\nconst hasAge = new Boolean(age);\n\n// good\nconst hasAge = Boolean(age);\n\n// good\nconst hasAge = !!age;"]]]],["h2","\u547d\u540d\u89c4\u5219"],["ul",["li",["p",["a",{title:null,href:"#22.1"},"22.1"],"  \u907f\u514d\u5355\u5b57\u6bcd\u547d\u540d\u3002\u547d\u540d\u5e94\u5177\u5907\u63cf\u8ff0\u6027\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">function</span> <span class="token function">q</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment" spellcheck="true">// ...stuff...</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">function</span> <span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment" spellcheck="true">// ..stuff..</span>\n<span class="token punctuation">}</span>'},["code","// bad\nfunction q() {\n  // ...stuff...\n}\n\n// good\nfunction query() {\n  // ..stuff..\n}"]]],["li",["p",["a",{title:null,href:"#22.2"},"22.2"],"  \u4f7f\u7528\u9a7c\u5cf0\u5f0f\u547d\u540d\u5bf9\u8c61\u3001\u51fd\u6570\u548c\u5b9e\u4f8b\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">const</span> OBJEcttsssss <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> this_is_my_object <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">function</span> <span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">const</span> thisIsMyObject <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">function</span> <span class="token function">thisIsMyFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>'},["code","// bad\nconst OBJEcttsssss = {};\nconst this_is_my_object = {};\nfunction c() {}\n\n// good\nconst thisIsMyObject = {};\nfunction thisIsMyFunction() {}"]]],["li",["p",["a",{title:null,href:"#22.3"},"22.3"],"  \u4f7f\u7528\u5e15\u65af\u5361\u5f0f\u547d\u540d\u6784\u9020\u51fd\u6570\u6216\u7c7b\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">function</span> <span class="token function">user</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> options<span class="token punctuation">.</span>name<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> bad <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">user</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  name<span class="token punctuation">:</span> <span class="token string">\'nope\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> options<span class="token punctuation">.</span>name<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> good <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  name<span class="token punctuation">:</span> <span class="token string">\'yup\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},["code","// bad\nfunction user(options) {\n  this.name = options.name;\n}\n\nconst bad = new user({\n  name: 'nope',\n});\n\n// good\nclass User {\n  constructor(options) {\n    this.name = options.name;\n  }\n}\n\nconst good = new User({\n  name: 'yup',\n});"]]],["li",["p",["a",{title:null,href:"#22.4"},"22.4"],"  \u4e0d\u8981\u4f7f\u7528\u4e0b\u5212\u7ebf ",["code","_"]," \u7ed3\u5c3e\u6216\u5f00\u5934\u6765\u547d\u540d\u5c5e\u6027\u548c\u65b9\u6cd5\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>__firstName__ <span class="token operator">=</span> <span class="token string">\'Panda\'</span><span class="token punctuation">;</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>firstName_ <span class="token operator">=</span> <span class="token string">\'Panda\'</span><span class="token punctuation">;</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>_firstName <span class="token operator">=</span> <span class="token string">\'Panda\'</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>firstName <span class="token operator">=</span> <span class="token string">\'Panda\'</span><span class="token punctuation">;</span>'},["code","// bad\nthis.__firstName__ = 'Panda';\nthis.firstName_ = 'Panda';\nthis._firstName = 'Panda';\n\n// good\nthis.firstName = 'Panda';"]]],["li",["p",["a",{title:null,href:"#22.5"},"22.5"],"  \u522b\u4fdd\u5b58 ",["code","this"]," \u7684\u5f15\u7528\u3002\u4f7f\u7528\u7bad\u5934\u51fd\u6570\u6216 Function#bind\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>that<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},["code","// bad\nfunction foo() {\n  const self = this;\n  return function() {\n    console.log(self);\n  };\n}\n\n// bad\nfunction foo() {\n  const that = this;\n  return function() {\n    console.log(that);\n  };\n}\n\n// good\nfunction foo() {\n  return () => {\n    console.log(this);\n  };\n}"]]],["li",["p",["a",{title:null,href:"#22.6"},"22.6"],"  \u5982\u679c\u4f60\u7684\u6587\u4ef6\u53ea\u8f93\u51fa\u4e00\u4e2a\u7c7b\uff0c\u90a3\u4f60\u7684\u6587\u4ef6\u540d\u5fc5\u987b\u548c\u7c7b\u540d\u5b8c\u5168\u4fdd\u6301\u4e00\u81f4\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// file contents</span>\n<span class="token keyword">class</span> <span class="token class-name">CheckBox</span> <span class="token punctuation">{</span>\n  <span class="token comment" spellcheck="true">// ...</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> CheckBox<span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// in some other file</span>\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">import</span> CheckBox <span class="token keyword">from</span> <span class="token string">\'./checkBox\'</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">import</span> CheckBox <span class="token keyword">from</span> <span class="token string">\'./check_box\'</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">import</span> CheckBox <span class="token keyword">from</span> <span class="token string">\'./CheckBox\'</span><span class="token punctuation">;</span>'},["code","// file contents\nclass CheckBox {\n  // ...\n}\nexport default CheckBox;\n\n// in some other file\n// bad\nimport CheckBox from './checkBox';\n\n// bad\nimport CheckBox from './check_box';\n\n// good\nimport CheckBox from './CheckBox';"]]],["li",["p",["a",{title:null,href:"#22.7"},"22.7"],"  \u5f53\u4f60\u5bfc\u51fa\u9ed8\u8ba4\u7684\u51fd\u6570\u65f6\u4f7f\u7528\u9a7c\u5cf0\u5f0f\u547d\u540d\u3002\u4f60\u7684\u6587\u4ef6\u540d\u5fc5\u987b\u548c\u51fd\u6570\u540d\u5b8c\u5168\u4fdd\u6301\u4e00\u81f4\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token keyword">function</span> <span class="token function">makeStyleGuide</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> makeStyleGuide<span class="token punctuation">;</span>'},["code","function makeStyleGuide() {\n}\n\nexport default makeStyleGuide;"]]],["li",["p",["a",{title:null,href:"#22.8"},"22.8"],"  \u5f53\u4f60\u5bfc\u51fa\u5355\u4f8b\u3001\u51fd\u6570\u5e93\u3001\u7a7a\u5bf9\u8c61\u65f6\u4f7f\u7528\u5e15\u65af\u5361\u5f0f\u547d\u540d\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token keyword">const</span> AirbnbStyleGuide <span class="token operator">=</span> <span class="token punctuation">{</span>\n  es6<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> AirbnbStyleGuide<span class="token punctuation">;</span>'},["code","const AirbnbStyleGuide = {\n  es6: {\n  }\n};\n\nexport default AirbnbStyleGuide;"]]]],["h2","\u5b58\u53d6\u5668"],["ul",["li",["p",["a",{title:null,href:"#23.1"},"23.1"],"  \u5c5e\u6027\u7684\u5b58\u53d6\u51fd\u6570\u4e0d\u662f\u5fc5\u987b\u7684\u3002"]],["li",["p",["a",{title:null,href:"#23.2"},"23.2"],"  \u5982\u679c\u4f60\u9700\u8981\u5b58\u53d6\u51fd\u6570\u65f6\u4f7f\u7528 ",["code","getVal()"]," \u548c ",["code","setVal('hello')"],"\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\ndragon<span class="token punctuation">.</span><span class="token function">age</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\ndragon<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\ndragon<span class="token punctuation">.</span><span class="token function">age</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\ndragon<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},["code","// bad\ndragon.age();\n\n// good\ndragon.getAge();\n\n// bad\ndragon.age(25);\n\n// good\ndragon.setAge(25);"]]],["li",["p",["a",{title:null,href:"#23.3"},"23.3"],"  \u5982\u679c\u5c5e\u6027\u662f\u5e03\u5c14\u503c\uff0c\u4f7f\u7528 ",["code","isVal()"]," \u6216 ",["code","hasVal()"],"\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>dragon<span class="token punctuation">.</span><span class="token function">age</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>dragon<span class="token punctuation">.</span><span class="token function">hasAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},["code","// bad\nif (!dragon.age()) {\n  return false;\n}\n\n// good\nif (!dragon.hasAge()) {\n  return false;\n}"]]],["li",["p",["a",{title:null,href:"#23.4"},"23.4"],"  \u521b\u5efa ",["code","get()"]," \u548c ",["code","set()"]," \u51fd\u6570\u662f\u53ef\u4ee5\u7684\uff0c\u4f46\u8981\u4fdd\u6301\u4e00\u81f4\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token keyword">class</span> <span class="token class-name">Jedi</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span>options <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> lightsaber <span class="token operator">=</span> options<span class="token punctuation">.</span>lightsaber <span class="token operator">||</span> <span class="token string">\'blue\'</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">\'lightsaber\'</span><span class="token punctuation">,</span> lightsaber<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> val<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},["code","class Jedi {\n  constructor(options = {}) {\n    const lightsaber = options.lightsaber || 'blue';\n    this.set('lightsaber', lightsaber);\n  }\n\n  set(key, val) {\n    this[key] = val;\n  }\n\n  get(key) {\n    return this[key];\n  }\n}"]]]],["h2","\u4e8b\u4ef6"],["ul",["li",["p",["a",{title:null,href:"#24.1"},"24.1"],"  \u5f53\u7ed9\u4e8b\u4ef6\u9644\u52a0\u6570\u636e\u65f6\uff08\u65e0\u8bba\u662f DOM \u4e8b\u4ef6\u8fd8\u662f\u79c1\u6709\u4e8b\u4ef6\uff09\uff0c\u4f20\u5165\u4e00\u4e2a\u54c8\u5e0c\u800c\u4e0d\u662f\u539f\u59cb\u503c\u3002\u8fd9\u6837\u53ef\u4ee5\u8ba9\u540e\u9762\u7684\u8d21\u732e\u8005\u589e\u52a0\u66f4\u591a\u6570\u636e\u5230\u4e8b\u4ef6\u6570\u636e\u800c\u65e0\u9700\u627e\u51fa\u5e76\u66f4\u65b0\u4e8b\u4ef6\u7684\u6bcf\u4e00\u4e2a\u5904\u7406\u5668\u3002\u4f8b\u5982\uff0c\u4e0d\u597d\u7684\u5199\u6cd5\uff1a"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">\'listingUpdated\'</span><span class="token punctuation">,</span> listing<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token operator">...</span>\n\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">\'listingUpdated\'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> listingId<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment" spellcheck="true">// do something with listingId</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'
},["code","// bad\n$(this).trigger('listingUpdated', listing.id);\n\n...\n\n$(this).on('listingUpdated', function(e, listingId) {\n  // do something with listingId\n});"]],["p","\u66f4\u597d\u7684\u5199\u6cd5\uff1a"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// good</span>\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">\'listingUpdated\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> listingId <span class="token punctuation">:</span> listing<span class="token punctuation">.</span>id <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token operator">...</span>\n\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">\'listingUpdated\'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment" spellcheck="true">// do something with data.listingId</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},["code","// good\n$(this).trigger('listingUpdated', { listingId : listing.id });\n\n...\n\n$(this).on('listingUpdated', function(e, data) {\n  // do something with data.listingId\n});"]]]],["h2","jQuery"],["ul",["li",["p",["a",{title:null,href:"#25.1"},"25.1"],"  \u4f7f\u7528 ",["code","$"]," \u4f5c\u4e3a\u5b58\u50a8 jQuery \u5bf9\u8c61\u7684\u53d8\u91cf\u540d\u524d\u7f00\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">const</span> sidebar <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">\'.sidebar\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">const</span> $sidebar <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">\'.sidebar\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},["code","// bad\nconst sidebar = $('.sidebar');\n\n// good\nconst $sidebar = $('.sidebar');"]]],["li",["p",["a",{title:null,href:"#25.2"},"25.2"],"  \u7f13\u5b58 jQuery \u67e5\u8be2\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">function</span> <span class="token function">setSidebar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">\'.sidebar\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment" spellcheck="true">// ...stuff...</span>\n\n  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">\'.sidebar\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token string">\'background-color\'</span><span class="token punctuation">:</span> <span class="token string">\'pink\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">function</span> <span class="token function">setSidebar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> $sidebar <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">\'.sidebar\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  $sidebar<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment" spellcheck="true">// ...stuff...</span>\n\n  $sidebar<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token string">\'background-color\'</span><span class="token punctuation">:</span> <span class="token string">\'pink\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},["code","// bad\nfunction setSidebar() {\n  $('.sidebar').hide();\n\n  // ...stuff...\n\n  $('.sidebar').css({\n    'background-color': 'pink'\n  });\n}\n\n// good\nfunction setSidebar() {\n  const $sidebar = $('.sidebar');\n  $sidebar.hide();\n\n  // ...stuff...\n\n  $sidebar.css({\n    'background-color': 'pink'\n  });\n}"]]],["li",["p",["a",{title:null,href:"#25.3"},"25.3"],"  \u5bf9 DOM \u67e5\u8be2\u4f7f\u7528\u5c42\u53e0 ",["code","$('.sidebar ul')"]," \u6216 \u7236\u5143\u7d20 > \u5b50\u5143\u7d20 ",["code","$('.sidebar > ul')"],"\u3002 ",["a",{title:null,href:"http://jsperf.com/jquery-find-vs-context-sel/16"},"jsPerf"]]],["li",["p",["a",{title:null,href:"#25.4"},"25.4"],"  \u5bf9\u6709\u4f5c\u7528\u57df\u7684 jQuery \u5bf9\u8c61\u67e5\u8be2\u4f7f\u7528 ",["code","find"],"\u3002"],["pre",{lang:"javascript",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">\'ul\'</span><span class="token punctuation">,</span> <span class="token string">\'.sidebar\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">\'.sidebar\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">\'ul\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">\'.sidebar ul\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">\'.sidebar > ul\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n$sidebar<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">\'ul\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},["code","// bad\n$('ul', '.sidebar').hide();\n\n// bad\n$('.sidebar').find('ul').hide();\n\n// good\n$('.sidebar ul').hide();\n\n// good\n$('.sidebar > ul').hide();\n\n// good\n$sidebar.find('ul').hide();"]]]],["h2","ECMAScript 5 \u517c\u5bb9\u6027"],["ul",["li",["p",["a",{title:null,href:"#26.1"},"26.1"],"  \u53c2\u8003 ",["a",{title:null,href:"https://twitter.com/kangax/"},"Kangax"]," \u7684 ES5 ",["a",{title:null,href:"http://kangax.github.com/es5-compat-table/"},"\u517c\u5bb9\u6027"],"\u3002"]]],["h2","ECMAScript 6 \u89c4\u8303"],["ul",["li",["p",["a",{title:null,href:"#27.1"},"27.1"],"  \u4ee5\u4e0b\u662f\u94fe\u63a5\u5230 ES6 \u5404\u4e2a\u7279\u6027\u7684\u5217\u8868\u3002"]],["li",["p",["a",{title:null,href:"#arrow-functions"},"\u7bad\u5934\u51fd\u6570"]]],["li",["p",["a",{title:null,href:"#constructors"},"\u7c7b"]]],["li",["p",["a",{title:null,href:"#es6-object-shorthand"},"\u5bf9\u8c61\u65b9\u6cd5\u7b80\u5199"]]],["li",["p",["a",{title:null,href:"#es6-object-concise"},"\u5bf9\u8c61\u5c5e\u6027\u7b80\u5199"]]],["li",["p",["a",{title:null,href:"#es6-computed-properties"},"\u5bf9\u8c61\u4e2d\u7684\u53ef\u8ba1\u7b97\u5c5e\u6027"]]],["li",["p",["a",{title:null,href:"#es6-template-literals"},"\u6a21\u677f\u5b57\u7b26\u4e32"]]],["li",["p",["a",{title:null,href:"#destructuring"},"\u89e3\u6784"]]],["li",["p",["a",{title:null,href:"#es6-default-parameters"},"\u9ed8\u8ba4\u53c2\u6570"]]],["li",["p",["a",{title:null,href:"#es6-rest"},"Rest"]]],["li",["p",["a",{title:null,href:"#es6-array-spreads"},"\u6570\u7ec4 Spreads"]]],["li",["p",["a",{title:null,href:"#references"},"Let \u53ca Const"]]],["li",["p",["a",{title:null,href:"#iterators-and-generators"},"\u8fed\u4ee3\u5668\u548c\u751f\u6210\u5668"]]],["li",["p",["a",{title:null,href:"#modules"},"\u6a21\u5757"]]]],["h2","\u6d4b\u8bd5"],["ul",["li",["p","\u65e0\u8bba\u4f7f\u7528\u54ea\u4e2a\u6d4b\u8bd5\u6846\u67b6\uff0c\u4f60\u90fd\u5e94\u8be5\u7f16\u5199\u6d4b\u8bd5"]],["li",["p","\u5c3d\u91cf\u5199\u5c0f\u800c\u7eaf\u7684function\uff0c\u5e76\u6700\u5c0f\u5316\u5176\u5f15\u8d77\u53d8\u5316\u7684\u8303\u56f4\u3002"]],["li",["p","\u8c28\u614e\u4f7f\u7528stubs\u548cmocks\uff0c\u5b83\u4eec\u4f1a\u4f7f\u5f97\u4f60\u7684\u6d4b\u8bd5\u53d8\u5f97\u4e0d\u53ef\u9760\u3002"]],["li",["p","\u6211\u4eec\u4e3b\u8981\u4f7f\u7528",["a",{title:null,href:"https://www.npmjs.com/package/mocha"},["code","mocha"]],"\u6765\u6d4b\u8bd5\uff0c",["a",{title:null,href:"https://www.npmjs.com/package/tape"},["code","tape"]]," \u5728\u72ec\u7acb\u7684\u5c0f\u6a21\u5757\u4e2d\u4e5f\u7ecf\u5e38\u7528\u5230\u3002"]],["li",["p","\u5c3d\u529b\u5730\u5b9e\u73b0100\uff05\u7684\u6d4b\u8bd5\u8986\u76d6\u7387\u3002"]],["li",["p","\u5f53\u4f60\u4fee\u590dbug\u65f6\uff0c\u8bb0\u4f4f\u8981\u5199\u56de\u5f52\u6d4b\u8bd5\uff0c\u5426\u5219\u672a\u6765\u8fd8\u662f\u4f1a\u51fa\u95ee\u9898\u3002"]]],["h2","\u6027\u80fd"],["ul",["li",["p",["a",{title:null,href:"http://kellegous.com/j/2013/01/26/layout-performance/"},"On Layout & Web Performance"]]],["li",["p",["a",{title:null,href:"http://jsperf.com/string-vs-array-concat/2"},"String vs Array Concat"]]],["li",["p",["a",{title:null,href:"http://jsperf.com/try-catch-in-loop-cost"},"Try/Catch Cost In a Loop"]]],["li",["p",["a",{title:null,href:"http://jsperf.com/bang-function"},"Bang Function"]]],["li",["p",["a",{title:null,href:"http://jsperf.com/jquery-find-vs-context-sel/13"},"jQuery Find vs Context, Selector"]]],["li",["p",["a",{title:null,href:"http://jsperf.com/innerhtml-vs-textcontent-for-script-text"},"innerHTML vs textContent for script text"]]],["li",["p",["a",{title:null,href:"http://jsperf.com/ya-string-concat"},"Long String Concatenation"]]],["li",["p",["a",{title:null,href:"https://www.quora.com/JavaScript-programming-language-Are-Javascript-functions-like-map-reduce-and-filter-already-optimized-for-traversing-array/answer/Quildreen-Motta"},"Are Javascript functions like ",["code","map()"],", ",["code","reduce()"],", and ",["code","filter()"]," optimized for traversing arrays?"]]],["li",["p","\u7b49\u7b49..."]]],["h2","\u76f8\u5173\u8d44\u6e90\uff08\u82f1\u6587\uff09"],["p",["strong","\u4e86\u89e3 ES6"]],["ul",["li",["p",["a",{title:null,href:"https://people.mozilla.org/~jorendorff/es6-draft.html"},"ECMA 2015 (ES6) \u89c4\u8303\u8349\u6848"]]],["li",["p",["a",{title:null,href:"http://exploringjs.com/"},"ExploringJS"]]],["li",["p",["a",{title:null,href:"https://kangax.github.io/compat-table/es6/"},"ES6 \u517c\u5bb9\u6027\u8868"]]],["li",["p",["a",{title:null,href:"http://es6-features.org/"},"ES6 \u7279\u6027\u5168\u9762\u6982\u51b5"]]]],["p",["strong","\u770b\u770b\u8fd9\u4e2a"]],["ul",["li",["p",["a",{title:null,href:"http://es5.github.com/"},"Annotated ECMAScript 5.1"]]]],["p",["strong","\u5de5\u5177"]],["ul",["li",["p","\u4ee3\u7801\u98ce\u683c\u68c0\u67e5\u5668\uff08Lint\uff09"],["ul",["li",["p",["a",{title:null,href:"http://eslint.org/"},"ESlint"]," - ",["a",{title:null,href:"https://github.com/airbnb/javascript/blob/master/linters/.eslintrc"},"Airbnb Style .eslintrc"]]],["li",["p",["a",{title:null,href:"http://www.jshint.com/"},"JSHint"]," - ",["a",{title:null,href:"https://github.com/airbnb/javascript/blob/master/linters/jshintrc"},"Airbnb Style .jshintrc"]]],["li",["p",["a",{title:null,href:"https://github.com/jscs-dev/node-jscs"},"JSCS"]," - ",["a",{title:null,href:"https://github.com/jscs-dev/node-jscs/blob/master/presets/airbnb.json"},"Airbnb Style Preset"]]]]]],["p","\u53c2\u8003\uff1a",["a",{title:null,href:"https://github.com/airbnb/javascript#testing"},"https://github.com/airbnb/javascript#testing"]]],meta:{category:"\u5f00\u53d1\u89c4\u8303",order:1,title:{"zh-CN":"ES6/ES2015 \u7f16\u7801\u89c4\u8303","en-US":"ES6/ES2015 Style Guide"},filename:"docs/spec/21-es6styleguide.md"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#\u7c7b\u578b",title:"\u7c7b\u578b"},"\u7c7b\u578b"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u5f15\u7528",title:"\u5f15\u7528"},"\u5f15\u7528"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u5bf9\u8c61",title:"\u5bf9\u8c61"},"\u5bf9\u8c61"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u6570\u7ec4",title:"\u6570\u7ec4"},"\u6570\u7ec4"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u89e3\u6784",title:"\u89e3\u6784"},"\u89e3\u6784"]],["li",["a",{className:"bisheng-toc-h2",href:"#Strings",title:"Strings"},"Strings"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u51fd\u6570",title:"\u51fd\u6570"},"\u51fd\u6570"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u7bad\u5934\u51fd\u6570",title:"\u7bad\u5934\u51fd\u6570"},"\u7bad\u5934\u51fd\u6570"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u6784\u9020\u5668",title:"\u6784\u9020\u5668"},"\u6784\u9020\u5668"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u6a21\u5757",title:"\u6a21\u5757"},"\u6a21\u5757"]],["li",["a",{className:"bisheng-toc-h2",href:"#Iterators-and-Generators",title:"Iterators and Generators"},"Iterators and Generators"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u5c5e\u6027",title:"\u5c5e\u6027"},"\u5c5e\u6027"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u53d8\u91cf",title:"\u53d8\u91cf"},"\u53d8\u91cf"]],["li",["a",{className:"bisheng-toc-h2",href:"#Hoisting",title:"Hoisting"},"Hoisting"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u6bd4\u8f83\u8fd0\u7b97\u7b26\u548c\u7b49\u53f7",title:"\u6bd4\u8f83\u8fd0\u7b97\u7b26\u548c\u7b49\u53f7"},"\u6bd4\u8f83\u8fd0\u7b97\u7b26\u548c\u7b49\u53f7"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u4ee3\u7801\u5757",title:"\u4ee3\u7801\u5757"},"\u4ee3\u7801\u5757"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u6ce8\u91ca",title:"\u6ce8\u91ca"},"\u6ce8\u91ca"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u7a7a\u767d",title:"\u7a7a\u767d"},"\u7a7a\u767d"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u9017\u53f7",title:"\u9017\u53f7"},"\u9017\u53f7"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u5206\u53f7",title:"\u5206\u53f7"},"\u5206\u53f7"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u7c7b\u578b\u8f6c\u6362",title:"\u7c7b\u578b\u8f6c\u6362"},"\u7c7b\u578b\u8f6c\u6362"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u547d\u540d\u89c4\u5219",title:"\u547d\u540d\u89c4\u5219"},"\u547d\u540d\u89c4\u5219"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u5b58\u53d6\u5668",title:"\u5b58\u53d6\u5668"},"\u5b58\u53d6\u5668"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u4e8b\u4ef6",title:"\u4e8b\u4ef6"},"\u4e8b\u4ef6"]],["li",["a",{className:"bisheng-toc-h2",href:"#jQuery",title:"jQuery"},"jQuery"]],["li",["a",{className:"bisheng-toc-h2",href:"#ECMAScript-5-\u517c\u5bb9\u6027",title:"ECMAScript 5 \u517c\u5bb9\u6027"},"ECMAScript 5 \u517c\u5bb9\u6027"]],["li",["a",{className:"bisheng-toc-h2",href:"#ECMAScript-6-\u89c4\u8303",title:"ECMAScript 6 \u89c4\u8303"},"ECMAScript 6 \u89c4\u8303"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u6d4b\u8bd5",title:"\u6d4b\u8bd5"},"\u6d4b\u8bd5"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u6027\u80fd",title:"\u6027\u80fd"},"\u6027\u80fd"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u76f8\u5173\u8d44\u6e90\uff08\u82f1\u6587\uff09",title:"\u76f8\u5173\u8d44\u6e90\uff08\u82f1\u6587\uff09"},"\u76f8\u5173\u8d44\u6e90\uff08\u82f1\u6587\uff09"]]]}}});