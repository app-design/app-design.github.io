webpackJsonp([6,173],{857:function(n,s){n.exports={content:["article",["h2","\u57fa\u672c\u89c4\u8303"],["ul",["li",["p","\u6bcf\u4e2a\u6587\u4ef6\u53ea\u5199\u4e00\u4e2a\u6a21\u5757."],["ul",["li",["p","\u4f46\u662f\u591a\u4e2a",["a",{title:null,href:"https://facebook.github.io/react/docs/reusable-components.html#stateless-functions"},"\u65e0\u72b6\u6001\u6a21\u5757"],"\u53ef\u4ee5\u653e\u5728\u5355\u4e2a\u6587\u4ef6\u4e2d. eslint: ",["a",{title:null,href:"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-multi-comp.md#ignorestateless"},["code","react/no-multi-comp"]],"."]]]],["li",["p","\u63a8\u8350\u4f7f\u7528JSX\u8bed\u6cd5."]],["li",["p","\u4e0d\u8981\u4f7f\u7528 ",["code","React.createElement"],"\uff0c\u9664\u975e\u4ece\u4e00\u4e2a\u975eJSX\u7684\u6587\u4ef6\u4e2d\u521d\u59cb\u5316\u4f60\u7684app."]]],["h2","\u521b\u5efa\u6a21\u5757"],["p","   Class vs React.createClass vs stateless  "],["ul",["li",["p","\u5982\u679c\u4f60\u7684\u6a21\u5757\u6709\u5185\u90e8\u72b6\u6001\u6216\u8005\u662f",["code","refs"],", \u63a8\u8350\u4f7f\u7528 ",["code","class extends React.Component"]," \u800c\u4e0d\u662f ",["code","React.createClass"],".\neslint: ",["a",{title:null,href:"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/prefer-es6-class.md"},["code","react/prefer-es6-class"]]," ",["a",{title:null,href:"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/prefer-stateless-function.md"},["code","react/prefer-stateless-function"]]],["pre",{lang:"jsx",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">const</span> Listing <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createClass</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token comment" spellcheck="true">// ...</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>hello<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">class</span> <span class="token class-name">Listing</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token comment" spellcheck="true">// ...</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>hello<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},["code","// bad\nconst Listing = React.createClass({\n  // ...\n  render() {\n    return <div>{this.state.hello}</div>;\n  }\n});\n\n// good\nclass Listing extends React.Component {\n  // ...\n  render() {\n    return <div>{this.state.hello}</div>;\n  }\n}"]],["p","  \u5982\u679c\u4f60\u7684\u6a21\u5757\u6ca1\u6709\u72b6\u6001\u6216\u662f\u6ca1\u6709\u5f15\u7528",["code","refs"],"\uff0c \u63a8\u8350\u4f7f\u7528\u666e\u901a\u51fd\u6570\uff08\u975e\u7bad\u5934\u51fd\u6570\uff09\u800c\u4e0d\u662f\u7c7b:"],["pre",{lang:"jsx",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">class</span> <span class="token class-name">Listing</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>hello<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// bad (relying on function name inference is discouraged)</span>\n<span class="token keyword">const</span> Listing <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> hello <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>hello<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">function</span> <span class="token function">Listing</span><span class="token punctuation">(</span><span class="token punctuation">{</span> hello <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>hello<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},["code","// bad\nclass Listing extends React.Component {\n  render() {\n    return <div>{this.props.hello}</div>;\n  }\n}\n\n// bad (relying on function name inference is discouraged)\nconst Listing = ({ hello }) => (\n  <div>{hello}</div>\n);\n\n// good\nfunction Listing({ hello }) {\n  return <div>{hello}</div>;\n}"]]]],["h2","Mixins"],["ul",["li",["p",["a",{title:null,href:"https://facebook.github.io/react/blog/2016/07/13/mixins-considered-harmful.html"},"\u4e0d\u8981\u4f7f\u7528 mixins"],"."],["blockquote",["p","\u4e3a\u4ec0\u4e48? Mixins \u4f1a\u589e\u52a0\u9690\u5f0f\u7684\u4f9d\u8d56\uff0c\u5bfc\u81f4\u547d\u540d\u51b2\u7a81\uff0c\u5e76\u4e14\u4f1a\u4ee5\u96ea\u7403\u5f0f\u589e\u52a0\u590d\u6742\u5ea6\u3002\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0bMixins\u53ef\u4ee5\u88ab\u66f4\u597d\u7684\u65b9\u6cd5\u66ff\u4ee3\uff0c\u5982\uff1a\u7ec4\u4ef6\u5316\uff0c\u9ad8\u9636\u7ec4\u4ef6\uff0c\u5de5\u5177\u6a21\u5757\u7b49\u3002"]]]],["h2","\u547d\u540d"],["ul",["li",["p",["strong","\u6269\u5c55\u540d"],": React\u6a21\u5757\u4f7f\u7528 ",["code",".jsx"]," \u6269\u5c55\u540d.\n\xa0- ",["strong","\u6587\u4ef6\u540d"],": \u6587\u4ef6\u540d\u4f7f\u7528\u5e15\u65af\u5361\u547d\u540d. \u5982, ",["code","ReservationCard.jsx"],".\n\xa0- ",["strong","\u5f15\u7528\u547d\u540d"],": React\u6a21\u5757\u540d\u4f7f\u7528\u5e15\u65af\u5361\u547d\u540d\uff0c\u5b9e\u4f8b\u4f7f\u7528\u9a86\u9a7c\u5f0f\u547d\u540d. eslint: ",["a",{title:null,href:"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-pascal-case.md"},["code","react/jsx-pascal-case"]]],["pre",{lang:"jsx",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">import</span> reservationCard <span class="token keyword">from</span> <span class="token string">\'./ReservationCard\'</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">import</span> ReservationCard <span class="token keyword">from</span> <span class="token string">\'./ReservationCard\'</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">const</span> ReservationItem <span class="token operator">=</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ReservationCard</span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">const</span> reservationItem <span class="token operator">=</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ReservationCard</span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>'},["code","// bad\nimport reservationCard from './ReservationCard';\n\n// good\nimport ReservationCard from './ReservationCard';\n\n// bad\nconst ReservationItem = <ReservationCard />;\n\n// good\nconst reservationItem = <ReservationCard />;"]]],["li",["p",["strong","\u6a21\u5757\u547d\u540d"],": \u6a21\u5757\u4f7f\u7528\u5f53\u524d\u6587\u4ef6\u540d\u4e00\u6837\u7684\u540d\u79f0. \u6bd4\u5982 ",["code","ReservationCard.jsx"]," \u5e94\u8be5\u5305\u542b\u540d\u4e3a ",["code","ReservationCard"],"\u7684\u6a21\u5757. \u4f46\u662f\uff0c\u5982\u679c\u6574\u4e2a\u6587\u4ef6\u5939\u662f\u4e00\u4e2a\u6a21\u5757\uff0c\u4f7f\u7528 ",["code","index.js"],"\u4f5c\u4e3a\u5165\u53e3\u6587\u4ef6\uff0c\u7136\u540e\u76f4\u63a5\u4f7f\u7528 ",["code","index.js"]," \u6216\u8005\u6587\u4ef6\u5939\u540d\u4f5c\u4e3a\u6a21\u5757\u7684\u540d\u79f0:"],["pre",{lang:"jsx",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">import</span> Footer <span class="token keyword">from</span> <span class="token string">\'./Footer/Footer\'</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">import</span> Footer <span class="token keyword">from</span> <span class="token string">\'./Footer/index\'</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">import</span> Footer <span class="token keyword">from</span> <span class="token string">\'./Footer\'</span><span class="token punctuation">;</span>'},["code","// bad\nimport Footer from './Footer/Footer';\n\n// bad\nimport Footer from './Footer/index';\n\n// good\nimport Footer from './Footer';"]]],["li",["p",["strong","\u9ad8\u9636\u6a21\u5757\u547d\u540d"],": \u5bf9\u4e8e\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u6a21\u5757\uff0c\u5176\u4e2d\u7684\u6a21\u5757\u540d ",["code","displayName"]," \u5e94\u8be5\u4e3a\u9ad8\u9636\u6a21\u5757\u540d\u548c\u4f20\u5165\u6a21\u5757\u540d\u7684\u7ec4\u5408. \u4f8b\u5982, \u9ad8\u9636\u6a21\u5757 ",["code","withFoo()"],", \u5f53\u4f20\u5165\u4e00\u4e2a ",["code","Bar"]," \u6a21\u5757\u7684\u65f6\u5019\uff0c \u751f\u6210\u7684\u6a21\u5757\u540d ",["code","displayName"]," \u5e94\u8be5\u4e3a ",["code","withFoo(Bar)"],"."],["blockquote",["p","\u4e3a\u4ec0\u4e48\uff1f\u4e00\u4e2a\u6a21\u5757\u7684 ",["code","displayName"]," \u53ef\u80fd\u4f1a\u5728\u5f00\u53d1\u8005\u5de5\u5177\u6216\u8005\u9519\u8bef\u4fe1\u606f\u4e2d\u4f7f\u7528\u5230\uff0c\u56e0\u6b64\u6709\u4e00\u4e2a\u80fd\u6e05\u695a\u7684\u8868\u8fbe\u8fd9\u5c42\u5173\u7cfb\u7684\u503c\u80fd\u5e2e\u52a9\u6211\u4eec\u66f4\u597d\u7684\u7406\u89e3\u6a21\u5757\u53d1\u751f\u4e86\u4ec0\u4e48\uff0c\u66f4\u597d\u7684Debug."]],["pre",{lang:"jsx",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">withFoo</span><span class="token punctuation">(</span>WrappedComponent<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">WithFoo</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token operator">&lt;</span>WrappedComponent <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> foo <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">withFoo</span><span class="token punctuation">(</span>WrappedComponent<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">function</span> <span class="token function">WithFoo</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token operator">&lt;</span>WrappedComponent <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> foo <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">const</span> wrappedComponentName <span class="token operator">=</span> WrappedComponent<span class="token punctuation">.</span>displayName\n    <span class="token operator">||</span> WrappedComponent<span class="token punctuation">.</span>name\n    <span class="token operator">||</span> <span class="token string">\'Component\'</span><span class="token punctuation">;</span>\n\n  WithFoo<span class="token punctuation">.</span>displayName <span class="token operator">=</span> <span class="token template-string"><span class="token string">`withFoo(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>wrappedComponentName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)`</span></span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> WithFoo<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},["code","// bad\nexport default function withFoo(WrappedComponent) {\n  return function WithFoo(props) {\n    return <WrappedComponent {...props} foo />;\n  }\n}\n\n// good\nexport default function withFoo(WrappedComponent) {\n  function WithFoo(props) {\n    return <WrappedComponent {...props} foo />;\n  }\n\n  const wrappedComponentName = WrappedComponent.displayName\n    || WrappedComponent.name\n    || 'Component';\n\n  WithFoo.displayName = `withFoo(${wrappedComponentName})`;\n  return WithFoo;\n}"]]],["li",["p",["strong","\u5c5e\u6027\u547d\u540d"],": \u907f\u514d\u4f7f\u7528DOM\u76f8\u5173\u7684\u5c5e\u6027\u6765\u7528\u4f5c\u5176\u4ed6\u7684\u7528\u9014\u3002"],["blockquote",["p","\u4e3a\u4ec0\u4e48\uff1f\u5bf9\u4e8e",["code","style"]," \u548c ",["code","className"],"\u8fd9\u6837\u7684\u5c5e\u6027\u540d\uff0c\u6211\u4eec\u90fd\u4f1a\u9ed8\u8ba4\u5b83\u4eec\u4ee3\u8868\u4e00\u4e9b\u7279\u6b8a\u7684\u542b\u4e49\uff0c\u5982\u5143\u7d20\u7684\u6837\u5f0f\uff0cCSS class\u7684\u540d\u79f0\u3002\u5728\u4f60\u7684\u5e94\u7528\u4e2d\u4f7f\u7528\u8fd9\u4e9b\u5c5e\u6027\u6765\u8868\u793a\u5176\u4ed6\u7684\u542b\u4e49\u4f1a\u4f7f\u4f60\u7684\u4ee3\u7801\u66f4\u96be\u9605\u8bfb\uff0c\u66f4\u96be\u7ef4\u62a4\uff0c\u5e76\u4e14\u53ef\u80fd\u4f1a\u5f15\u8d77bug\u3002"]],["pre",{lang:"jsx",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyComponent</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value">fancy</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyComponent</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fancy<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>'},["code",'// bad\n<MyComponent style="fancy" />\n\n// good\n<MyComponent variant="fancy" />']]]],["h2","\u58f0\u660e\u6a21\u5757"],["ul",["li",["p","\u4e0d\u8981\u4f7f\u7528 ",["code","displayName"]," \u6765\u547d\u540dReact\u6a21\u5757\uff0c\u800c\u662f\u4f7f\u7528\u5f15\u7528\u6765\u547d\u540d\u6a21\u5757\uff0c \u5982 class \u540d\u79f0."],["pre",{lang:"jsx",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> React<span class="token punctuation">.</span><span class="token function">createClass</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  displayName<span class="token punctuation">:</span> <span class="token string">\'ReservationCard\'</span><span class="token punctuation">,</span>\n  <span class="token comment" spellcheck="true">// stuff goes here</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">ReservationCard</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>'},["code","// bad\nexport default React.createClass({\n  displayName: 'ReservationCard',\n  // stuff goes here\n});\n\n// good\nexport default class ReservationCard extends React.Component {\n}"]]]],["h2","\u4ee3\u7801\u5bf9\u9f50"],["ul",["li",["p","\u9075\u5faa\u4ee5\u4e0b\u7684JSX\u8bed\u6cd5\u7f29\u8fdb/\u683c\u5f0f. eslint: ",["a",{title:null,href:"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-closing-bracket-location.md"},["code","react/jsx-closing-bracket-location"]]],["pre",{lang:"jsx",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Foo</span> <span class="token attr-name">superLongParam</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bar<span class="token punctuation">"</span></span>\n     <span class="token attr-name">anotherSuperLongParam</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>baz<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n\n<span class="token comment" spellcheck="true">// good, \u6709\u591a\u884c\u5c5e\u6027\u7684\u8bdd, \u65b0\u5efa\u4e00\u884c\u5173\u95ed\u6807\u7b7e</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Foo</span>\n  <span class="token attr-name">superLongParam</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bar<span class="token punctuation">"</span></span>\n  <span class="token attr-name">anotherSuperLongParam</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>baz<span class="token punctuation">"</span></span>\n<span class="token punctuation">/></span></span>\n\n<span class="token comment" spellcheck="true">// \u82e5\u80fd\u5728\u4e00\u884c\u4e2d\u663e\u793a, \u76f4\u63a5\u5199\u6210\u4e00\u884c</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Foo</span> <span class="token attr-name">bar</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bar<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n\n<span class="token comment" spellcheck="true">// \u5b50\u5143\u7d20\u6309\u7167\u5e38\u89c4\u65b9\u5f0f\u7f29\u8fdb</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Foo</span>\n  <span class="token attr-name">superLongParam</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bar<span class="token punctuation">"</span></span>\n  <span class="token attr-name">anotherSuperLongParam</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>baz<span class="token punctuation">"</span></span>\n<span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Quux</span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Foo</span><span class="token punctuation">></span></span>'},["code",'// bad\n<Foo superLongParam="bar"\n     anotherSuperLongParam="baz" />\n\n// good, \u6709\u591a\u884c\u5c5e\u6027\u7684\u8bdd, \u65b0\u5efa\u4e00\u884c\u5173\u95ed\u6807\u7b7e\n<Foo\n  superLongParam="bar"\n  anotherSuperLongParam="baz"\n/>\n\n// \u82e5\u80fd\u5728\u4e00\u884c\u4e2d\u663e\u793a, \u76f4\u63a5\u5199\u6210\u4e00\u884c\n<Foo bar="bar" />\n\n// \u5b50\u5143\u7d20\u6309\u7167\u5e38\u89c4\u65b9\u5f0f\u7f29\u8fdb\n<Foo\n  superLongParam="bar"\n  anotherSuperLongParam="baz"\n>\n  <Quux />\n</Foo>']]]],["h2","\u5355\u5f15\u53f7\u8fd8\u662f\u53cc\u5f15\u53f7"],["ul",["li",["p","\u5bf9\u4e8eJSX\u5c5e\u6027\u503c\u603b\u662f\u4f7f\u7528\u53cc\u5f15\u53f7(",["code",'"'],"), \u5176\u4ed6\u5747\u4f7f\u7528\u5355\u5f15\u53f7(",["code","'"],"). eslint: ",["a",{title:null,href:"http://eslint.org/docs/rules/jsx-quotes"},["code","jsx-quotes"]]],["blockquote",["p","\u4e3a\u4ec0\u4e48? HTML\u5c5e\u6027\u4e5f\u662f\u7528\u53cc\u5f15\u53f7, \u56e0\u6b64JSX\u7684\u5c5e\u6027\u4e5f\u9075\u5faa\u6b64\u7ea6\u5b9a."]],["pre",{lang:"jsx",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Foo</span> <span class="token attr-name">bar</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">\'</span>bar<span class="token punctuation">\'</span></span> <span class="token punctuation">/></span></span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Foo</span> <span class="token attr-name">bar</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bar<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Foo</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> left<span class="token punctuation">:</span> <span class="token string">"20px"</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Foo</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> left<span class="token punctuation">:</span> <span class="token string">\'20px\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>'},["code","// bad\n<Foo bar='bar' />\n\n// good\n<Foo bar=\"bar\" />\n\n// bad\n<Foo style={{ left: \"20px\" }} />\n\n// good\n<Foo style={{ left: '20px' }} />"]]]],["h2","\u7a7a\u683c"],["ul",["li",["p","\u603b\u662f\u5728\u81ea\u52a8\u5173\u95ed\u7684\u6807\u7b7e\u524d\u52a0\u4e00\u4e2a\u7a7a\u683c\uff0c\u6b63\u5e38\u60c5\u51b5\u4e0b\u4e5f\u4e0d\u9700\u8981\u6362\u884c. eslint: ",["a",{title:null,href:"http://eslint.org/docs/rules/no-multi-spaces"},["code","no-multi-spaces"]],", ",["a",{title:null,href:"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-tag-spacing.md"},["code","react/jsx-tag-spacing"]]],["pre",{lang:"jsx",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Foo</span><span class="token punctuation">/></span></span>\n\n<span class="token comment" spellcheck="true">// very bad</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Foo</span>                 <span class="token punctuation">/></span></span>\n\n<span class="token comment" spellcheck="true">// bad</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Foo</span>\n <span class="token punctuation">/></span></span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Foo</span> <span class="token punctuation">/></span></span>'},["code","// bad\n<Foo/>\n\n// very bad\n<Foo                 />\n\n// bad\n<Foo\n />\n\n// good\n<Foo />"]]],["li",["p","\u4e0d\u8981\u5728JSX ",["code","{}"]," \u5f15\u7528\u62ec\u53f7\u91cc\u4e24\u8fb9\u52a0\u7a7a\u683c. eslint: ",["a",{title:null,href:"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-curly-spacing.md"},["code","react/jsx-curly-spacing"]]],["pre",{lang:"jsx",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Foo</span> <span class="token attr-name">bar</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span> baz <span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Foo</span> <span class="token attr-name">bar</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>baz<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>'},["code","// bad\n<Foo bar={ baz } />\n\n// good\n<Foo bar={baz} />"]]]],["h2","\u5c5e\u6027"],["ul",["li",["p","JSX\u5c5e\u6027\u540d\u4f7f\u7528\u9a86\u9a7c\u5f0f\u98ce\u683c",["code","camelCase"],"."],["pre",{lang:"jsx",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Foo</span>\n  <span class="token attr-name">UserName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hello<span class="token punctuation">"</span></span>\n  <span class="token attr-name">phone_number</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token number">12345678</span><span class="token punctuation">}</span></span>\n<span class="token punctuation">/></span></span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Foo</span>\n  <span class="token attr-name">userName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hello<span class="token punctuation">"</span></span>\n  <span class="token attr-name">phoneNumber</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token number">12345678</span><span class="token punctuation">}</span></span>\n<span class="token punctuation">/></span></span>'},["code",'// bad\n<Foo\n  UserName="hello"\n  phone_number={12345678}\n/>\n\n// good\n<Foo\n  userName="hello"\n  phoneNumber={12345678}\n/>']]],["li",["p","\u5982\u679c\u5c5e\u6027\u503c\u4e3a ",["code","true"],", \u53ef\u4ee5\u76f4\u63a5\u7701\u7565. eslint: ",["a",{title:null,href:"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-boolean-value.md"},["code","react/jsx-boolean-value"]]],["pre",{lang:"jsx",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Foo</span>\n  <span class="token attr-name">hidden</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">}</span></span>\n<span class="token punctuation">/></span></span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Foo</span>\n  <span class="token attr-name">hidden</span>\n<span class="token punctuation">/></span></span>'
},["code","// bad\n<Foo\n  hidden={true}\n/>\n\n// good\n<Foo\n  hidden\n/>"]]],["li",["p",["code","<img>"]," \u6807\u7b7e\u603b\u662f\u6dfb\u52a0 ",["code","alt"]," \u5c5e\u6027. \u5982\u679c\u56fe\u7247\u4ee5presentation(\u611f\u89c9\u662f\u4ee5\u7c7b\u4f3cPPT\u65b9\u5f0f\u663e\u793a?)\u65b9\u5f0f\u663e\u793a\uff0c",["code","alt"]," \u53ef\u4e3a\u7a7a, \u6216\u8005",["code","<img>"]," \u8981\u5305\u542b",["code",'role="presentation"'],". eslint: ",["a",{title:null,href:"https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/alt-text.md"},["code","jsx-a11y/alt-text"]]],["pre",{lang:"jsx",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hello.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hello.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Me</span> <span class="token attr-name">waving</span> <span class="token attr-name">hello"</span> <span class="token punctuation">/></span></span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hello.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hello.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>presentation<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>'},["code",'// bad\n<img src="hello.jpg" />\n\n// good\n<img src="hello.jpg" alt="Me waving hello" />\n\n// good\n<img src="hello.jpg" alt="" />\n\n// good\n<img src="hello.jpg" role="presentation" />']]],["li",["p","\u4e0d\u8981\u5728 ",["code","alt"],' \u503c\u91cc\u4f7f\u7528\u5982 "image", "photo", or "picture"\u5305\u62ec\u56fe\u7247\u542b\u4e49\u8fd9\u6837\u7684\u8bcd\uff0c \u4e2d\u6587\u4e5f\u4e00\u6837. eslint: ',["a",{title:null,href:"https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/img-redundant-alt.md"},["code","jsx-a11y/img-redundant-alt"]]],["blockquote",["p","\u4e3a\u4ec0\u4e48? \u5c4f\u5e55\u52a9\u8bfb\u5668\u5df2\u7ecf\u628a ",["code","img"]," \u6807\u7b7e\u6807\u6ce8\u4e3a\u56fe\u7247\u4e86, \u6240\u4ee5\u6ca1\u6709\u5fc5\u8981\u518d\u5728 ",["code","alt"]," \u91cc\u8bf4\u660e\u4e86."]],["pre",{lang:"jsx",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hello.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Picture</span> <span class="token attr-name">of</span> <span class="token attr-name">me</span> <span class="token attr-name">waving</span> <span class="token attr-name">hello"</span> <span class="token punctuation">/></span></span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hello.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Me</span> <span class="token attr-name">waving</span> <span class="token attr-name">hello"</span> <span class="token punctuation">/></span></span>'},["code",'// bad\n<img src="hello.jpg" alt="Picture of me waving hello" />\n\n// good\n<img src="hello.jpg" alt="Me waving hello" />']]],["li",["p","\u4f7f\u7528\u6709\u6548\u6b63\u786e\u7684 aria ",["code","role"],"\u5c5e\u6027\u503c ",["a",{title:null,href:"https://www.w3.org/TR/wai-aria/roles#role_definitions"},"ARIA roles"],". eslint: ",["a",{title:null,href:"https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/aria-role.md"},["code","jsx-a11y/aria-role"]]],["pre",{lang:"jsx",highlighted:'<span class="token comment" spellcheck="true">// bad - not an ARIA role</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>datepicker<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n\n<span class="token comment" spellcheck="true">// bad - abstract ARIA role</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>range<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>'},["code",'// bad - not an ARIA role\n<div role="datepicker" />\n\n// bad - abstract ARIA role\n<div role="range" />\n\n// good\n<div role="button" />']]],["li",["p","\u4e0d\u8981\u5728\u6807\u7b7e\u4e0a\u4f7f\u7528 ",["code","accessKey"]," \u5c5e\u6027. eslint: ",["a",{title:null,href:"https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-access-key.md"},["code","jsx-a11y/no-access-key"]]],["blockquote",["p","\u4e3a\u4ec0\u4e48? \u5c4f\u5e55\u52a9\u8bfb\u5668\u5728\u952e\u76d8\u5feb\u6377\u952e\u4e0e\u952e\u76d8\u547d\u4ee4\u65f6\u9020\u6210\u7684\u4e0d\u7edf\u4e00\u6027\u4f1a\u5bfc\u81f4\u9605\u8bfb\u6027\u66f4\u52a0\u590d\u6742."]],["pre",{lang:"jsx",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">accessKey</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>h<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token punctuation">/></span></span>'},["code",'// bad\n<div accessKey="h" />\n\n// good\n<div />']]],["li",["p","\u907f\u514d\u4f7f\u7528\u6570\u7ec4\u7684index\u6765\u4f5c\u4e3a\u5c5e\u6027",["code","key"],"\u7684\u503c\uff0c\u63a8\u8350\u4f7f\u7528\u552f\u4e00ID. (",["a",{title:null,href:"https://medium.com/@robinpokorny/index-as-a-key-is-an-anti-pattern-e0349aece318"},"\u4e3a\u4ec0\u4e48?"],")"],["pre",{lang:"jsx",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token punctuation">{</span>todos<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>todo<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span>\n  <span class="token operator">&lt;</span>Todo\n    <span class="token punctuation">{</span><span class="token operator">...</span>todo<span class="token punctuation">}</span>\n    key<span class="token operator">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span>\n  <span class="token operator">/</span><span class="token operator">></span>\n<span class="token punctuation">)</span><span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token punctuation">{</span>todos<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>todo <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>Todo\n    <span class="token punctuation">{</span><span class="token operator">...</span>todo<span class="token punctuation">}</span>\n    key<span class="token operator">=</span><span class="token punctuation">{</span>todo<span class="token punctuation">.</span>id<span class="token punctuation">}</span>\n  <span class="token operator">/</span><span class="token operator">></span>\n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>'},["code","// bad\n{todos.map((todo, index) =>\n  <Todo\n    {...todo}\n    key={index}\n  />\n)}\n\n// good\n{todos.map(todo => (\n  <Todo\n    {...todo}\n    key={todo.id}\n  />\n))}"]]],["li",["p","\u5bf9\u4e8e\u6240\u6709\u975e\u5fc5\u987b\u7684\u5c5e\u6027\uff0c\u603b\u662f\u624b\u52a8\u53bb\u5b9a\u4e49",["code","defaultProps"],"\u5c5e\u6027."],["blockquote",["p","\u4e3a\u4ec0\u4e48? propTypes \u53ef\u4ee5\u4f5c\u4e3a\u6a21\u5757\u7684\u6587\u6863\u8bf4\u660e, \u5e76\u4e14\u58f0\u660e defaultProps \u7684\u8bdd\u610f\u5473\u7740\u9605\u8bfb\u4ee3\u7801\u7684\u4eba\u4e0d\u9700\u8981\u53bb\u5047\u8bbe\u4e00\u4e9b\u9ed8\u8ba4\u503c\u3002\u66f4\u91cd\u8981\u7684\u662f, \u663e\u793a\u7684\u58f0\u660e\u9ed8\u8ba4\u5c5e\u6027\u53ef\u4ee5\u8ba9\u4f60\u7684\u6a21\u5757\u8df3\u8fc7\u5c5e\u6027\u7c7b\u578b\u7684\u68c0\u67e5."]],["pre",{lang:"jsx",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">function</span> <span class="token function">SFC</span><span class="token punctuation">(</span><span class="token punctuation">{</span> foo<span class="token punctuation">,</span> bar<span class="token punctuation">,</span> children <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>foo<span class="token punctuation">}</span><span class="token punctuation">{</span>bar<span class="token punctuation">}</span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\nSFC<span class="token punctuation">.</span>propTypes <span class="token operator">=</span> <span class="token punctuation">{</span>\n  foo<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n  bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">,</span>\n  children<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>node<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">function</span> <span class="token function">SFC</span><span class="token punctuation">(</span><span class="token punctuation">{</span> foo<span class="token punctuation">,</span> bar<span class="token punctuation">,</span> children <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>foo<span class="token punctuation">}</span><span class="token punctuation">{</span>bar<span class="token punctuation">}</span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\nSFC<span class="token punctuation">.</span>propTypes <span class="token operator">=</span> <span class="token punctuation">{</span>\n  foo<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n  bar<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">,</span>\n  children<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>node<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\nSFC<span class="token punctuation">.</span>defaultProps <span class="token operator">=</span> <span class="token punctuation">{</span>\n  bar<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n  children<span class="token punctuation">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>'},["code","// bad\nfunction SFC({ foo, bar, children }) {\n  return <div>{foo}{bar}{children}</div>;\n}\nSFC.propTypes = {\n  foo: PropTypes.number.isRequired,\n  bar: PropTypes.string,\n  children: PropTypes.node,\n};\n\n// good\nfunction SFC({ foo, bar, children }) {\n  return <div>{foo}{bar}{children}</div>;\n}\nSFC.propTypes = {\n  foo: PropTypes.number.isRequired,\n  bar: PropTypes.string,\n  children: PropTypes.node,\n};\nSFC.defaultProps = {\n  bar: '',\n  children: null,\n};"]]]],["h2","Refs"],["ul",["li",["p","\u603b\u662f\u5728Refs\u91cc\u4f7f\u7528\u56de\u8c03\u51fd\u6570. eslint: ",["a",{title:null,href:"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-string-refs.md"},["code","react/no-string-refs"]]],["pre",{lang:"jsx",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Foo</span>\n  <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>myRef<span class="token punctuation">"</span></span>\n<span class="token punctuation">/></span></span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Foo</span>\n  <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>ref<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>myRef <span class="token operator">=</span> ref<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n<span class="token punctuation">/></span></span>'},["code",'// bad\n<Foo\n  ref="myRef"\n/>\n\n// good\n<Foo\n  ref={(ref) => { this.myRef = ref; }}\n/>']]]],["h2","\u62ec\u53f7"],["ul",["li",["p","\u5c06\u591a\u884c\u7684JSX\u6807\u7b7e\u5199\u5728 ",["code","()"],"\u91cc. eslint: ",["a",{title:null,href:"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-wrap-multilines.md"},["code","react/jsx-wrap-multilines"]]],["pre",{lang:"jsx",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyComponent</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>long</span> <span class="token attr-name">body"</span> <span class="token attr-name">foo</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyChild</span> <span class="token punctuation">/></span></span>\n         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>MyComponent</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyComponent</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>long</span> <span class="token attr-name">body"</span> <span class="token attr-name">foo</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyChild</span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>MyComponent</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// good, \u5355\u884c\u53ef\u4ee5\u4e0d\u9700\u8981</span>\n<span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> body <span class="token operator">=</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>hello<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyComponent</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>body<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>MyComponent</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},["code",'// bad\nrender() {\n  return <MyComponent className="long body" foo="bar">\n           <MyChild />\n         </MyComponent>;\n}\n\n// good\nrender() {\n  return (\n    <MyComponent className="long body" foo="bar">\n      <MyChild />\n    </MyComponent>\n  );\n}\n\n// good, \u5355\u884c\u53ef\u4ee5\u4e0d\u9700\u8981\nrender() {\n  const body = <div>hello</div>;\n  return <MyComponent>{body}</MyComponent>;\n}']]]],["h2","\u6807\u7b7e"],["ul",["li",["p","\u5bf9\u4e8e\u6ca1\u6709\u5b50\u5143\u7d20\u7684\u6807\u7b7e\u6765\u8bf4\u603b\u662f\u81ea\u5df1\u5173\u95ed\u6807\u7b7e. eslint: ",["a",{title:null,href:"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/self-closing-comp.md"},["code","react/self-closing-comp"]]],["pre",{lang:"jsx",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Foo</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stuff<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Foo</span><span class="token punctuation">></span></span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Foo</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stuff<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>'},["code",'// bad\n<Foo className="stuff"></Foo>\n\n// good\n<Foo className="stuff" />']]],["li",["p","\u5982\u679c\u6a21\u5757\u6709\u591a\u884c\u7684\u5c5e\u6027\uff0c \u5173\u95ed\u6807\u7b7e\u65f6\u65b0\u5efa\u4e00\u884c. eslint: ",["a",{title:null,href:"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-closing-bracket-location.md"},["code","react/jsx-closing-bracket-location"]]],["pre",{lang:"jsx",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Foo</span>\n  <span class="token attr-name">bar</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bar<span class="token punctuation">"</span></span>\n  <span class="token attr-name">baz</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>baz<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Foo</span>\n  <span class="token attr-name">bar</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bar<span class="token punctuation">"</span></span>\n  <span class="token attr-name">baz</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>baz<span class="token punctuation">"</span></span>\n<span class="token punctuation">/></span></span>'},["code",'// bad\n<Foo\n  bar="bar"\n  baz="baz" />\n\n// good\n<Foo\n  bar="bar"\n  baz="baz"\n/>']]]],["h2","\u51fd\u6570"],["ul",["li",["p","\u4f7f\u7528\u7bad\u5934\u51fd\u6570\u6765\u83b7\u53d6\u672c\u5730\u53d8\u91cf."],["pre",{lang:"jsx",highlighted:'<span class="token keyword">function</span> <span class="token function">ItemList</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span>props<span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Item</span>\n          <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>key<span class="token punctuation">}</span></span>\n          <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">doSomethingWith</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>name<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n      <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},["code","function ItemList(props) {\n  return (\n    <ul>\n      {props.items.map((item, index) => (\n        <Item\n          key={item.key}\n          onClick={() => doSomethingWith(item.name, index)}\n        />\n      ))}\n    </ul>\n  );\n}"]]],["li",["p","\u5f53\u5728 ",["code","render()"]," \u91cc\u4f7f\u7528\u4e8b\u4ef6\u5904\u7406\u65b9\u6cd5\u65f6\uff0c\u63d0\u524d\u5728\u6784\u9020\u51fd\u6570\u91cc\u628a ",["code","this"]," \u7ed1\u5b9a\u4e0a\u53bb. eslint: ",["a",{title:null,href:"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-no-bind.md"},["code","react/jsx-no-bind"]]],["blockquote",["p","\u4e3a\u4ec0\u4e48? \u5728\u6bcf\u6b21 ",["code","render"]," \u8fc7\u7a0b\u4e2d\uff0c \u518d\u8c03\u7528 ",["code","bind"]," \u90fd\u4f1a\u65b0\u5efa\u4e00\u4e2a\u65b0\u7684\u51fd\u6570\uff0c\u6d6a\u8d39\u8d44\u6e90."]],["pre",{lang:"jsx",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token keyword">class</span> <span class="token class-name">extends</span> React<span class="token punctuation">.</span>Component <span class="token punctuation">{</span>\n  <span class="token function">onClickDiv</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment" spellcheck="true">// do stuff</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onClickDiv<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">class</span> <span class="token class-name">extends</span> React<span class="token punctuation">.</span>Component <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">this</span><span class="token punctuation">.</span>onClickDiv <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onClickDiv<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">onClickDiv</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment" spellcheck="true">// do stuff</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onClickDiv<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'
},["code","// bad\nclass extends React.Component {\n  onClickDiv() {\n    // do stuff\n  }\n\n  render() {\n    return <div onClick={this.onClickDiv.bind(this)} />;\n  }\n}\n\n// good\nclass extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClickDiv = this.onClickDiv.bind(this);\n  }\n\n  onClickDiv() {\n    // do stuff\n  }\n\n  render() {\n    return <div onClick={this.onClickDiv} />;\n  }\n}"]]],["li",["p","\u5728React\u6a21\u5757\u4e2d\uff0c\u4e0d\u8981\u7ed9\u6240\u8c13\u7684\u79c1\u6709\u51fd\u6570\u6dfb\u52a0 ",["code","_"]," \u524d\u7f00\uff0c\u672c\u8d28\u4e0a\u5b83\u5e76\u4e0d\u662f\u79c1\u6709\u7684."],["blockquote",["p","\u4e3a\u4ec0\u4e48\uff1f",["code","_"]," \u4e0b\u5212\u7ebf\u524d\u7f00\u5728\u67d0\u4e9b\u8bed\u8a00\u4e2d\u901a\u5e38\u88ab\u7528\u6765\u8868\u793a\u79c1\u6709\u53d8\u91cf\u6216\u8005\u51fd\u6570\u3002\u4f46\u662f\u4e0d\u50cf\u5176\u4ed6\u7684\u4e00\u4e9b\u8bed\u8a00\uff0c\u5728JS\u4e2d\u6ca1\u6709\u539f\u751f\u652f\u6301\u6240\u8c13\u7684\u79c1\u6709\u53d8\u91cf\uff0c\u6240\u6709\u7684\u53d8\u91cf\u51fd\u6570\u90fd\u662f\u5171\u6709\u7684\u3002\u5c3d\u7ba1\u4f60\u7684\u610f\u56fe\u662f\u4f7f\u5b83\u79c1\u6709\u5316\uff0c\u5728\u4e4b\u524d\u52a0\u4e0a\u4e0b\u5212\u7ebf\u5e76\u4e0d\u4f1a\u4f7f\u8fd9\u4e9b\u53d8\u91cf\u79c1\u6709\u5316\uff0c\u5e76\u4e14\u6240\u6709\u7684\u5c5e\u6027\uff08\u5305\u62ec\u6709\u4e0b\u5212\u7ebf\u524d\u7f00\u53ca\u6ca1\u6709\u524d\u7f00\u7684\uff09\u90fd\u5e94\u8be5\u88ab\u89c6\u4e3a\u662f\u5171\u6709\u7684\u3002\u4e86\u89e3\u66f4\u591a\u8be6\u60c5\u8bf7\u67e5\u770bIssue ",["a",{title:null,href:"https://github.com/airbnb/javascript/issues/1024"},"#1024"],", \u548c ",["a",{title:null,href:"https://github.com/airbnb/javascript/issues/490"},"#490"]," \u3002"]],["pre",{lang:"jsx",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\nReact<span class="token punctuation">.</span><span class="token function">createClass</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">_onClickSubmit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment" spellcheck="true">// do stuff</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  <span class="token comment" spellcheck="true">// other stuff</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token keyword">class</span> <span class="token class-name">extends</span> React<span class="token punctuation">.</span>Component <span class="token punctuation">{</span>\n  <span class="token function">onClickSubmit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment" spellcheck="true">// do stuff</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment" spellcheck="true">// other stuff</span>\n<span class="token punctuation">}</span>'},["code","// bad\nReact.createClass({\n  _onClickSubmit() {\n    // do stuff\n  },\n\n  // other stuff\n});\n\n// good\nclass extends React.Component {\n  onClickSubmit() {\n    // do stuff\n  }\n\n  // other stuff\n}"]]],["li",["p","\u5728 ",["code","render"]," \u65b9\u6cd5\u4e2d\u603b\u662f\u786e\u4fdd ",["code","return"]," \u8fd4\u56de\u503c. eslint: ",["a",{title:null,href:"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/require-render-return.md"},["code","react/require-render-return"]]],["pre",{lang:"jsx",highlighted:'<span class="token comment" spellcheck="true">// bad</span>\n<span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token punctuation">/></span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// good</span>\n<span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token punctuation">/></span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},["code","// bad\nrender() {\n  (<div />);\n}\n\n// good\nrender() {\n  return (<div />);\n}"]]]],["h2","\u6392\u5e8f"],["ul",["li",["p","\u7ee7\u627f ",["code","React.Component"]," \u7684class\u7684\u6392\u5e8f:"]],["li",["p","\u53ef\u9009\u7684 ",["code","static"]," \u65b9\u6cd5"]],["li",["p",["code","constructor"]," \u6784\u9020\u51fd\u6570"]],["li",["p",["code","getChildContext"]," \u83b7\u53d6\u5b50\u5143\u7d20\u5185\u5bb9"]],["li",["p",["code","componentWillMount"]," \u6a21\u5757\u6e32\u67d3\u524d"]],["li",["p",["code","componentDidMount"]," \u6a21\u5757\u6e32\u67d3\u540e"]],["li",["p",["code","componentWillReceiveProps"]," \u6a21\u5757\u5c06\u63a5\u53d7\u65b0\u7684\u6570\u636e"]],["li",["p",["code","shouldComponentUpdate"]," \u5224\u65ad\u6a21\u5757\u9700\u4e0d\u9700\u8981\u91cd\u65b0\u6e32\u67d3"]],["li",["p",["code","componentWillUpdate"]," \u4e0a\u9762\u7684\u65b9\u6cd5\u8fd4\u56de ",["code","true"],"\uff0c \u6a21\u5757\u5c06\u91cd\u65b0\u6e32\u67d3"]],["li",["p",["code","componentDidUpdate"]," \u6a21\u5757\u6e32\u67d3\u7ed3\u675f"]],["li",["p",["code","componentWillUnmount"]," \u6a21\u5757\u5c06\u4eceDOM\u4e2d\u6e05\u9664, \u505a\u4e00\u4e9b\u6e05\u7406\u4efb\u52a1"]],["li",["p",["em","\u70b9\u51fb\u56de\u8c03\u6216\u8005\u4e8b\u4ef6\u5904\u7406\u5668"]," \u5982 ",["code","onClickSubmit()"]," \u6216 ",["code","onChangeDescription()"]]],["li",["p",["em",["code","render"]," \u91cc\u7684 getter \u65b9\u6cd5"]," \u5982 ",["code","getSelectReason()"]," \u6216 ",["code","getFooterContent()"]]],["li",["p",["em","\u53ef\u9009\u7684 render \u65b9\u6cd5"]," \u5982 ",["code","renderNavigation()"]," \u6216 ",["code","renderProfilePicture()"]]],["li",["p",["code","render"]," render() \u65b9\u6cd5"]],["li",["p","\u5982\u4f55\u5b9a\u4e49 ",["code","propTypes"],", ",["code","defaultProps"],", ",["code","contextTypes"],"  \u7b49\u5c5e\u6027..."],["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> PropTypes <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> propTypes <span class="token operator">=</span> <span class="token punctuation">{</span>\n  id<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n  url<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n  text<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> defaultProps <span class="token operator">=</span> <span class="token punctuation">{</span>\n  text<span class="token punctuation">:</span> <span class="token string">\'Hello World\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Link</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token keyword">static</span> <span class="token function">methodsAreOk</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>url<span class="token punctuation">}</span></span> <span class="token attr-name">data-id</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>id<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>text<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nLink<span class="token punctuation">.</span>propTypes <span class="token operator">=</span> propTypes<span class="token punctuation">;</span>\nLink<span class="token punctuation">.</span>defaultProps <span class="token operator">=</span> defaultProps<span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Link<span class="token punctuation">;</span>'},["code","import React, { PropTypes } from 'react';\n\nconst propTypes = {\n  id: PropTypes.number.isRequired,\n  url: PropTypes.string.isRequired,\n  text: PropTypes.string,\n};\n\nconst defaultProps = {\n  text: 'Hello World',\n};\n\nclass Link extends React.Component {\n  static methodsAreOk() {\n    return true;\n  }\n\n  render() {\n    return <a href={this.props.url} data-id={this.props.id}>{this.props.text}</a>;\n  }\n}\n\nLink.propTypes = propTypes;\nLink.defaultProps = defaultProps;\n\nexport default Link;"]]],["li",["p",["code","React.createClass"]," \u7684\u751f\u547d\u5468\u671f\u51fd\u6570\uff0c\u4e0e\u4f7f\u7528class\u7a0d\u6709\u4e0d\u540c: eslint: ",["a",{title:null,href:"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/sort-comp.md"},["code","react/sort-comp"]]]],["li",["p",["code","displayName"]," \u8bbe\u5b9a\u6a21\u5757\u540d\u79f0"]],["li",["p",["code","propTypes"]," \u8bbe\u7f6e\u5c5e\u6027\u7684\u7c7b\u578b"]],["li",["p",["code","contextTypes"]," \u8bbe\u7f6e\u4e0a\u4e0b\u6587\u7c7b\u578b"]],["li",["p",["code","childContextTypes"]," \u8bbe\u7f6e\u5b50\u5143\u7d20\u4e0a\u4e0b\u6587\u7c7b\u578b"]],["li",["p",["code","mixins"]," \u6dfb\u52a0\u4e00\u4e9bmixins"]],["li",["p",["code","statics"]]],["li",["p",["code","defaultProps"]," \u8bbe\u7f6e\u9ed8\u8ba4\u7684\u5c5e\u6027\u503c"]],["li",["p",["code","getDefaultProps"]," \u83b7\u53d6\u9ed8\u8ba4\u5c5e\u6027\u503c"]],["li",["p",["code","getInitialState"]," \u6216\u8005\u521d\u59cb\u72b6\u6001"]],["li",["p",["code","getChildContext"]]],["li",["p",["code","componentWillMount"]]],["li",["p",["code","componentDidMount"]]],["li",["p",["code","componentWillReceiveProps"]]],["li",["p",["code","shouldComponentUpdate"]]],["li",["p",["code","componentWillUpdate"]]],["li",["p",["code","componentDidUpdate"]]],["li",["p",["code","componentWillUnmount"]]],["li",["p",["em","clickHandlers or eventHandlers"]," like ",["code","onClickSubmit()"]," or ",["code","onChangeDescription()"]]],["li",["p",["em","getter methods for ",["code","render"]]," like ",["code","getSelectReason()"]," or ",["code","getFooterContent()"]]],["li",["p",["em","Optional render methods"]," like ",["code","renderNavigation()"]," or ",["code","renderProfilePicture()"]]],["li",["p",["code","render"]]]],["h2","isMounted"],["ul",["li",["p","\u4e0d\u8981\u518d\u4f7f\u7528 ",["code","isMounted"],". eslint: ",["a",{title:null,href:"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-is-mounted.md"},["code","react/no-is-mounted"]]],["blockquote",["p","\u4e3a\u4ec0\u4e48? ",["span",["code","isMounted"]," \u53cd\u4eba\u7c7b\u8bbe\u8ba1\u6a21\u5f0f:()"],", \u5728 ES6 classes \u4e2d\u65e0\u6cd5\u4f7f\u7528\uff0c \u5b98\u65b9\u5c06\u5728\u672a\u6765\u7684\u7248\u672c\u91cc\u5220\u9664\u6b64\u65b9\u6cd5."]],["p",["span","anti-pattern"],": ",["a",{title:null,href:"https://facebook.github.io/react/blog/2015/12/16/ismounted-antipattern.html"},"https://facebook.github.io/react/blog/2015/12/16/ismounted-antipattern.html"]]]]],meta:{category:"\u5f00\u53d1\u89c4\u8303",order:0,title:{"zh-CN":"React/JSX \u7f16\u7801\u89c4\u8303","en-US":"React/JSX Style Guide"},filename:"docs/spec/20-reactstyleguide.md"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#\u57fa\u672c\u89c4\u8303",title:"\u57fa\u672c\u89c4\u8303"},"\u57fa\u672c\u89c4\u8303"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u521b\u5efa\u6a21\u5757",title:"\u521b\u5efa\u6a21\u5757"},"\u521b\u5efa\u6a21\u5757"]],["li",["a",{className:"bisheng-toc-h2",href:"#Mixins",title:"Mixins"},"Mixins"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u547d\u540d",title:"\u547d\u540d"},"\u547d\u540d"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u58f0\u660e\u6a21\u5757",title:"\u58f0\u660e\u6a21\u5757"},"\u58f0\u660e\u6a21\u5757"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u4ee3\u7801\u5bf9\u9f50",title:"\u4ee3\u7801\u5bf9\u9f50"},"\u4ee3\u7801\u5bf9\u9f50"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u5355\u5f15\u53f7\u8fd8\u662f\u53cc\u5f15\u53f7",title:"\u5355\u5f15\u53f7\u8fd8\u662f\u53cc\u5f15\u53f7"},"\u5355\u5f15\u53f7\u8fd8\u662f\u53cc\u5f15\u53f7"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u7a7a\u683c",title:"\u7a7a\u683c"},"\u7a7a\u683c"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u5c5e\u6027",title:"\u5c5e\u6027"},"\u5c5e\u6027"]],["li",["a",{className:"bisheng-toc-h2",href:"#Refs",title:"Refs"},"Refs"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u62ec\u53f7",title:"\u62ec\u53f7"},"\u62ec\u53f7"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u6807\u7b7e",title:"\u6807\u7b7e"},"\u6807\u7b7e"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u51fd\u6570",title:"\u51fd\u6570"},"\u51fd\u6570"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u6392\u5e8f",title:"\u6392\u5e8f"},"\u6392\u5e8f"]],["li",["a",{className:"bisheng-toc-h2",href:"#isMounted",title:"isMounted"},"isMounted"]]]}}});